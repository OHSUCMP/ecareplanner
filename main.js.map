{"version":3,"sources":["./src/app/clinical-imaging-results/clinical-imaging-results.component.ts","./src/app/clinical-imaging-results/clinical-imaging-results.component.html","./src/app/services/careplan.service.ts","./src/app/pipes/null-check.pipe.ts","./src/app/datamodel/vitalSigns.ts","./src/app/clinical-history-results/clinical-history-results.component.ts","./src/app/clinical-history-results/clinical-history-results.component.html","./src/app/app-material-module/app-material-module.module.ts","./src/app/goals-dialog/goal-dialog.component.ts","./src/app/goals-dialog/goal-dialog.component.html","./src/app/active-orders-panel/active-orders-panel.component.ts","./src/app/active-orders-panel/active-orders-panel.component.html","./src/app/maintenance-and-interventions/maintenance-and-interventions.component.ts","./src/app/maintenance-and-interventions/maintenance-and-interventions.component.html","./src/app/services/service-request.service.ts","./src/app/clinical-questionaires-results/clinical-questionaires-results.component.ts","./src/app/clinical-questionaires-results/clinical-questionaires-results.component.html","./src/app/consolidated-goals/consolidated-goals.component.ts","./src/app/consolidated-goals/consolidated-goals.component.html","./src/app/uacr/uacr.component.ts","./src/app/uacr/uacr.component.html","./src/app/clinical-activities-results/clinical-activities-results.component.ts","./src/app/clinical-activities-results/clinical-activities-results.component.html","./src/app/medication-dialog/medication-dialog.component.ts","./src/app/medication-dialog/medication-dialog.component.html","./src/app/services/education.service.ts","./src/app/services/counseling.service.ts","./src/app/clinical-test-results/clinical-test-results.component.ts","./src/app/clinical-test-results/clinical-test-results.component.html","./src/app/services/referrals.service.ts","./src/environments/environment.ts","./src/app/active-diagnosis-panel/active-diagnosis-panel.component.ts","./src/app/active-diagnosis-panel/active-diagnosis-panel.component.html","./src/app/clinical-procedure-results/clinical-procedure-results.component.ts","./src/app/clinical-procedure-results/clinical-procedure-results.component.html","./src/app/services/data.service.ts","./src/app/launch/launch.ts","./src/app/launch/launch.html","./src/app/e-gfr/e-gfr.component.ts","./src/app/e-gfr/e-gfr.component.html","./src/app/social-concern-panel/social-concern-panel.component.ts","./src/app/social-concern-panel/social-concern-panel.component.html","./src/app/inactive-diagnosis-panel/inactive-diagnosis-panel.component.ts","./src/app/inactive-diagnosis-panel/inactive-diagnosis-panel.component.html","./src/app/counseling-panel/counseling-panel.component.ts","./src/app/counseling-panel/counseling-panel.component.html","./src/app/services/medication.service.ts","./node_modules/e-care-common-data-services/build/module/resources lazy ^\\.\\/.*\\.json$ namespace object","./src/app/health-status/health-status.component.ts","./src/app/health-status/health-status.component.html","./src/app/health.guard.ts","./src/app/bpgraph/bpgraph.component.ts","./src/app/bpgraph/bpgraph.component.html","./src/app/clinical-goals/clinical-goals.component.ts","./src/app/clinical-goals/clinical-goals.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/weight-over-time/weight-over-time.component.ts","./src/app/weight-over-time/weight-over-time.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/clinical-therapy-results/clinical-therapy-results.component.ts","./src/app/clinical-therapy-results/clinical-therapy-results.component.html","./src/app/testgraph1/testgraph1.component.ts","./src/app/testgraph1/testgraph1.component.html","./src/app/lab-test-result/lab-test-result.component.ts","./src/app/lab-test-result/lab-test-result.component.html","./src/app/goals/course-dialog.component.ts","./src/app/goals/course-dialog.component.html","./src/app/common/constants.ts","./src/app/app.module.ts","./src/app/blood-pressure/blood-pressure.component.ts","./src/app/blood-pressure/blood-pressure.component.html","./src/app/diagnosis-panel/diagnosis-panel.component.ts","./src/app/diagnosis-panel/diagnosis-panel.component.html","./src/app/demographics-panel/demographics-panel.component.ts","./src/app/demographics-panel/demographics-panel.component.html","./src/app/services/observations.service.ts","./src/app/services/contacts.service.ts","./src/app/goals/goals.component.ts","./src/app/goals/goals.component.html","./src/app/datamodel/mockData.ts","./src/app/datamodel/uacr.ts","./src/app/health-and-social-concerns/health-and-social-concerns.component.ts","./src/app/health-and-social-concerns/health-and-social-concerns.component.html","./src/app/datamodel/weight-over-time.ts","./src/app/medication-panel/medication-panel.component.ts","./src/app/medication-panel/medication-panel.component.html","./src/app/diagnosis-dialog/diagnosis-dialog.component.ts","./src/app/diagnosis-dialog/diagnosis-dialog.component.html","./src/app/services/subject-data-service.service.ts","./src/app/log/log-service.ts","./src/app/clinical-exam-results/clinical-exam-results.component.ts","./src/app/clinical-exam-results/clinical-exam-results.component.html","./src/app/util/utility-functions.ts","./src/app/patient-goals/patient-goals.component.ts","./src/app/patient-goals/patient-goals.component.html","./src/app/education-panel/education-panel.component.ts","./src/app/education-panel/education-panel.component.html","./src/app/patient-choices/patient-choices.component.ts","./src/app/patient-choices/patient-choices.component.html","./src/app/interceptors/404.retry.interceptor.ts","./src/app/log/index.ts","./src/app/services/message.service.ts","./src/app/app-routing.module.ts","./src/app/care-team/care-team.component.ts","./src/app/care-team/care-team.component.html","./src/app/referral-panel/referral-panel.component.ts","./src/app/referral-panel/referral-panel.component.html","./src/app/datamodel/egfr.ts","./src/app/target-values/target-values.component.ts","./src/app/target-values/target-values.component.html","./src/main.ts","./src/app/services/goals-data-service.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-imaging-results',\n  templateUrl: './clinical-imaging-results.component.html',\n  styleUrls: ['./clinical-imaging-results.component.css']\n})\nexport class ClinicalImagingResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n  }\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n  }\n}\n","<div class=\"group-header\">Imaging Results</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n\n\n  <tr *ngFor=\"let res of dataservice.imaging\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n</table>\n\n","import { CarePlan } from 'fhir/r4';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport {\n  getCareplan as EccGetCareplan,\n  getBestCareplan as EccGetBestCareplan\n} from 'e-care-common-data-services';\nimport { environment} from '../../environments/environment';\nimport { MessageService } from './message.service';\n\n@Injectable({providedIn: 'root'})\n/* cc-careplan-betsy-ckd */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CareplanService {\n\n  private baseURL = '/find/best/careplan';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient,  private messageService: MessageService) { }\n\n  /** GET careplan by id. Will 404 if id not found */\n  getCarePlan(id: string): Observable<CarePlan> {\n    // const url = `${environment.mccapiUrl}${this.baseURL}/${id}`;\n\n    return from(EccGetCareplan(id)).pipe(\n      tap(_ => this.log(`fetched careplan id=${id}`)),\n      catchError(this.handleError<CarePlan>(`getCarePlan id=${id}`))\n    );\n  }\n\n  /** GET careplans by subject id. Will 404 if id not found */\n  getCarePlansBySubject(subjectId: string): Observable<CarePlan[]> {\n    // const url = `${environment.mccapiUrl}${this.baseURL}?subject=${subjectId}`;\n\n    return from(EccGetBestCareplan(subjectId)).pipe(\n      tap(_ => this.log(`fetched careplan subjectId=${subjectId}`)),\n      catchError(this.handleError<CarePlan[]>(`getCarePlansBySubject subjectId=${subjectId}`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`careplan-service: ${message}`);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'nullCheck' })\nexport class NullCheckPipe implements PipeTransform {\n    transform(value: string): string {\n        if (value) {\n            let testValue: string = value.toUpperCase();\n            if (testValue === \"Undescribed code null\".toUpperCase()) return \"\";\n            if (testValue === \"null\".toUpperCase()) return \"\";\n            if (testValue === \"Undefined\".toUpperCase()) return \"\";\n            if (testValue === \"undefined onward\".toUpperCase()) return \"\";\n            if (testValue.indexOf(\"null\".toUpperCase()) > -1) return \"\";\n        }\n        return value;\n    }\n}","import {ChartData, ChartDataSets, ChartOptions, ChartPoint} from 'chart.js';\nimport moment from 'moment';\nimport {Label} from 'ng2-charts';\nimport {getLineChartOptionsObject} from '../util/utility-functions';\n\ninterface VitalSignsTableData {\n  date?: Date;\n  systolic?: number;\n  diastolic?: number;\n}\n\ninterface VitalSignsData {\n  date?: Date;\n  value?: number;\n}\n\ninterface VitalSignsDataForDisplay {\n  date?: Date;\n  value?: number;\n}\n\ninterface VitalSignsChartData {\n  data?: Array<VitalSignsData>;\n  label?: string;  /* Systolic, Diastolic */\n  fill?: boolean;  /* false */\n}\n\ninterface VitalSigns {\n  mostRecentSystolic?: VitalSignsDataForDisplay;\n  mostRecentDiastolic?: VitalSignsDataForDisplay;\n  tableData?: Array<VitalSignsTableData>;\n  chartData?: Array<ChartDataSets>;\n  xAxisLabels?: Array<Label>;\n  suggestedMin?: moment.Moment;\n  suggestedMax?: moment.Moment;\n  lineChartOptions?: ChartOptions;\n}\n\nconst emptyVitalSignsData: ChartPoint = {};\nconst emptyVitalSignsTableData: VitalSignsTableData[] = [];\nconst emptyVitalSignsChartData: ChartDataSets[] = [\n  {\n    data: [emptyVitalSignsData],\n    fill: false,\n    label: 'Systolic'\n  },\n  {\n    data: [emptyVitalSignsData],\n    fill: false,\n    label: 'Diastolic'\n  }];\n\nconst emptyVitalSigns: VitalSigns = {\n  mostRecentSystolic: {},\n  mostRecentDiastolic: {},\n  tableData: emptyVitalSignsTableData,\n  chartData: emptyVitalSignsChartData,\n  xAxisLabels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  suggestedMin: moment('2020-01-01'),\n  suggestedMax: moment('2020-06-30'),\n  lineChartOptions: getLineChartOptionsObject(50, 180, moment('2020-01-01'),  moment('2020-06-30'))\n};\n\nexport {\n  VitalSignsTableData,\n  VitalSignsData,\n  VitalSignsChartData,\n  VitalSigns,\n  emptyVitalSigns,\n  emptyVitalSignsChartData,\n  emptyVitalSignsTableData,\n  emptyVitalSignsData\n};\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-history-results',\n  templateUrl: './clinical-history-results.component.html',\n  styleUrls: ['./clinical-history-results.component.css']\n})\nexport class ClinicalHistoryResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n   }\n\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n   }\n\n}\n","<div class=\"group-header\">History</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n\n\n  <tr *ngFor=\"let res of dataservice.history\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n// import { BrowserModule } from '@angular/platform-browser';\n// import { NgModule } from '@angular/core';\n\n// import { AppComponent } from './app.component';\n// import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// import {MatRadioModule} from '@angular/material/radio';\n\n// import {MatFormFieldModule} from '@angular/material/form-field';\n\n// mport {BrowserModule} from '@angular/platform-browser';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n// import {MaterialExampleModule} from '../material.module';\n// import {RadioOverviewExample} from './radio-overview-example';\n// import {FormsModule, ReactiveFormsModule} from '@angular/forms';\n// import {MatNativeDateModule} from '@angular/material/core';\n// import {HttpClientModule} from '@angular/common/http';\n\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule, ReactiveFormsModule,\n    CommonModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatFormFieldModule,\n    FormsModule, ReactiveFormsModule,\n  ]\n})\n\nexport class AppMaterialModuleModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ConditionHistory, GoalSummary} from '../generated-data-api';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { MccGoalSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Component({\n  selector: 'app-medication-dialog',\n  templateUrl: './goal-dialog.component.html',\n  styleUrls: ['./goal-dialog.component.css']\n})\nexport class GoalDialogComponent implements OnInit {\n\n\n\n\n  // displayedColumns: string[] = ['lifecycleStatus', 'description', 'achievementStatus'];\n  // lifecycleStatus: string;\n  // description: string;\n  // achievementStatus: string;\n  theGoal: MccGoalSummary;\n\n\n\n  constructor(private dialogRef: MatDialogRef<GoalDialogComponent>,\n              @Inject(MAT_DIALOG_DATA)  goal) {\n    console.log('GoalDialogComponentGoalDialogComponent ' +JSON.stringify(goal));\n    this.theGoal = goal;\n    ;\n\n\n  }\n\n  ngOnInit(): void {\n    // this.dataSource = new MatTableDataSource(this.history);\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<h3 mat-dialog-title>Goal Details</h3>\n<mat-dialog-content>\n  <table style=\"width:100%\" border=\"1\">\n    <tr>\n      <td>Description</td>\n      <td>{{theGoal.description}}</td>\n    </tr>\n    <tr>\n      <td>Achievement</td>\n      <td><content *ngIf=\"theGoal.achievementStatus.text\">{{theGoal.achievementStatus.text}}</content></td>\n    </tr>\n    <tr>\n      <td>Lifecycle Status</td>\n      <td><content *ngIf=\"theGoal.lifecycleStatus\">{{theGoal.lifecycleStatus}}</content></td>\n    </tr>\n    <tr>\n      <td>Start Date</td>\n      <td><content *ngIf=\"theGoal.startDateText\">{{theGoal.startDateText}}</content></td>\n    </tr>\n    <tr>\n      <td>Target</td>\n      <td>\n\n\n        <content *ngFor=\"let target of theGoal.targets\">{{target.measure.text}}</content>\n      </td>\n    </tr>\n    <tr>\n      <td>Target Date</td>\n      <td><content *ngIf=\"theGoal.targetDateText\">{{theGoal.targetDateText}}</content></td>\n    </tr>\n    <tr>\n      <td>Addresses</td>\n      <td>\n        <li *ngFor=\"let addresses of theGoal.addresses\">{{addresses.display}}</li>\n      </td>\n    </tr>\n    <tr>\n      <td>Priority</td>\n      <td><content *ngIf=\"theGoal.priority\">{{theGoal.priority}}</content></td>\n    </tr>\n    <tr>\n      <td>Expressed By</td>\n      <td><content *ngIf=\"theGoal.expressedBy\">{{theGoal.expressedBy}}</content></td>\n    </tr>\n    <tr>\n      <td>Acceptance By</td>\n      <td><content *ngIf=\"theGoal.acceptance && theGoal.acceptance.individual\">{{theGoal.acceptance.individual.display }}</content></td>\n    </tr>\n    <tr>\n      <td>Acceptance Status</td>\n      <td><content *ngIf=\"theGoal.acceptance && theGoal.acceptance.code\">{{theGoal.acceptance.code }}</content></td>\n    </tr>\n    <!-- <tr>\n      <td>Acceptance Priority</td>\n      <td>{{theGoal.acceptance.priority.text}}</td>\n    </tr> -->\n    <!-- <tr>\n      <td>Outcome</td>\n      <td></td>\n    </tr> -->\n    <tr>\n      <td>Related Goal</td>\n      <td>\n        <li *ngFor=\"let relatedGoal of theGoal.relatedGoals\">{{relatedGoal.target.display}}-{{relatedGoal.type.text}}\n        </li>\n      </td>\n    </tr>\n    <tr>\n      <td>Note</td>\n      <td>\n        <content *ngFor=\"let note of theGoal.notes\">{{note}}</content>\n      </td>\n    </tr>\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"mat-raised-button mat-primary\" (click)=\"close()\">Close</button>\n</mat-dialog-actions>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MccServiceRequestSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport moment from 'moment';\nimport { Constants } from '../common/constants';\nimport {  SocialConcern } from '../generated-data-api';\n\nimport { DataService } from '../services/data.service';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-active-orders-panel',\n  templateUrl: './active-orders-panel.component.html',\n  styleUrls: ['./active-orders-panel.component.css']\n})\nexport class ActiveOrdersPanelComponent implements OnInit {\n  activeOrders: MatTableDataSource<MccServiceRequestSummary>;\n  displayedColumns = ['topic', 'displayDate', 'performer', 'reasons'];\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.activeOrders = new MatTableDataSource(this.dataService.servicerequest);\n    this.activeOrders.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'topic': return item[property].text;\n        case 'displayDate': return moment(item[property]).unix();\n        case 'outcome': return item[property].text;\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"group-header\">Active Orders</div>\n\n<table mat-table [dataSource]=\"activeOrders\" matSort width=\"100%\">\n  <ng-container matColumnDef=\"topic\">\n    <th mat-header-cell *matHeaderCellDef width=\"35%\" mat-sort-header>Topic</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.topic.text}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"displayDate\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.displayDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"performer\" width=\"15%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Performer</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.performer}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"reasons\" width=\"20%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Reason</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.reasons}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.status | titlecase}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'outofrange': row.status == 'high'}\"\n    (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-maintenance-and-interventions',\n  templateUrl: './maintenance-and-interventions.component.html',\n  styleUrls: ['./maintenance-and-interventions.component.css']\n})\nexport class MaintenanceAndInterventionsComponent implements OnInit {\n  featureToggling: any = Constants.featureToggling;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getEducationIsReady(): boolean {\n    return window[Constants.EducationIsLoaded];\n  }\n\n  getCounselingIsReady(): boolean {\n    return window[Constants.CounselingIsLoaded];\n  }\n\n  getReferralsIsReady(): boolean {\n    return window[Constants.ReferralsIsLoaded];\n  }\n\n  getMedicationIsReady(): boolean {\n    return window[Constants.MedicationsIsLoaded];\n  }\n\n  getServiceRequestIsReady(): boolean {\n    return window[Constants.ServiceRequestIsLoaded];\n  }\n}\n","<table width=\"100%\">\n  <tr *ngIf=\"featureToggling.maintenanceAndInterventions.medications && getMedicationIsReady()\">\n    <td>\n      <app-medication-panel></app-medication-panel>\n    </td>\n  </tr>\n  <tr *ngIf=\"featureToggling.maintenanceAndInterventions.medications && !getMedicationIsReady()\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <div class=\"group-header\">Active Medications</div>\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n  <tr *ngIf=\"featureToggling.maintenanceAndInterventions.education && getServiceRequestIsReady()\">\n    <td>\n      <app-active-orders-panel></app-active-orders-panel>\n    </td>\n  </tr>\n  <tr *ngIf=\"featureToggling.maintenanceAndInterventions.education && !getServiceRequestIsReady()\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <div class=\"group-header\">Active Orders</div>\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { from, Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { catchError, tap } from 'rxjs/operators';\nimport { EducationSummary } from '../generated-data-api/models/EducationSummary';\nimport { ServiceRequestSummary } from '../generated-data-api';\nimport { getSummaryServiceRequest } from 'e-care-common-data-services';\nimport { MccServiceRequestSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceRequestService {\n\n  private baseURL = '/summary/servicerequests';\n\n  // httpOptions = {\n  //   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  // };\n\n  public HTTP_OPTIONS = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  /** GET education summaries by subject id. Will 404 if id not found */\n  ogetServiceRequestSummaries (subjectId: string, careplanId: string): Observable<ServiceRequestSummary[]> {\n    // const url = `${environment.mccapiUrl}${this.baseURL}?subject=${subjectId}&careplan=${careplanId}`;\n    return this.http.get<ServiceRequestSummary[]>('url', this.HTTP_OPTIONS).pipe(\n      tap((_) => { this.log(`fetched ServiceRequest Summaries id=${subjectId}, careplan=${careplanId}`);console.log(\"getServiceRequest\", _);}),\n      catchError(this.handleError<ServiceRequestSummary[]>(`getServiceRequestSummaries id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n\n   /** GET Subject by id. Will 404 if id not found */\n   getServiceRequestSummaries(id: string, careplanId: string): Observable<MccServiceRequestSummary[]> {\n\n    console.log('getServiceRequestSummaries id = ' + id);\n    console.log('getServiceRequestSummaries careplanId = ' + careplanId);\n    return from(getSummaryServiceRequest() as Promise<MccServiceRequestSummary[]>).pipe(\n      tap(_ => this.log(`fetched subject id=${id}`)),\n      catchError(this.handleError<MccServiceRequestSummary[]>(`getSubject id=${id}`))\n    );\n  }\n\n\n\n  // getServiceRequestSummarieszz(subjectId: string, category: string): Observable<MccObservation[]> {\n  //   const url = `${environment.mccapiUrl}/${this._observationByCategoryURL}?subject=${subjectId}&category=${category}`;\n  //   return this.http.get<MccObservation[]>(url,this.HTTP_OPTIONS).pipe(\n  //     tap((_) => { console.log(`getObservationsByCategory id=${subjectId}, careplan=${category}`); console.log(\"getObservationsByCategory\", _); }),\n  //     catchError(this.handleError<MccObservation[]>(`getObservationsByCategory id=${subjectId}, careplan=${category}`))\n  //   );\n\n\n\n\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-questionaires-results',\n  templateUrl: './clinical-questionaires-results.component.html',\n  styleUrls: ['./clinical-questionaires-results.component.css']\n})\nexport class ClinicalQuestionairesResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n  getDisplayValue(value: Observation): any {\n    const newDisplay = getDisplayValueNew(value);\n    return newDisplay;\n  }\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n  }\n\n}\n","<div class=\"group-header\">Questionaires/Surveys</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n\n  <tr *ngFor=\"let res of dataservice.questionaires\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { GoalDialogComponent } from '../goals-dialog/goal-dialog.component';\nimport { MccGoalSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Component({\n  selector: 'app-consolidated-goals',\n  templateUrl: './consolidated-goals.component.html',\n  styleUrls: ['./consolidated-goals.component.css']\n})\nexport class ConsolidatedGoalsComponent implements OnInit, AfterViewInit {\n  consolidatedGoalsDataSource: MatTableDataSource<MccGoalSummary>;\n\n  constructor(public dataService: DataService,private dialog: MatDialog) {\n  }\n\n  displayedColumns = ['rank',   'description',  'targetdate', 'status', 'mostrecentresult', 'expressedby'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.consolidatedGoalsDataSource = this.dataService.consolidatedGoalsDataSource;\n  }\n\n  ngAfterViewInit(): void {\n\n    this.dataService.targetValues;\n    this.consolidatedGoalsDataSource.paginator = this.paginator;\n    this.consolidatedGoalsDataSource.sort = this.sort;\n    this.consolidatedGoalsDataSource.sortingDataAccessor = (data: MccGoalSummary, header: string) => {\n      switch (header) {\n        case ('status'): {\n          return data.achievementStatus.text;\n        }\n        case ('priority'): {\n          if (data.priority.toLowerCase() === 'undefined') {\n            return 'low-priority';\n          } else {\n            return data[header];\n          }\n        }\n        case ('startDateText'): {\n          return moment(data[header]).unix();\n        }\n        case ('targetDateText'): {\n          return moment(data[header]).unix();\n        }\n        case (\"achievementStatus\"): {\n          return data[header].text;\n        }\n        default: {\n          return data[header];\n        }\n      }\n    };\n  }\n\n\n  refresh() {\n    this.dataService.consolidatedGoalsDataSource;\n  }\n\n\n\n  openDialog(goal:MccGoalSummary) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.width = '700px';\n    dialogConfig.data = goal;\n    // goal.mostrecentresult = this.getMostRecentResult(goal);\n    this.dialog.open(GoalDialogComponent, dialogConfig);\n  }\n\n\n\n  getMostRecentResult(goal:MccGoalSummary)\n  {\n    if (goal?.targets?.length>0 ) {\n      if (goal.targets[0].measure?.coding?.length >0) {\n\n\n        var item73 = this.dataService.targetValues.filter(function(targetValue) {\n          // return targetValue.code === goal.targets[0].measure?.coding[0].code;\n        });\n\n        if (item73?.length > 0 ) {\n          return 'Target: ' + item73[0].measure  + ' (' + item73[0].target + '); Last Value: ' + item73[0].mostRecentResult  +  ' on ' + item73[0].date.substring(0, 10);;\n        }\n        // this.dataService.targetValues.find();\n\n        return \"Target: \" + goal.targets[0].measure.text + ' ('+goal.targets[0].measure.coding[0].code + '); Last Value: None Recorded';\n      }\n      //  if () { }\n      return \"Target: \" + goal.targets[0].measure.text + '; Last Value: None Recorded (No code provided)'\n    } else {\n    return \"Target: None\";\n    }\n\n  }\n}\n","<div class=\"group-header\">Goals</div>\n<table mat-table matSort [dataSource]=\"consolidatedGoalsDataSource\" width=\"100%\" matSortActive=\"priority\"\n  matSortDirection=\"asc\">\n  <ng-container matColumnDef=\"rank\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"priority\">Priority</th>\n    <td mat-cell *matCellDef=\"let goal\">\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('high')\">priority_high</mat-icon>\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('low')\">low_priority</mat-icon>\n    </td>\n  </ng-container>\n  <!-- <ng-container matColumnDef=\"lfcstatus\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"lifecycleStatus\">Status</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.lifecycleStatus | titlecase }} </td>\n  </ng-container> -->\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"description\">Goal</th>\n    <td mat-cell (click)=\"openDialog(goal)\" *matCellDef=\"let goal\"> {{goal.description}} </td>\n  </ng-container>\n\n  <!-- <ng-container matColumnDef=\"addresses\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"addresses\">Addresses</th>\n    <td mat-cell *matCellDef=\"let goal\" > <span *ngFor=\"let xxx of goal.addresses\">{{xxx.display}}</span> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"created\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"startDateText\">Created</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.startDateText}} </td>\n  </ng-container> -->\n  <ng-container matColumnDef=\"targetdate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"targetDateText\">Target Date</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.targetDateText}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"achievementStatus\">Achievement Status</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{ goal.achievementStatus | nullCheck }} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"mostrecentresult\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"mostrecentresult\">Most Recent Result</th>\n    <td mat-cell *matCellDef=\"let goal\">\n<!--{{ getMostRecentResult(goal)}}-->\n\n\n  </td>\n  </ng-container>\n  <ng-container matColumnDef=\"expressedby\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"expressedBy\">Expressed by</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.expressedBy}} </td>\n  </ng-container>\n\n  <!-- <ng-container matColumnDef=\"expressedbytype\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"expressedByType\">Type</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.expressedByType}} </td>\n  </ng-container> -->\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n    [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\" (click)=\"row.highlighted = !row.highlighted\"\n    (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n\n</table>\n<mat-paginator [pageSizeOptions]=\"[10, 15, 20]\" [pageSize]=\"20\" showFirstLastButtons></mat-paginator>\n<!-- <button>Add Goal</button> -->\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Color } from 'ng2-charts';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { DataService } from '../services/data.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { UacrTableData } from '../datamodel/uacr';\nimport { formatUacrResult, reformatYYYYMMDD } from '../util/utility-functions';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-uacr',\n  templateUrl: './uacr.component.html',\n  styleUrls: ['./uacr.component.css']\n})\nexport class UACRComponent implements OnInit, AfterViewInit {\n\n  uacrDataSource: MatTableDataSource<UacrTableData>;\n  uacrRowMax = 7;\n\n  public lineChartColors: Color[] = [\n    {\n      backgroundColor: 'white',\n      borderColor: 'black',\n    },\n  ];\n\n  public lineChartLegend = false;\n  public lineChartPlugins = [pluginAnnotations];\n  public lineChartType = 'line';\n\n  constructor(public dataservice: DataService) { }\n\n  displayedColumns = ['date', 'uacr'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.uacrDataSource = this.dataservice.uacrDataSource;\n  }\n\n  ngAfterViewInit(): void {\n    // todo: fix below, paginator doesn't work when assigned, shows all rows, doesn't limit to max, paging doesn't work\n    if (this.uacrDataSource.data.length > this.uacrRowMax) {\n      this.uacrDataSource.paginator = this.paginator;\n    }\n    this.uacrDataSource.sort = this.sort;\n    this.uacrDataSource.sortingDataAccessor = (data: UacrTableData, header: string) => {\n      switch (header) {\n        case ('date'): {\n          return moment(data.date).unix();\n        }\n        default: {\n          return data[header];\n        }\n      }\n    };\n  }\n\n  UacrResult(uacr: UacrTableData): string {\n    return formatUacrResult(uacr.uacr, uacr.unit);\n  }\n\n  getUacrRowCssClass(uacr: UacrTableData): string {\n    let cssClass = '';\n    const val = uacr.uacr;\n    if (val) {\n      switch (true) {\n        case (val >= 300):\n          cssClass = 'resultCritical';\n          break;\n        case (val < 300 && val >= 30):\n          cssClass = 'resultBorderline';\n          break;\n        case (val < 30):\n          cssClass = 'resultGood';\n          break;\n        default:\n          break;\n      }\n    }\n    return cssClass;\n  }\n}\n","<b>Change in UACR over Time</b>\n<table width=\"100%\">\n  <tr>\n    <td class=\"col-50\">\n      <div class=\"chart-wrapper\">\n        <canvas baseChart\n                [datasets]=\"this.dataservice.uacr.chartData\"\n                [options]=\"this.dataservice.uacr.lineChartOptions\"\n                [colors]=\"lineChartColors\"\n                [legend]=\"lineChartLegend\"\n                [chartType]=\"lineChartType\"\n                [plugins]=\"lineChartPlugins\" height=\"200\">\n        </canvas>\n      </div>\n      </td>\n    <td class=\"col-50\">\n      <table mat-table matSort [dataSource]=\"uacrDataSource\" matSort width=\"100%\">\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n          <td mat-cell *matCellDef=\"let uacr\"> {{uacr.date | date: 'MM/dd/yyyy'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"uacr\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Result</th>\n          <td mat-cell *matCellDef=\"let uacr\" [innerHTML]=\"UacrResult(uacr)\"></td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n            (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\"\n            (mouseout)=\"row.hovered = false\"\n            [ngClass]=\"getUacrRowCssClass(row)\">\n        </tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[5, 15, 30]\" showFirstLastButtons\n                     [ngStyle]=\"{display: this.uacrDataSource.data.length > this.uacrRowMax ? 'block' : 'none'}\">\n      </mat-paginator>\n    </td>\n  </tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-activities-results',\n  templateUrl: './clinical-activities-results.component.html',\n  styleUrls: ['./clinical-activities-results.component.css']\n})\nexport class ClinicalActivitiesResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n   }\n\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n   }\n\n}\n","<div class=\"group-header\">Activities</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n\n  <tr *ngFor=\"let res of dataservice.activities\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n</table>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ConditionHistory} from '../generated-data-api';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-medication-dialog',\n  templateUrl: './medication-dialog.component.html',\n  styleUrls: ['./medication-dialog.component.css']\n})\nexport class MedicationDialogComponent implements OnInit {\n\n  displayedColumns: string[] = ['description', 'onset', 'recorded', 'abatement', 'status'];\n  medication: string;\n  dateprescribed: string;\n  refillsPermitted: string;\n  dosages: string;\n  frequency: string;\n  method: string;\n  notes: string;\n  reasons: string;\n\n\n  constructor(private dialogRef: MatDialogRef<MedicationDialogComponent>,\n              @Inject(MAT_DIALOG_DATA)  data: { medication: string,dateprescribed:string,refillsPermitted:string,dosages:string,frequency:string,method:string,notes:string,reasons:string}) {\n\n\n    this.medication= data.medication;\n    this.dateprescribed= data.dateprescribed;\n    this.refillsPermitted= data.refillsPermitted;\n    this.dosages= data.dosages;\n    this.frequency= data.frequency;\n    this.method= data.method;\n    this.notes= data.notes;\n    this.reasons= data.reasons;\n\n  }\n\n  ngOnInit(): void {\n    // this.dataSource = new MatTableDataSource(this.history);\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<h3 mat-dialog-title>Medication {{medication}} Details</h3>\n<mat-dialog-content>\n\n  <table>\n    <tr>\n      <td>Date prescribed</td>\n      <td>{{dateprescribed}}</td>\n\n    </tr>\n\n    <tr>\n      <td>Reason</td>\n      <td>{{reasons}}</td>\n\n    </tr>\n    <tr>\n      <td>Refills Permitted</td>\n      <td>{{refillsPermitted}}</td>\n\n    </tr>\n    <tr>\n      <td>Dosage</td>\n      <td>{{dosages}}</td>\n\n    </tr>\n\n    <tr>\n      <td>Frequency</td>\n      <td>{{frequency}}</td>\n\n    </tr>\n\n    <tr>\n      <td>Method</td>\n      <td>{{method}}</td>\n\n    </tr>\n\n    <tr>\n      <td>Notes</td>\n      <td>{{notes}}</td>\n\n    </tr>\n  </table>\n\n\n\n </mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"mat-raised-button mat-primary\" (click)=\"close()\">Close</button>\n</mat-dialog-actions>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { getSummaryEducations } from 'e-care-common-data-services';\nimport { MccEducationSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationService {\n\n  private baseURL = '/summary/educations';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n  // Current test data has 0 education summary, hence during testing, we have not match the mapping yet\n  /** GET education summaries by subject id. Will 404 if id not found */\n  getEducationSummaries(subjectId: string, careplanId: string): Observable<MccEducationSummary[]> {\n    return from(getSummaryEducations(careplanId)).pipe(\n      tap(_ => this.log(`fetched Education Summaries id=${subjectId}, careplan=${careplanId}`)),\n      catchError(this.handleError<MccEducationSummary[]>(`getEducationSummaries id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { getSummaryCounselings } from 'e-care-common-data-services';\nimport { MccCounselingSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounselingService {\n\n  private baseURL = '/summary/counselings';\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  // Current test data has 0 counseling summary, hence during testing, we have not match the mapping yet\n  /** GET contacts by subject id. Will 404 if id not found */\n  getCounselingSummaries(subjectId: string, careplanId: string): Observable<MccCounselingSummary[]> {\n    return from(getSummaryCounselings(careplanId)).pipe(\n      tap(_ => this.log(`fetched Counseling Summaries id=${subjectId}, careplan=${careplanId}`)),\n      catchError(this.handleError<MccCounselingSummary[]>(`getCounselingSummaries id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\nimport { Effective, GenericType } from '../generated-data-api';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDate, getDisplayValue } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-test-results',\n  templateUrl: './clinical-test-results.component.html',\n  styleUrls: ['./clinical-test-results.component.css']\n})\nexport class ClinicalTestResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n getDisplayValue(value: GenericType): any {\n   return getDisplayValue(value);\n  }\n\ngetEffectiveValue(value: Effective): any {\n    return formatEffectiveDate(value);\n   }\n}\n\n\n","<div class=\"group-header\">Vital Signs and Measures</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n  <tr>\n    <td>Systolic Blood Pressure</td>\n    <td>{{this.dataservice.vitalSigns.mostRecentSystolic.value}}</td>\n    <td>{{this.dataservice.vitalSigns.mostRecentSystolic.date | date: 'MM/dd/yyyy'}}</td>\n  </tr>\n  <tr>\n    <td>Diastolic Blood Pressure</td>\n    <td>{{this.dataservice.vitalSigns.mostRecentDiastolic.value}}</td>\n    <td>{{this.dataservice.vitalSigns.mostRecentDiastolic.date | date: 'MM/dd/yyyy'}}</td>\n  </tr>\n  <tr>\n    <td colspan=\"3\">\n      <app-blood-pressure *ngIf=\"getBPisLoaded()\"></app-blood-pressure>\n    </td>\n  </tr>\n  <tr>\n    <td [colSpan]=\"3\">\n      <app-weight-over-time *ngIf=\"getWotIsLoaded()\"></app-weight-over-time>\n    </td>\n  </tr>\n  <tr *ngIf=\"!dataservice.vitalSignResults\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n  <tr *ngFor=\"let res of dataservice.vitalSignResults\">\n    <td>\n      {{res.name}}\n    </td>\n    <td>\n      {{res.value}}\n    </td>\n    <td>\n      {{res.date}}\n    </td>\n  </tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { MccReferralSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport { getSummaryReferrals } from 'e-care-common-data-services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReferralService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  /** GET referrals by subject id. Will 404 if id not found */\n  getReferralSummaries(subjectId: string, careplanId: string): Observable<MccReferralSummary[]> {\n    return from(getSummaryReferrals(careplanId)).pipe(\n      tap(_ => this.log(`fetched Referral Summaries id=${subjectId}, careplan=${careplanId}`)),\n      catchError(this.handleError<MccReferralSummary[]>(`getReferralSummaries id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","export const environment = {\n  production: false,\n  logEndpointUri:  window['env']['logEndpointUri'],\n  logApiKey:  window['env']['logApiKey'],\n  clientId: window['env']['clientId']\n};\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DiagnosisDialogComponent } from '../diagnosis-dialog/diagnosis-dialog.component';\nimport { Router } from '@angular/router';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\nimport { MatPaginator } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-active-diagnosis-panel',\n  templateUrl: './active-diagnosis-panel.component.html',\n  styleUrls: ['./active-diagnosis-panel.component.css']\n})\nexport class ActiveDiagnosisPanelComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'rxfilter', 'trend', 'firstOnset', 'firstRecorded'];\n  dataSource: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public dataservice: DataService, private dialog: MatDialog, private router: Router) { }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataservice.conditions.activeConditions);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case \"firstRecorded\": return moment(item[property]).isValid() ? moment(item[property]).unix() : item[property];\n        case 'firstOnset': return moment(item[property]).isValid() ? moment(item[property]).unix() : item[property];\n        case 'code': return item[property].text.toUpperCase();\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n\n  openDialog(row) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.width = '90%';\n    // dialogConfig.height = '1000px';\n    dialogConfig.data = {\n      name: this.dataservice.demographic.name,\n      condition: row.code.text,\n      history: row.history\n    };\n    this.dialog.open(DiagnosisDialogComponent, dialogConfig);\n  }\n\n  switchToHM() {\n    this.router.navigate(['/maint'], { queryParamsHandling: 'merge' });\n  }\n\n  switchToHS() {\n    this.router.navigate(['/status'], { queryParamsHandling: 'merge' });\n  }\n}\n","<mat-panel-title class=\"group-header\">Active Diagnoses</mat-panel-title>\n<table mat-table [dataSource]=\"dataSource\" matSort>\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Condition</th>\n    <td style=\"cursor: pointer;\" (click)=\"openDialog(condition)\" mat-cell *matCellDef=\"let condition\">\n      {{condition.code.text}}\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"rxfilter\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let condition\" (click)=\"$event.stopPropagation()\">\n      <mat-icon *ngIf=\"condition.profileId!=null\" (click)=\"switchToHM()\" style=\"cursor: pointer;\"\n        matTooltip=\"Switch to Health Maintenance using this codition as a focus\"\n        aria-label=\"Selection to change to the Health Maintance and Intervention tab using this condition as a focus\">\n        local_pharmacy</mat-icon>\n    </td>\n  </ng-container>\n  <!-- Trend Filter -->\n  <ng-container matColumnDef=\"trend\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let condition\" (click)=\"$event.stopPropagation()\">\n      <mat-icon *ngIf=\"condition.profileId != null\" (click)=\"switchToHS()\" style=\"cursor: pointer;\"\n        matTooltip=\"Switch to Heath Status using this condition as a focus\"\n        aria-label=\"Selection to change to the the Health Status Evaluation and Outcomes using this condition as a focus\">\n        timeline</mat-icon>\n    </td>\n  </ng-container>\n  <!-- Date -->\n  <ng-container matColumnDef=\"firstOnset\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date of Initial Diagnosis</th>\n    <td mat-cell *matCellDef=\"let condition\">{{condition.firstOnset | nullCheck }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"firstRecorded\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosis First Recorded</th>\n    <td mat-cell *matCellDef=\"let condition\">{{condition.firstRecordedAsText | nullCheck}}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator *ngIf=\"dataservice.conditions.activeConditions.length > 10\" [pageSizeOptions]=\"[5, 10, 20,30]\"\n  [pageSize]=\"20\" showFirstLastButtons></mat-paginator>\n\n\n<!-- <button>Mark selected as inactive</button> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-procedure-results',\n  templateUrl: './clinical-procedure-results.component.html',\n  styleUrls: ['./clinical-procedure-results.component.css']\n})\nexport class ClinicalProcedureResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n   }\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n   }\n\n}\n\n","<div class=\"group-header\">Procedure Results</div>\n\n<table   width=\"100%\" valign=\"top\">\n  <tr class=\"resultTableHeader\" >\n    <th><b>Test</b></th>\n    <th><b>Result</b></th>\n    <th><b>Date</b></th>\n  </tr>\n\n  <tr  *ngFor=\"let res of dataservice.procedure\">\n    <td>{{res.code.text}}</td>\n    <td>{{ getDisplayValue(  res.value) }}</td>\n    <td>{{res.effectiveDateTime}}</td>\n  </tr>\n","import { CarePlan, Observation } from 'fhir/r4';\nimport { Injectable } from '@angular/core';\nimport { MccPatient, ServiceRequestSummary } from '../generated-data-api';\nimport { SubjectDataService } from './subject-data-service.service';\nimport { CareplanService } from './careplan.service';\nimport { GoalsDataService } from './goals-data-service.service';\nimport { Contact, GoalSummary } from '../generated-data-api';\nimport { SocialConcern } from '../generated-data-api';\nimport { ConditionLists } from '../generated-data-api';\nimport { TargetValue } from '../datamodel/targetvalue';\nimport {\n  dummyPatientId,\n  dummyCareplanId,\n  dummySubject,\n  dummyConditions,\n  dummyCarePlan,\n  emptySocialConcerns,\n  emptyContacts,\n  emptyCounseling,\n  emptyGoalsList,\n  emptyMediciationSummary,\n  emptyEducation,\n  emptyReferrals\n} from '../datamodel/mockData';\nimport { GoalLists } from '../generated-data-api';\nimport { MedicationSummary } from '../generated-data-api';\nimport { finalize, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ContactsService } from './contacts.service';\nimport { MedicationService } from './medication.service';\nimport { concatMap } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MessageService } from './message.service';\nimport {\n  emptyVitalSigns,\n  VitalSigns,\n  VitalSignsTableData\n} from '../datamodel/vitalSigns';\nimport { EgfrTableData, Egfr, emptyEgfr } from '../datamodel/egfr';\nimport { UacrTableData, Uacr, emptyUacr } from '../datamodel/uacr';\nimport { WotTableData, Wot, emptyWot } from '../datamodel/weight-over-time';\nimport {\n  formatEgfrResult,\n  formatUacrResult,\n  getEgrLineChartAnnotationsObject,\n  getUacrLineChartAnnotationsObject,\n  getLineChartOptionsObject,\n  reformatYYYYMMDD,\n  formatWotResult,\n  getWotLineChartAnnotationsObject\n} from '../util/utility-functions';\nimport { ChartDataSets } from 'chart.js';\nimport moment from 'moment';\nimport { CounselingSummary } from '../generated-data-api/models/CounselingSummary';\nimport { CounselingService } from './counseling.service';\nimport { EducationService } from './education.service';\nimport { EducationSummary } from '../generated-data-api/models/EducationSummary';\nimport { ReferralSummary } from '../generated-data-api/models/ReferralSummary';\nimport { ReferralService } from './referrals.service';\nimport { ObservationsService } from './observations.service';\nimport { Constants } from '../common/constants';\nimport { MccCondition, MccConditionList, MccCounselingSummary, MccEducationSummary, MccGoalList, MccGoalSummary, MccPatientContact, MccReferralSummary, MccServiceRequestSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport { ServiceRequestService } from './service-request.service';\n\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  featureToggling: any = Constants.featureToggling;\n\n  constructor(\n    private subjectdataservice: SubjectDataService,\n    private careplanservice: CareplanService,\n    private goalsdataservice: GoalsDataService,\n    private contactdataService: ContactsService,\n    private medicationdataService: MedicationService,\n    private counselingService: CounselingService,\n    private educationService: EducationService,\n    private referralService: ReferralService,\n    private messageService: MessageService,\n    private obsService: ObservationsService,\n    private serviceRequestService:ServiceRequestService,\n  ) {\n    this.activeMedications = emptyMediciationSummary;\n    this.education = emptyEducation;\n    this.counseling = emptyCounseling;\n    this.referrals = emptyReferrals;\n    this.contacts = emptyContacts;\n    this.goals = emptyGoalsList;\n    this.vitalSigns = emptyVitalSigns;\n    this.egfr = emptyEgfr;\n    this.uacr = emptyUacr;\n    this.wot = emptyWot;\n  }\n\n  authorizationToken: string;\n  mainfhirserver: string;\n  secondaryfhirserver: string;\n  currentPatientId: string;\n  currentCareplanId: string;\n  demographic: MccPatient;\n  careplan: CarePlan;\n  servicerequest :  MccServiceRequestSummary[];\n  careplans: CarePlan[];\n  socialConcerns: SocialConcern[];\n  conditions: MccConditionList;\n  targetValues: TargetValue[] = [];\n  activeMedications: MedicationSummary[] = [];\n  inactiveMedications: MedicationSummary[];\n  allGoals: MccGoalSummary[] = [];\n  vitalSigns: VitalSigns = emptyVitalSigns;\n  egfr: Egfr = emptyEgfr;\n  uacr: Uacr = emptyUacr;\n  wot: Wot = emptyWot;\n\n  goals: MccGoalList;\n\n  targetValuesDataSource = new MatTableDataSource(this.targetValues);\n  vitalSignsDataSource = new MatTableDataSource(this.vitalSigns.tableData);\n  egfrDataSource = new MatTableDataSource(this.egfr.tableData);\n  uacrDataSource = new MatTableDataSource(this.uacr.tableData);\n  wotDataSource = new MatTableDataSource(this.wot.tableData);\n  activeMedicationsDataSource = new MatTableDataSource(this.activeMedications);\n  consolidatedGoalsDataSource = new MatTableDataSource(this.allGoals);\n\n  education: MccEducationSummary[];\n  counseling: MccCounselingSummary[];\n  referrals: MccReferralSummary[];\n  labResults: Observation[];\n  // new results based on category\n  activities: Observation[];\n  exam: Observation[];\n  questionaires: Observation[];\n  procedure: Observation[];\n  history: Observation[];\n  imaging: Observation[];\n  therapy: Observation[];\n\n  vitalSignResults: Observation[];\n  contacts: MccPatientContact[];\n\n  private commonHttpOptions;\n\n  updateFHIRConnection(server: string, token: string) {\n    this.authorizationToken = token;\n    console.log('Token = ' + token);\n    this.mainfhirserver = server;\n    let headersobj = new HttpHeaders();\n    headersobj = headersobj\n      .set('Content-Type', 'application/json')\n      .set('mcc-fhir-server', server)\n      .set('mcc-token', token);\n    this.commonHttpOptions = {\n      headers: headersobj\n    };\n    this.subjectdataservice.httpOptions = this.commonHttpOptions;\n    this.careplanservice.httpOptions = this.commonHttpOptions;\n    this.goalsdataservice.httpOptions = this.commonHttpOptions;\n    this.contactdataService.httpOptions = this.commonHttpOptions;\n    this.medicationdataService.httpOptions = this.commonHttpOptions;\n    this.counselingService.httpOptions = this.commonHttpOptions;\n    this.educationService.httpOptions = this.commonHttpOptions;\n    this.referralService.httpOptions = this.commonHttpOptions;\n    this.obsService.HTTP_OPTIONS = this.commonHttpOptions;\n    this.serviceRequestService.HTTP_OPTIONS = this.commonHttpOptions;\n\n  }\n\n  updateFHIRConnection2(secondaryserver: string) {\n    // this.authorizationToken = token;\n    // console.log('Token = ' + token);\n    // this.mainfhirserver = server;\n    this.secondaryfhirserver = secondaryserver;\n    let headersobj = new HttpHeaders();\n    headersobj = headersobj\n      .set('Content-Type', 'application/json')\n      .set('mcc-fhir-server', this.mainfhirserver)\n      .set('mcc-token', this.authorizationToken)\n      .set('mcc-secondaryfhir-server', this.secondaryfhirserver);\n    this.commonHttpOptions = {\n      headers: headersobj\n    };\n    this.subjectdataservice.httpOptions = this.commonHttpOptions;\n    this.careplanservice.httpOptions = this.commonHttpOptions;\n    this.goalsdataservice.httpOptions = this.commonHttpOptions;\n    this.contactdataService.httpOptions = this.commonHttpOptions;\n    this.medicationdataService.httpOptions = this.commonHttpOptions;\n    this.counselingService.httpOptions = this.commonHttpOptions;\n    this.educationService.httpOptions = this.commonHttpOptions;\n    this.referralService.httpOptions = this.commonHttpOptions;\n    this.obsService.HTTP_OPTIONS = this.commonHttpOptions;\n  }\n\n  getCurrentPatient(): Observable<MccPatient> {\n    return this.subjectdataservice\n      .getSubject(this.currentPatientId)\n      .pipe(map(data => data));\n  }\n\n  async setCurrentSubject(patientId: string): Promise<boolean> {\n    this.log('Setting patient to Id = '.concat(patientId));\n    this.currentPatientId = patientId;\n    this.targetValues = [];\n    this.targetValuesDataSource.data = this.targetValues;\n    console.log('DATA-174', this.targetValuesDataSource);\n    this.activeMedications = emptyMediciationSummary;\n    this.vitalSigns = emptyVitalSigns;\n    this.vitalSignsDataSource.data = this.vitalSigns.tableData;\n    console.log('DATA-178', this.vitalSignsDataSource);\n    this.activeMedicationsDataSource.data = this.activeMedications;\n    console.log('DATA-180', this.activeMedicationsDataSource);\n    if (!patientId || patientId.trim().length === 0) {\n      this.currentPatientId = dummyPatientId;\n      this.currentCareplanId = dummyCareplanId;\n      this.demographic = dummySubject;\n      this.conditions = dummyConditions;\n      // this.goals  = emptyGoalsList;\n    } else {\n      this.updateDemographics();\n      this.updateConditions();\n      this.getCarePlansForSubject();\n      this.getPatientGoals();\n      this.updateContacts();\n      this.updateCounseling();\n      this.updateEducation();\n      this.updateReferrals();\n      this.getPatientGoalTargets(this.currentPatientId).then(() => {\n        window[Constants.TargetsIsLoaded] = true;\n      });\n      this.getPatientBPInfo(this.currentPatientId);\n      this.getPatientEgfrInfo(this.currentPatientId);\n      this.getPatientUacrInfo(this.currentPatientId);\n      this.getPatientWotInfo(this.currentPatientId);\n      this.updateServiceRequest();\n    }\n    // this.activeMedications = mockMedicationSummary;\n    this.education = emptyEducation;\n    this.counseling = emptyCounseling;\n    this.referrals = emptyReferrals;\n    this.contacts = emptyContacts;\n    // this.targetValue\n    return true;\n  }\n\n  async setCurrentCarePlan(planId: string): Promise<boolean> {\n    this.currentCareplanId = planId;\n    if (!planId || planId.trim().length === 0) {\n      this.socialConcerns = emptySocialConcerns;\n      console.log('dont come here pls');\n      this.careplan = dummyCarePlan;\n    } else {\n      await this.updateCarePlan();\n      await this.updateSocialConcerns();\n      await this.updateContacts();\n      await this.updateCounseling();\n      await this.updateEducation();\n      await this.updateReferrals();\n      await this.updateMedications();\n    }\n\n    return true;\n  }\n\n  async updateCarePlan(): Promise<boolean> {\n    this.careplanservice\n      .getCarePlan(this.currentCareplanId)\n      .subscribe(careplan => {\n        // Inject\n        this.careplan = careplan;\n      });\n    return true;\n  }\n\n  async getCarePlansForSubject(): Promise<boolean> {\n    this.careplanservice\n      .getCarePlansBySubject(this.currentPatientId)\n      .subscribe(cp => {\n        console.log({cp})\n        this.careplans = cp;\n        if (this.careplans.length > 0) {\n          this.careplan = this.careplans[0];\n          //this.careplan = this.careplans[this.careplans.length - 1]; // Initialize selected careplan to last in MccCarePlan array\n          this.currentCareplanId = this.careplan.id;\n          console.log({ currentCareplanId: this.currentCareplanId })\n          this.updateContacts();\n          this.updateCounseling();\n          this.updateEducation();\n          this.updateMedications();\n          this.updateReferrals();\n          this.updateLabResults(this.currentPatientId, this.currentCareplanId);\n          this.updateVitalSignResults(\n            this.currentPatientId,\n            this.currentCareplanId\n          );\n\n          this.updateActivities();\n          this.updateExam();\n          this.updateQuestionaires();\n          this.updateProcedure();\n          this.updateHistory();\n          this.updateImaging();\n          this.updateTherapy();\n        } else {\n          this.careplan = dummyCarePlan; // Initialize selected careplan to dummy careplan if no care plans available for subject\n          this.updateContacts();\n          this.updateLabResults(this.currentPatientId, 'general');\n          this.updateVitalSignResults(this.currentPatientId, 'general');\n        }\n        this.updateSocialConcerns();\n      });\n    return true;\n  }\n\n  async updateSocialConcerns(): Promise<boolean> {\n    this.subjectdataservice\n      .getSocialConcerns(this.currentPatientId, this.currentCareplanId)\n      .subscribe(concerns => {\n        this.socialConcerns = concerns;\n        window[Constants.SocialConcernsIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async updateContacts(): Promise<boolean> {\n    this.contactdataService\n      .getContactsBySubjectAndCareplan(\n        this.currentPatientId,\n        this.currentCareplanId\n      )\n      .subscribe(contacts => (this.contacts = contacts));\n    return true;\n  }\n\n  async updateCounseling(): Promise<boolean> {\n    this.counselingService\n      .getCounselingSummaries(this.currentPatientId, this.currentCareplanId)\n      .subscribe(counseling => {\n        this.counseling = counseling;\n        window[Constants.CounselingIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async updateReferrals(): Promise<boolean> {\n    this.referralService\n      .getReferralSummaries(this.currentPatientId, this.currentCareplanId)\n      .subscribe(referrals => {\n        this.referrals = referrals;\n        window[Constants.ReferralsIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async updateLabResults(\n    patientId: string,\n    longTermCondition: string\n  ): Promise<boolean> {\n    this.obsService\n      .getLabResults(patientId, longTermCondition)\n      .then((res: Observation[]) => {\n        console.log(\n          `EccDS: getLabResults - start with patientid - ${patientId}`\n        );\n        console.log({\n          serviceName: 'getLabResults',\n          res\n        });\n        this.labResults = res;\n      });\n    return true;\n  }\n\n  async updateActivities(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'activity')\n      .then(activities => {\n        this.activities = activities;\n      });\n    return true;\n  }\n\n  async updateExam(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'exam')\n      .then(exam => (this.exam = exam));\n    return true;\n  }\n\n  async updateQuestionaires(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'survey')\n      .then(questionaires => (this.questionaires = questionaires));\n    return true;\n  }\n\n  async updateProcedure(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'procedure')\n      .then(procedure => (this.procedure = procedure));\n    return true;\n  }\n\n  async updateHistory(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'social-history')\n      .then(history => (this.history = history));\n    return true;\n  }\n\n  async updateImaging(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'imaging')\n      .then(imaging => (this.imaging = imaging));\n    return true;\n  }\n\n  async updateTherapy(): Promise<boolean> {\n    this.obsService\n      .getObservationsByCategory(this.currentPatientId, 'therapy')\n      .then(therapy => (this.therapy = therapy));\n    return true;\n  }\n\n  async updateVitalSignResults(\n    patientId: string,\n    longTermCondition: string\n  ): Promise<boolean> {\n    this.obsService\n      .getVitalSignResults(patientId, longTermCondition)\n      .then((res: Observation[]) => {\n        console.log(\n          `EccDS: getVitalSignResults - start with patientid - ${patientId}`\n        );\n        console.log({\n          serviceName: 'getVitalSignResults',\n          res\n        });\n        this.vitalSignResults = res;\n      });\n    return true;\n  }\n\n  async updateEducation(): Promise<boolean> {\n    this.educationService\n      .getEducationSummaries(this.currentPatientId, this.currentCareplanId)\n      .subscribe(education => {\n        this.education = education;\n        window[Constants.EducationIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async updateMedications(): Promise<boolean> {\n    this.medicationdataService\n      .getMedicationSummaryBySubjectAndCareplan(\n        this.currentPatientId,\n        this.currentCareplanId\n      )\n      .subscribe(medications => {\n        this.activeMedications = medications.activeMedications;\n        this.activeMedicationsDataSource.data = this.activeMedications;\n        this.inactiveMedications = medications.inactiveMedications;\n        window[Constants.MedicationsIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async updateDemographics(): Promise<boolean> {\n    this.subjectdataservice\n      .getSubject(this.currentPatientId)\n      .subscribe(demograhic => (this.demographic = demograhic));\n    return true;\n  }\n\n  async updateConditions(): Promise<boolean> {\n    this.subjectdataservice\n      .getConditions(this.currentPatientId)\n      .subscribe(condition => {\n        this.conditions = condition;\n        window[Constants.ActiveDiagnosisIsLoaded] = true;\n        window[Constants.InActiveDiagnosisIsLoaded] = true;\n      });\n    return true;\n  }\n\n  async getPatientGoals(): Promise<boolean> {\n    this.goalsdataservice.getGoals(this.currentPatientId).subscribe(goals => {\n      this.goals = goals;\n      this.consolidatedGoalsDataSource.data = this.goals.allGoals;\n      window[Constants.GoalsIsLoaded] = true;\n    });\n    return true;\n  }\n\n  async updateServiceRequest(): Promise<boolean> {\n    this.serviceRequestService.getServiceRequestSummaries(this.currentPatientId,this.currentCareplanId).subscribe(servicerequests => {\n      this.servicerequest = servicerequests;\n      // this.consolidatedGoalsDataSource.data = this.goals.allGoals;\n      window[Constants.ServiceRequestIsLoaded] = true;\n    });\n    return true;\n\n\n    // this.serviceRequestService.getServiceRequestSummaries(this.currentPatientId, this.currentCareplanId)\n    //   .subscribe(servicerequest => { this.serviceRequestService = servicerequest; window[Constants.ServiceRequestIsLoaded] = true; });\n    // return true;\n  }\n\n\n  async getPatientGoalTargets(patientId): Promise<boolean> {\n    this.goalsdataservice\n      .getGoals(patientId)\n      .pipe(\n        concatMap(goals =>\n          this.goalsdataservice.getPatientGoalTargets(\n            patientId,\n            goals.activeTargets\n          )\n        )\n      )\n      .subscribe(res => {\n        this.targetValues.push(res);\n        this.targetValuesDataSource.data = this.targetValues;\n      });\n    return true;\n  }\n\n  async getPatientBPInfo(patientId): Promise<boolean> {\n    const systolicChartData: ChartDataSets = {\n      data: [],\n      label: 'Systolic',\n      fill: false\n    };\n    const diastolicChartData: ChartDataSets = {\n      data: [],\n      label: 'Diastolic',\n      fill: false\n    };\n    // const xAxisLabels: string[] = [];\n    const xAxisLabels: string[] = [];\n    this.vitalSigns = emptyVitalSigns;\n    this.vitalSigns.tableData = [];\n    this.vitalSigns.chartData = [];\n\n    this.goalsdataservice\n      .getPatientVitalSigns(patientId)\n      .pipe(\n        finalize(() => {\n          this.vitalSigns.chartData.push(systolicChartData);\n          this.vitalSigns.chartData.push(diastolicChartData);\n          this.vitalSignsDataSource.data = this.vitalSigns.tableData.sort(\n            (a, b) => {\n              return moment(a.date).unix() > moment(b.date).unix() ? -1 : 1;\n            }\n          );\n          const vsLowDateRow: VitalSignsTableData = this.vitalSigns.tableData.reduce(\n            (low, vs) =>\n              reformatYYYYMMDD(low.date) < reformatYYYYMMDD(vs.date) ? low : vs\n          );\n          const vsHighDateRow: VitalSignsTableData = this.vitalSigns.tableData.reduce(\n            (high, vs) =>\n              reformatYYYYMMDD(high.date) >= reformatYYYYMMDD(vs.date)\n                ? high\n                : vs\n          );\n          this.vitalSigns.mostRecentSystolic.date = vsHighDateRow.date;\n          this.vitalSigns.mostRecentSystolic.value = vsHighDateRow.systolic;\n          this.vitalSigns.mostRecentDiastolic.date = vsHighDateRow.date;\n          this.vitalSigns.mostRecentDiastolic.value = vsHighDateRow.diastolic;\n          const minDate = moment(vsLowDateRow.date);\n          this.vitalSigns.suggestedMin = minDate;\n          const maxDate = moment(vsHighDateRow.date);\n          this.vitalSigns.suggestedMax = minDate;\n          this.vitalSigns.lineChartOptions = getLineChartOptionsObject(\n            50,\n            180,\n            this.vitalSigns.suggestedMin,\n            this.vitalSigns.suggestedMax\n          );\n          this.vitalSigns.xAxisLabels = [];\n          let yr = '';\n          let prevYr = '';\n          this.vitalSigns.tableData.map(vs => {\n            if (moment(vs.date.toString()).format('YYYY') !== prevYr) {\n              yr = moment(vs.date.toString()).format('YYYY');\n              prevYr = yr;\n            } else {\n              yr = '';\n            }\n            // @ts-ignore\n            xAxisLabels.push([\n              moment(vs.date.toString()).format('MMM'),\n              moment(vs.date.toString()).format('DD'),\n              yr\n            ]);\n          });\n          this.vitalSigns.xAxisLabels = xAxisLabels;\n          window[Constants.BPisLoaded] = true;\n        })\n      )\n      .subscribe(res => {\n        this.vitalSigns.tableData.push(res);\n        const systolicVitalSign = {\n          x: new Date(res.date),\n          y: res.systolic\n        };\n        const diastolicVitalSign = {\n          x: new Date(res.date),\n          y: res.diastolic\n        };\n        // @ts-ignore\n        systolicChartData.data.push(systolicVitalSign);\n        // @ts-ignore\n        diastolicChartData.data.push(diastolicVitalSign);\n      });\n\n    return true;\n  }\n\n  async getPatientEgfrInfo(patientId): Promise<boolean> {\n    this.egfr = emptyEgfr;\n    this.egfr.tableData = [];\n    this.egfr.chartData = [];\n    this.goalsdataservice\n      .getPatientEgfr(patientId)\n      .pipe(\n        finalize(() => {\n          this.filterDataSet(0);\n        })\n      )\n      .subscribe(res => {\n        const egfr = {\n          x: new Date(res.date),\n          y: res.egfr\n        };\n        if (!this.aggregatedChartData.find(x => x.label === res.test)) {\n          if (res.isNumber) {\n            // if the value is not a number we do not want to chart it\n            this.aggregatedChartData.push({\n              data: [egfr],\n              label: res.test,\n              fill: false\n            });\n          }\n          this.aggregatedTableData.push({\n            data: [res],\n            label: res.test\n          });\n        } else {\n          // @ts-ignore\n          if (res.isNumber)\n            this.aggregatedChartData\n              .find(x => x.label === res.test)\n              .data.push((egfr as unknown) as number[]);\n          this.aggregatedTableData\n            .find(x => x.label === res.test)\n            .data.push(res);\n        }\n      });\n\n    return true;\n  }\n\n  aggregatedChartData: ChartDataSets[] = [];\n  aggregatedTableData: any[] = [];\n  selectedIndex: number;\n\n  filterDataSet(index: number): void {\n    if (!this.aggregatedChartData || this.aggregatedChartData.length === 0) {\n      window[Constants.EGFRisLoaded] = true;\n      return;\n    }\n\n    this.selectedIndex = index;\n    const xAxisLabels: string[] = [];\n\n    this.egfr.chartData = [];\n    this.egfr.chartData.push(this.aggregatedChartData[index]);\n\n    this.egfr.tableData = [];\n    this.egfr.tableData = this.aggregatedTableData[index].data;\n\n    this.egfrDataSource.data = this.egfr.tableData.sort((a, b) => {\n      return moment(a.date).unix() > moment(b.date).unix() ? -1 : 1;\n    });\n\n    const vsLowDateRow: EgfrTableData = this.egfr.tableData.reduce((low, e) =>\n      reformatYYYYMMDD(low.date) < reformatYYYYMMDD(e.date) ? low : e\n    );\n    const vsHighDateRow: EgfrTableData = this.egfr.tableData.reduce((high, e) =>\n      reformatYYYYMMDD(high.date) >= reformatYYYYMMDD(e.date) ? high : e\n    );\n    this.egfr.mostRecentEgfr.date = vsHighDateRow.date;\n    this.egfr.mostRecentEgfr.value = vsHighDateRow.egfr;\n    this.egfr.mostRecentEgfr.unit = vsHighDateRow.unit;\n    this.egfr.mostRecentEgfr.test = vsHighDateRow.test;\n    this.egfr.mostRecentEgfr.result = formatEgfrResult(\n      vsHighDateRow.egfr.value,\n      vsHighDateRow.unit\n    );\n    const minDate = moment(vsLowDateRow.date);\n    this.egfr.suggestedMin = minDate.toDate();\n    const maxDate = moment(vsHighDateRow.date);\n    this.egfr.suggestedMax = maxDate.toDate();\n    const lineChartOptions = getLineChartOptionsObject(\n      10,\n      70,\n      this.egfr.suggestedMin,\n      this.egfr.suggestedMax\n    );\n    const lineChartAnnotations = getEgrLineChartAnnotationsObject();\n    this.egfr.lineChartOptions = {\n      ...lineChartOptions,\n      annotation: lineChartAnnotations\n    };\n    this.egfr.xAxisLabels = [];\n    let yr = '';\n    let prevYr = '';\n    this.egfr.tableData.map(vs => {\n      if (moment(vs.date.toString()).format('YYYY') !== prevYr) {\n        yr = moment(vs.date.toString()).format('YYYY');\n        prevYr = yr;\n      } else {\n        yr = '';\n      }\n      // @ts-ignore\n      xAxisLabels.push([\n        moment(vs.date.toString()).format('MMM'),\n        moment(vs.date.toString()).format('DD'),\n        yr\n      ]);\n    });\n    this.egfr.xAxisLabels = xAxisLabels;\n    window[Constants.EGFRisLoaded] = true;\n  }\n\n  emptyChart(): void {\n    this.egfr.chartData = [];\n    this.egfr.tableData = [];\n    // @ts-ignore\n    this.egfr.lineChartOptions = {};\n  }\n\n  async getPatientUacrInfo(patientId): Promise<boolean> {\n    const uacrChartData: ChartDataSets = {\n      data: [],\n      label: 'Uacr',\n      fill: false\n    };\n    const xAxisLabels: string[] = [];\n    this.uacr = emptyUacr;\n    this.uacr.tableData = [];\n    this.uacr.chartData = [];\n    this.goalsdataservice\n      .getPatientUacr(patientId)\n      .pipe(\n        finalize(() => {\n          this.uacr.chartData.push(uacrChartData);\n          this.uacrDataSource.data = this.uacr.tableData.sort((a, b) => {\n            return moment(a.date).unix() > moment(b.date).unix() ? -1 : 1;\n          });\n          const vsLowDateRow: UacrTableData = this.uacr.tableData.reduce(\n            (low, e) =>\n              reformatYYYYMMDD(low.date) < reformatYYYYMMDD(e.date) ? low : e\n          );\n          const vsHighDateRow: UacrTableData = this.uacr.tableData.reduce(\n            (high, e) =>\n              reformatYYYYMMDD(high.date) >= reformatYYYYMMDD(e.date) ? high : e\n          );\n          this.uacr.mostRecentUacr.date = vsHighDateRow.date;\n          this.uacr.mostRecentUacr.value = vsHighDateRow.uacr;\n          this.uacr.mostRecentUacr.unit = vsHighDateRow.unit;\n          this.uacr.mostRecentUacr.test = vsHighDateRow.test;\n          this.uacr.mostRecentUacr.result = formatUacrResult(\n            vsHighDateRow.uacr,\n            vsHighDateRow.unit\n          );\n          const minDate = moment(vsLowDateRow.date, moment.defaultFormat);\n          this.uacr.suggestedMin = minDate;\n          const maxDate = moment(vsHighDateRow.date.toString());\n          this.uacr.suggestedMax = maxDate;\n          const lineChartOptions = getLineChartOptionsObject(\n            0,\n            400,\n            this.uacr.suggestedMin,\n            this.uacr.suggestedMax\n          );\n          const lineChartAnnotations = getUacrLineChartAnnotationsObject();\n          this.uacr.lineChartOptions = {\n            ...lineChartOptions,\n            annotation: lineChartAnnotations\n          };\n          this.uacr.xAxisLabels = [];\n          let yr = '';\n          let prevYr = '';\n          this.uacr.tableData.map(vs => {\n            if (moment(vs.date.toString()).format('YYYY') !== prevYr) {\n              yr = moment(vs.date.toString()).format('YYYY');\n              prevYr = yr;\n            } else {\n              yr = '';\n            }\n            // @ts-ignore\n            xAxisLabels.push([\n              moment(vs.date.toString()).format('MMM'),\n              moment(vs.date.toString()).format('DD'),\n              yr\n            ]);\n          });\n          this.uacr.xAxisLabels = xAxisLabels;\n          window[Constants.UACRisLoaded] = true;\n        })\n      )\n      .subscribe(res => {\n        this.uacr.tableData.push(res);\n        const uacr = {\n          x: new Date(res.date),\n          y: res.uacr\n        };\n        // @ts-ignore\n        uacrChartData.data.push(uacr);\n      });\n\n    return true;\n  }\n\n  async getPatientWotInfo(patientId): Promise<boolean> {\n    const wotChartData: ChartDataSets = { data: [], label: 'Wot', fill: false };\n    const xAxisLabels: string[] = [];\n    this.wot = emptyWot;\n    this.wot.tableData = [];\n    this.wot.chartData = [];\n    this.goalsdataservice\n      .getPatientWot(patientId)\n      .pipe(\n        finalize(() => {\n          this.wot.chartData.push(wotChartData);\n          this.wotDataSource.data = this.wot.tableData.sort((a, b) => {\n            return moment(a.date).unix() > moment(b.date).unix() ? -1 : 1;\n          });\n          window[Constants.WotIsLoaded] = true;\n          const vsHighDateRow: WotTableData = this.wot.tableData.reduce(\n            (high, e) =>\n              reformatYYYYMMDD(high.date) >= reformatYYYYMMDD(e.date) ? high : e\n          );\n          this.wot.mostRecentWot.date = vsHighDateRow.date;\n          this.wot.mostRecentWot.value = vsHighDateRow.value;\n          this.wot.mostRecentWot.unit = vsHighDateRow.unit;\n          this.wot.mostRecentWot.test = vsHighDateRow.test;\n          this.wot.mostRecentWot.result = formatWotResult(\n            vsHighDateRow.value,\n            vsHighDateRow.unit\n          );\n          const lineChartOptions = getLineChartOptionsObject();\n          this.wot.lineChartOptions = { ...lineChartOptions, annotation: {} }; //lineChartAnnotations };\n          this.wot.xAxisLabels = [];\n          let yr = '';\n          let prevYr = '';\n          this.wot.tableData.map(vs => {\n            if (moment(vs.date.toString()).format('YYYY') !== prevYr) {\n              yr = moment(vs.date.toString()).format('YYYY');\n              prevYr = yr;\n            } else {\n              yr = '';\n            }\n            // @ts-ignore\n            xAxisLabels.push([\n              moment(vs.date.toString()).format('MMM'),\n              moment(vs.date.toString()).format('DD'),\n              yr\n            ]);\n          });\n          this.wot.xAxisLabels = xAxisLabels;\n        })\n      )\n      .subscribe(res => {\n        this.wot.tableData.push(res);\n        const wot = {\n          x: new Date(res.date),\n          y: res.value\n        };\n        // @ts-ignore\n        wotChartData.data.push(wot);\n      });\n\n    return true;\n  }\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`subject-data-service: ${message}`);\n  }\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { authorize } from 'e-care-common-data-services';\n\n@Component({\n  selector: 'launch',\n  templateUrl: './launch.html',\n  styleUrls: ['./launch.css']\n})\n\nexport class Launch implements OnInit, AfterViewInit {\n  ngOnInit(): void {\n  }\n  async ngAfterViewInit(): Promise<void> {\n    await authorize({\n      clientId: environment.clientId,\n      scope: 'patient/*.read openid launch'\n    });\n  }\n}\n","<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>MCC Provider Smart App</title>\n</head>\n\n<body>\n  <script src=\"assets/env.js\"></script>\n  <script>\n\n    if (window[\"env\"][\"authdebug\"] === \"true\") {\n      localStorage.debug = \"FHIR.*\";\n      console.log('Authentication debug on');\n    }\n    else {\n      console.log('Authentication debug off');\n    }\n  </script>\n</body>\n\n</html>\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Color } from 'ng2-charts';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { DataService } from '../services/data.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { EgfrTableData } from '../datamodel/egfr';\nimport { formatEgfrResult, reformatYYYYMMDD } from '../util/utility-functions';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-e-gfr',\n  templateUrl: './e-gfr.component.html',\n  styleUrls: ['./e-gfr.component.css']\n})\nexport class EGFRComponent implements OnInit, AfterViewInit {\n\n  egfrDataSource: MatTableDataSource<EgfrTableData>;\n  egfrRowMax = 7;\n\n  lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n    },\n  ];\n  lineChartLegend = false;\n  lineChartPlugins = [pluginAnnotations];\n  lineChartType = 'line';\n\n  constructor(public dataservice: DataService) {\n  }\n\n  displayedColumns = ['date', 'egfr'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.egfrDataSource = this.dataservice.egfrDataSource;\n  }\n\n  ngAfterViewInit(): void {\n    // todo: fix below, paginator doesn't work when assigned, shows all rows, doesn't limit to max, paging doesn't work\n    if (this.egfrDataSource.data.length > this.egfrRowMax) {\n      this.egfrDataSource.paginator = this.paginator;\n    }\n    this.egfrDataSource.sort = this.sort;\n    this.egfrDataSource.sortingDataAccessor = (data: EgfrTableData, header: string) => {\n      switch (header) {\n        case ('date'): {\n          return moment(data.date).unix();\n        }\n        default: {\n          return data[header];\n        }\n      }\n    };\n  }\n\n  EgfrResult(egfr: EgfrTableData): string {\n    return formatEgfrResult(egfr.egfr.value, egfr.unit);\n  }\n\n  getEgfrRowCssClass(egfr: EgfrTableData): string {\n    let cssClass = '';\n    const val = egfr.egfr;\n    if (val) {\n      switch (true) {\n        case (val >= 60):\n          cssClass = 'resultGood';\n          break;\n        case (val < 60 && val >= 15):\n          cssClass = 'resultBorderline';\n          break;\n        case (val < 15):\n          cssClass = 'resultCritical';\n          break;\n        default:\n          break;\n      }\n    }\n    return cssClass;\n  }\n\n  ddlChange(indexStr: string): void {\n    if (!indexStr) {\n      this.dataservice.emptyChart();\n      return;\n    }\n    else {\n      const index: number = parseInt(indexStr);\n      this.dataservice.filterDataSet(index);\n    }\n  }\n}\n","<b>Change in eGFR over Time</b>\n\n<table width=\"100%\">\n  <tr>\n    <td colspan=\"2\">\n      <select (change)=\"ddlChange($event.target.value)\">\n        <option value=\"\" disabled selected>Please select a dataset</option>\n        <option *ngFor=\"let option of dataservice.aggregatedChartData; let i = index\"\n          [selected]=\"i === dataservice.selectedIndex\" [value]=\"i\">{{option.label}}\n        </option>\n      </select>\n    </td>\n  </tr>\n  <tr>\n    <td class=\"col-50\">\n      <div class=\"chart-wrapper\">\n        <canvas baseChart [datasets]=\"dataservice.egfr.chartData\"\n          [options]=\"dataservice.egfr.lineChartOptions\" [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\"\n          [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\" height=\"200\">\n        </canvas>\n      </div>\n    </td>\n    <td class=\"col-50\">\n      <table mat-table matSort [dataSource]=\"egfrDataSource\" matSort width=\"100%\">\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n          <td mat-cell *matCellDef=\"let egfr\"> {{egfr.date | date: 'MM/dd/yyyy'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"egfr\">\n          <th mat-header-cell *matHeaderCellDef>Result</th>\n          <td mat-cell *matCellDef=\"let egfr\" [innerHTML]=\"EgfrResult(egfr)\"></td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"row.highlighted = !row.highlighted\"\n          (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\" [ngClass]=\"getEgfrRowCssClass(row)\">\n        </tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[5, 15, 30]\" showFirstLastButtons\n        [ngStyle]=\"{display: this.egfrDataSource.data.length > this.egfrRowMax ? 'block' : 'none'}\">\n      </mat-paginator>\n    </td>\n  </tr>\n</table>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {DataService} from '../services/data.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\n\n\n@Component({\n  selector: 'app-social-concern-panel',\n  templateUrl: './social-concern-panel.component.html',\n  styleUrls: ['./social-concern-panel.component.css']\n})\n\nexport class SocialConcernPanelComponent implements OnInit {\n  dataSource: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataService) {\n  }\n\n  displayedColumns = ['name', 'data', 'date'];\n\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataService.socialConcerns);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'date': return moment(item[property]).unix();\n        default: return item[property];\n      }\n    };\n  }\n  \n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<mat-panel-title class=\"group-header\">Health Concerns</mat-panel-title>\n<table mat-table [dataSource]=\"dataSource\" matSort>\n  <ng-container matColumnDef=\"checked\">\n    <th mat-header-cell *matHeaderCellDef>\n      <mat-icon>check</mat-icon>\n    </th>\n    <td mat-cell *matCellDef=\"let diagnosis\">\n      <mat-checkbox [(ngModel)]=\"diagnosis.checked\"></mat-checkbox>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"name\">Concern</th>\n    <td mat-cell *matCellDef=\"let concern\"> {{concern.name}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"data\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"data\">Value</th>\n    <td mat-cell *matCellDef=\"let concern\"> {{concern.data | titlecase }} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header=\"date\">Last update</th>\n    <td mat-cell  *matCellDef=\"let concern\"> {{concern.date}} </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n    [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\" (click)=\"row.highlighted = !row.highlighted\"\n    (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n  -->\n</table>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DiagnosisDialogComponent } from '../diagnosis-dialog/diagnosis-dialog.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-inactive-diagnosis-panel',\n  templateUrl: './inactive-diagnosis-panel.component.html',\n  styleUrls: ['./inactive-diagnosis-panel.component.css']\n})\n\n// todo: combine ActiveDiagnosisPanelCompenent and InactiveDiagnosisPanelCompenent into one component\nexport class InactiveDiagnosisPanelComponent implements OnInit {\n  displayedColumns: string[] = ['code', 'rxfilter', 'trend', 'firstOnset', 'firstRecorded'];\n  dataSource: any;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  private route: ActivatedRoute;\n  private router: Router;\n  constructor(public dataservice: DataService, private dialog: MatDialog, private rt: ActivatedRoute, private rtr: Router) {\n    this.route = rt;\n    this.router = rtr;\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataservice.conditions.inactiveConditions);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case \"firstRecorded\": return moment(item[property]).isValid() ? moment(item[property]).unix() : item[property];\n        case 'firstOnset': return moment(item[property]).isValid() ? moment(item[property]).unix() : item[property];\n        case 'code': return item[property].text.toUpperCase();\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  openDialog(row) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      name: this.dataservice.demographic.name,\n      condition: row.code.text,\n      history: row.history\n    };\n    this.dialog.open(DiagnosisDialogComponent, dialogConfig);\n  }\n\n  switchToHM(code: string) {\n    // console.log('Switch to Health Maintenance icon clicked. code=', code);\n    this.router.navigate(['/maint'], { queryParamsHandling: 'merge' });\n  }\n\n  switchToHS(code: string) {\n    // console.log('Switch to Health Status icon clicked. code=', code);\n    this.router.navigate(['/status'], { queryParamsHandling: 'merge' });\n  }\n\n}\n","<mat-panel-title class=\"group-header\">Inactive Diagnoses</mat-panel-title>\n<table mat-table [dataSource]=\"dataSource\" matSort>\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"code\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Condition</th>\n    <td mat-cell style=\"cursor: pointer;\" (click)=\"openDialog(condition)\" *matCellDef=\"let condition\">\n      {{condition.code.text}} </td>\n  </ng-container>\n  <!-- Rx Filter Column -->\n  <ng-container matColumnDef=\"rxfilter\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let condition\">\n      <mat-icon *ngIf=\"condition.profileId!=null\" (click)=\"switchToHM(condition.code)\"\n        matTooltip=\"Switch to Health Maintance using this codition as a focus\"\n        aria-label=\"Selection to change to the Health Maintance and Intervention tab using this condition as a focus\">\n        local_pharmacy</mat-icon>\n    </td>\n  </ng-container>\n  <!-- Trend Filter Column -->\n  <ng-container matColumnDef=\"trend\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let condition\">\n      <mat-icon *ngIf=\"condition.profileId!=null\" (click)=\"switchToHS(condition.code)\"\n        matTooltip=\"Switch to Heath Status using this condition as a focus\"\n        aria-label=\"Selection to change to the the Health Status Evaluation and Outcomes using this condition as a focus\">\n        timeline</mat-icon>\n    </td>\n  </ng-container>\n  <!-- Date Column -->\n  <ng-container matColumnDef=\"firstOnset\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date of Initial Diagnosis</th>\n    <td mat-cell *matCellDef=\"let condition\"> {{condition.firstOnset | nullCheck }} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"firstRecorded\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosis First Recorded</th>\n    <td mat-cell *matCellDef=\"let condition\"> {{condition.firstRecordedAsText | nullCheck}} </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<mat-paginator *ngIf=\"dataSource && dataSource.length > 10\" [pageSizeOptions]=\"[5, 10, 20]\" [pageSize]=\"20\"\n  showFirstLastButtons>\n</mat-paginator>\n\n<!-- <button>Mark selected as active</button> -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MccCounselingSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport moment from 'moment';\nimport {DataService} from '../services/data.service';\n\n@Component({\n  selector: 'app-counseling-panel',\n  templateUrl: './counseling-panel.component.html',\n  styleUrls: ['./counseling-panel.component.css']\n})\nexport class CounselingPanelComponent implements OnInit {\n  dataSource: MatTableDataSource<MccCounselingSummary>;\n  displayedColumns = ['topic', 'displayDate', 'performer', 'reasons', 'outcome', 'status'];\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataService.counseling);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'topic': return item[property].text;\n        case 'displayDate': return moment(item[property]).unix();\n        case 'outcome': return item[property].text;\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"group-header\" >Counseling</div>\n\n<table mat-table [dataSource]=\"dataSource\" matSort width=\"100%\">\n\n  <ng-container matColumnDef=\"topic\">\n    <th mat-header-cell *matHeaderCellDef width=\"35%\" mat-sort-header>Topic</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.topic.text}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"displayDate\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.displayDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"performer\" width=\"15%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Performer</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.performer}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"reasons\" width=\"20%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Reason</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.reasons}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"outcome\"width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Outcome</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.outcome.text}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.status | titlecase}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'outofrange': row.status == 'high'}\" (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { getSummaryMedicationRequests } from 'e-care-common-data-services';\nimport { MccMedicationSummaryList } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MedicationService {\n  public httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  /** GET medicationsummary by subject id and careplan Id.  Will 404 if id not found */\n  getMedicationSummaryBySubjectAndCareplan(subjectId: string, careplanId: string): Observable<MccMedicationSummaryList> {\n    return from(getSummaryMedicationRequests(careplanId)).pipe(\n      tap((_) => { this.log(`fetched Medication Lists id=${subjectId}, careplan=${careplanId}`); console.log(\"Fetched Medications\", _); }),\n      catchError(this.handleError<MccMedicationSummaryList>(`getContacts id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","var map = {\n\t\"./2.16.840.1.113762.1.4.1032.52.json\": [\n\t\t\"D9WS\",\n\t\t0\n\t],\n\t\"./2.16.840.1.113762.1.4.1032.9.json\": [\n\t\t\"g31M\",\n\t\t1\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.102.json\": [\n\t\t\"qTzT\",\n\t\t2\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.103.json\": [\n\t\t\"Wgcf\",\n\t\t3\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.111.json\": [\n\t\t\"qdj2\",\n\t\t4\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.113.json\": [\n\t\t\"zaVD\",\n\t\t5\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.114.json\": [\n\t\t\"DeZ0\",\n\t\t6\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.118.json\": [\n\t\t\"X4vU\",\n\t\t7\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.119.json\": [\n\t\t\"3jYB\",\n\t\t8\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.120.json\": [\n\t\t\"fNrw\",\n\t\t9\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.122.json\": [\n\t\t\"4//N\",\n\t\t10\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.123.json\": [\n\t\t\"fvKe\",\n\t\t11\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.126.json\": [\n\t\t\"cyxy\",\n\t\t12\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.128.json\": [\n\t\t\"Cpck\",\n\t\t13\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.129.json\": [\n\t\t\"6Bii\",\n\t\t14\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.130.json\": [\n\t\t\"fGU/\",\n\t\t15\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.131.json\": [\n\t\t\"EMmc\",\n\t\t16\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.132.json\": [\n\t\t\"qKmU\",\n\t\t17\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.135.json\": [\n\t\t\"KHF+\",\n\t\t18\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.137.json\": [\n\t\t\"JaPl\",\n\t\t19\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.138.json\": [\n\t\t\"sXCV\",\n\t\t20\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.139.json\": [\n\t\t\"OGWR\",\n\t\t21\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.14.json\": [\n\t\t\"if5F\",\n\t\t22\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.140.json\": [\n\t\t\"Dhz4\",\n\t\t23\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.141.json\": [\n\t\t\"YLf5\",\n\t\t24\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.142.json\": [\n\t\t\"Ee0b\",\n\t\t25\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.143.json\": [\n\t\t\"2/rW\",\n\t\t26\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.144.json\": [\n\t\t\"4xjY\",\n\t\t27\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.145.json\": [\n\t\t\"31w/\",\n\t\t28\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.147.json\": [\n\t\t\"Tk1G\",\n\t\t29\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.148.json\": [\n\t\t\"FJa4\",\n\t\t30\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.149.json\": [\n\t\t\"fTh4\",\n\t\t31\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.15.json\": [\n\t\t\"Eew0\",\n\t\t32\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.150.json\": [\n\t\t\"vpgI\",\n\t\t33\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.151.json\": [\n\t\t\"DOPn\",\n\t\t34\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.153.json\": [\n\t\t\"tPAa\",\n\t\t35\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.154.json\": [\n\t\t\"9MhF\",\n\t\t36\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.159.json\": [\n\t\t\"3ETx\",\n\t\t37\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.161.json\": [\n\t\t\"53oA\",\n\t\t38\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.166.json\": [\n\t\t\"SkwX\",\n\t\t39\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.176.json\": [\n\t\t\"YI6M\",\n\t\t40\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.179.json\": [\n\t\t\"TQMV\",\n\t\t41\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.24.json\": [\n\t\t\"WdY5\",\n\t\t42\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.27.json\": [\n\t\t\"l9d1\",\n\t\t43\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.30.json\": [\n\t\t\"ZejX\",\n\t\t44\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.33.json\": [\n\t\t\"VhJA\",\n\t\t45\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.36.json\": [\n\t\t\"HX63\",\n\t\t46\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.40.json\": [\n\t\t\"/Jhn\",\n\t\t47\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.43.json\": [\n\t\t\"mJK9\",\n\t\t48\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.47.json\": [\n\t\t\"YvgL\",\n\t\t49\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.50.json\": [\n\t\t\"Qsl8\",\n\t\t50\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.53.json\": [\n\t\t\"t4kf\",\n\t\t51\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.6.json\": [\n\t\t\"hfTd\",\n\t\t52\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.60.json\": [\n\t\t\"r59/\",\n\t\t53\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.61.json\": [\n\t\t\"+25I\",\n\t\t54\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.66.json\": [\n\t\t\"NjC9\",\n\t\t55\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.67.json\": [\n\t\t\"DmGx\",\n\t\t56\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.70.json\": [\n\t\t\"gHAQ\",\n\t\t57\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.73.json\": [\n\t\t\"whzz\",\n\t\t58\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.76.json\": [\n\t\t\"RPGl\",\n\t\t59\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.81.json\": [\n\t\t\"0kvr\",\n\t\t60\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.84.json\": [\n\t\t\"EwOx\",\n\t\t61\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.85.json\": [\n\t\t\"IDq+\",\n\t\t62\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.90.json\": [\n\t\t\"cKHq\",\n\t\t63\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.93.json\": [\n\t\t\"KezH\",\n\t\t64\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.96.json\": [\n\t\t\"3ql1\",\n\t\t65\n\t],\n\t\"./2.16.840.1.113762.1.4.1222.97.json\": [\n\t\t\"wN4K\",\n\t\t66\n\t],\n\t\"./2.16.840.1.113883.3.117.1.7.1.215.json\": [\n\t\t\"ewrL\",\n\t\t67\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.103.12.1020.json\": [\n\t\t\"7vwN\",\n\t\t68\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.103.12.1021.json\": [\n\t\t\"rfg7\",\n\t\t69\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.104.12.1017.json\": [\n\t\t\"v1/N\",\n\t\t70\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.105.12.1104.json\": [\n\t\t\"0bK4\",\n\t\t71\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.106.12.1004.json\": [\n\t\t\"eeyq\",\n\t\t72\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.109.12.1011.json\": [\n\t\t\"NI0Q\",\n\t\t73\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.117.12.1016.json\": [\n\t\t\"Dar9\",\n\t\t74\n\t],\n\t\"./2.16.840.1.113883.3.464.1003.120.12.1003.json\": [\n\t\t\"wbsG\",\n\t\t75\n\t],\n\t\"./2.16.840.1.113883.3.526.3.327.json\": [\n\t\t\"Vl9n\",\n\t\t76\n\t],\n\t\"./2.16.840.1.113883.3.526.3.369.json\": [\n\t\t\"RAp1\",\n\t\t77\n\t],\n\t\"./2.16.840.1.113883.3.526.3.376.json\": [\n\t\t\"8UVz\",\n\t\t78\n\t],\n\t\"./2.16.840.1.113883.3.600.145.json\": [\n\t\t\"BPaB\",\n\t\t79\n\t],\n\t\"./2.16.840.1.113883.3.600.450.json\": [\n\t\t\"luxD\",\n\t\t80\n\t],\n\t\"./2.16.840.1.113883.3.67.1.101.1.269.json\": [\n\t\t\"TIQl\",\n\t\t81\n\t],\n\t\"./2.16.840.1.113883.3.6929.2.1002.json\": [\n\t\t\"a0ui\",\n\t\t82\n\t],\n\t\"./2.16.840.1.113883.3.6929.3.1000.json\": [\n\t\t\"3RbE\",\n\t\t83\n\t],\n\t\"./social-concern.json\": [\n\t\t\"wMha\",\n\t\t84\n\t],\n\t\"./valueset_loadlist.json\": [\n\t\t\"qb6k\",\n\t\t\"resources-valueset_loadlist-json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"MfLE\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\n\n@Component({\n  selector: 'app-health-status',\n  templateUrl: './health-status.component.html',\n  styleUrls: ['./health-status.component.css']\n})\nexport class HealthStatusComponent implements OnInit {\n  featureToggling: any = Constants.featureToggling;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n  <section class=\"clearfix\">\n    <app-clinical-test-results *ngIf=\"featureToggling.status.clinicalResults\"></app-clinical-test-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-lab-test-result *ngIf=\"featureToggling.status.labResults\"></app-lab-test-result>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-activities-results *ngIf=\"featureToggling.status.activities\"></app-clinical-activities-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-exam-results *ngIf=\"featureToggling.status.exam\"></app-clinical-exam-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-questionaires-results *ngIf=\"featureToggling.status.questionaires\"></app-clinical-questionaires-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-procedure-results *ngIf=\"featureToggling.status.procedure\"></app-clinical-procedure-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-history-results *ngIf=\"featureToggling.status.history\"></app-clinical-history-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-imaging-results *ngIf=\"featureToggling.status.imaging\"></app-clinical-imaging-results>\n  </section>\n  <section class=\"clearfix\">\n    <app-clinical-therapy-results *ngIf=\"featureToggling.status.therapy\"></app-clinical-therapy-results>\n  </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HealthGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(true);\n      }, 500);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport {DataService} from '../services/data.service';\n\n\n@Component({\n  selector: 'app-bpgraph',\n  templateUrl: './bpgraph.component.html',\n  styleUrls: ['./bpgraph.component.css']\n})\nexport class BPGraphComponent implements OnInit {\n\n  lineChartData: ChartDataSets[] = [\n    { data: [\n        {\n          x: new Date('2016-12-12T00:00:00Z'),\n          y: 155\n        },\n        {\n          x: new Date('2017-01-10T00:00:00Z'),\n          y: 147\n        },\n        {\n          x: new Date('2017-02-11T00:00:00Z'),\n          y: 147\n        },\n        {\n          x: new Date('2017-03-11T00:00:00Z'),\n          y: 155\n        },\n        {\n          x: new Date('2017-04-23T00:00:00Z'),\n          y: 155\n        },\n        {\n          x: new Date('2017-05-21T00:00:00Z'),\n          y: 155\n        }],\n      label: 'Systolic', fill: false},\n    { data: [\n        {\n          x: new Date('2016-12-12T00:00:00Z'),\n          y: 91\n        },\n        {\n          x: new Date('2017-01-10T00:00:00Z'),\n          y: 91\n        },\n        {\n          x: new Date('2017-02-11T00:00:00Z'),\n          y: 89\n        },\n        {\n          x: new Date('2017-03-11T00:00:00Z'),\n          y: 90\n        },\n        {\n          x: new Date('2017-04-23T00:00:00Z'),\n          y: 89\n        },\n        {\n          x: new Date('2017-05-21T00:00:00Z'),\n          y: 102\n        }],      label: 'Diastolic', fill: false},\n  ];\n\n\n  lineChartLabels: Label[] = ['Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May'];\n\n  lineChartOptions = {\n    responsive: false,\n    maintainAspectRatio: true,\n    scales: {\n      yAxes: {\n        ticks: {\n          suggestedMax: 180\n        }\n      },\n      xAxes: {\n        type: 'time',\n        time: {\n          unit: 'month',\n        }\n      }\n    }\n  };\n\n  lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n    },\n  ];\n\n  lineChartLegend = true;\n  lineChartPlugins =  [\n    {\n      annotation: {\n        annotations: {\n          drawTime: 'beforeDatasetsDraw',\n          type: 'box',\n          xScaleID: 'x-axis-0',\n          yScaleID: 'y-axis-0',\n          borderWidth: 0,\n          yMin: 70,\n          yMax: 130,\n          backgroundColor: 'rgba(46, 204, 113,0.3)'\n        }\n      }\n    }];\n  lineChartType = 'line';\n\n  constructor(public dataservice: DataService) {\n\n  }\n\n  ngOnInit(): void {\n\n\n\n  }\n\n}\n","<div class=\"chart-wrapper\">\n<!--\n  <canvas baseChart\n          [datasets]=\"lineChartData\"\n          [labels]=\"lineChartLabels\"\n          [options]=\"lineChartOptions\"\n          [colors]=\"lineChartColors\"\n          [legend]=\"lineChartLegend\"\n          [chartType]=\"lineChartType\"\n          [plugins]=\"lineChartPlugins\" height=\"200\">\n  </canvas>\n  -->\n  <!--          [datasets]=\"this.dataservice.vitalSigns.chartData\"-->\n  <!--          [labels]=\"this.dataservice.vitalSigns.xAxisLabels\"-->\n\n\n  <canvas baseChart\n          [datasets]=\"this.dataservice.vitalSigns.chartData\"\n          [options]=\"this.dataservice.vitalSigns.lineChartOptions\"\n          [colors]=\"lineChartColors\"\n          [legend]=\"lineChartLegend\"\n          [chartType]=\"lineChartType\"\n          [plugins]=\"lineChartPlugins\" height=\"200\">\n  </canvas>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../services/data.service';\n\n@Component({\n  selector: 'app-clinical-goals',\n  templateUrl: './clinical-goals.component.html',\n  styleUrls: ['./clinical-goals.component.css']\n})\nexport class ClinicalGoalsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) { }\n  displayedColumns = ['rank', 'description', 'created', 'targetdate', 'status'];\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"group-header\">Practitioner Goals</div>\n<table mat-table [dataSource]=\"dataservice.goals.activeClinicalGoals\" width=\"100%\">\n\n  <ng-container matColumnDef=\"rank\">\n    <th mat-header-cell *matHeaderCellDef>Priority</th>\n<!--    <td mat-cell *matCellDef=\"let goal\"> {{goal.priority.replace('-priority', '').replace('Undefined', 'udf')}} </td>-->\n    <td mat-cell *matCellDef=\"let goal\">\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('high')\">priority_high</mat-icon>\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('low')\">low_priority</mat-icon>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Goal</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.description}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"created\">\n    <th mat-header-cell *matHeaderCellDef>Created</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.startDateText}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"targetdate\">\n    <th mat-header-cell *matHeaderCellDef>Target Date</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.targetDateText}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef>Status</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.achievementStatus.text}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\" (click)=\"row.highlighted = !row.highlighted\"\n      (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n</table>\n\n<!-- <button>Add Goal</button> -->\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { Color } from 'ng2-charts';\nimport * as pluginAnnotations from 'chartjs-plugin-annotation';\nimport { DataService } from '../services/data.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { WotTableData } from '../datamodel/weight-over-time';\nimport { formatWotResult, reformatYYYYMMDD } from '../util/utility-functions';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\nimport { MatSort } from '@angular/material/sort';\nimport { Constants } from '../common/constants';\n\n@Component({\n  selector: 'app-weight-over-time',\n  templateUrl: './weight-over-time.component.html',\n  styleUrls: ['./weight-over-time.component.css']\n})\n\n\nexport class WeightOverTimeComponent implements OnInit, AfterViewInit {\n  Constants = Constants;\n  wotDataSource: MatTableDataSource<WotTableData>;\n  wotRowMax = 7;\n\n  lineChartColors: Color[] = [\n    {\n      borderColor: 'black',\n    },\n  ];\n  lineChartLegend = false;\n  lineChartPlugins = [pluginAnnotations];\n  lineChartType = 'line';\n\n  constructor(public dataservice: DataService) {\n\n  }\n\n  displayedColumns = ['date', 'result'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.wotDataSource = this.dataservice.wotDataSource;\n  }\n  ngAfterViewInit(): void {\n    if (this.wotDataSource.data.length > this.wotRowMax) {\n      this.wotDataSource.paginator = this.paginator;\n    }\n    this.wotDataSource.sort = this.sort;\n    this.wotDataSource.sortingDataAccessor = (data: WotTableData, header: string) => {\n      switch (header) {\n        case ('result'): {\n          return data.value;\n        }\n        case ('date'): {\n          return moment(data.date).unix();\n        }\n        default: {\n          return data[header];\n        }\n      }\n    };\n  }\n\n  WotResult(wot: WotTableData): string {\n    return formatWotResult(wot.value, wot.unit);\n  }\n\n  getWotRowCssClass(wot: WotTableData): string {\n    return \"\";\n    let cssClass = '';\n    const val = wot.value;\n    if (val) {\n      switch (true) {\n        case (val >= 200):\n          cssClass = 'resultCritical';\n          break;\n        case (val < 200 && val >= 105):\n          cssClass = 'resultBorderline';\n          break;\n        case (val < 105):\n          cssClass = 'resultGood';\n          break;\n        default:\n          break;\n      }\n    }\n    return cssClass;\n  }\n}\n","<b>Change in weight over Time ({{Constants.featureToggling.preferredUnits.wot + \"s\"}})</b>\n<table width=\"100%\">\n  <tr>\n    <td class=\"col-50\">\n      <div class=\"chart-wrapper\">\n        <canvas baseChart [datasets]=\"this.dataservice.wot.chartData\" [options]=\"this.dataservice.wot.lineChartOptions\"\n          [colors]=\"lineChartColors\" [legend]=\"lineChartLegend\" [chartType]=\"lineChartType\" [plugins]=\"lineChartPlugins\"\n          height=\"200\">\n        </canvas>\n      </div>\n    </td>\n    <td class=\"col-50\">\n      <table mat-table [dataSource]=\"wotDataSource\" matSort width=\"100%\">\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n          <td mat-cell *matCellDef=\"let wot\"> {{wot.date | date: 'MM/dd/yyyy'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"result\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Result</th>\n          <td mat-cell *matCellDef=\"let wot\" [innerHTML]=\"WotResult(wot)\"></td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"row.highlighted = !row.highlighted\"\n          (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\">\n        </tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[5, 15, 30]\" showFirstLastButtons\n        [ngStyle]=\"{display: this.wotDataSource.data.length > this.wotRowMax ? 'block' : 'none'}\">\n      </mat-paginator>\n    </td>\n  </tr>\n</table>","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { checkAuthorize } from 'e-care-common-data-services';\nimport { DOCUMENT } from '@angular/common';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SubjectDataService } from './services/subject-data-service.service';\nimport { DataService } from './services/data.service';\nimport { environment } from '../environments/environment';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MccCarePlan } from './generated-data-api/models/MccCarePlan';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { version } from '../../package.json';\nimport { Constants } from './common/constants';\nimport featureToggling from \"../assets/json/data/feature-toggling.json\";\nimport labMappings from \"../assets/json/data/lab-mappings.json\";\nimport vitalMappings from \"../assets/json/data/vital-mappings.json\";\nimport categoryMappings from \"../assets/json/data/category-mappings.json\";\n\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class AppComponent implements OnInit, AfterViewInit {\n  public version: string = version + \" – \" + \"BETA – Data may be incomplete!\";\n\n  // todo:  use of patSearch template variable to set focus not working..\n  @ViewChild('patSearch', { static: true }) patSearch: any;\n  navLinks: any[];\n  activeLinkIndex = -1;\n  window: any;\n\n  constructor(public dataservice: DataService, public subjectdataservice: SubjectDataService,\n    private route: ActivatedRoute, private changeDetector: ChangeDetectorRef,\n    private router: Router,\n    @Inject(DOCUMENT) private document,private http: HttpClient) {\n    this.window = this.document.defaultView;\n\n    this.navLinks = [\n\n      {\n          label: 'Goals',\n          link: './goals',\n          index: 0\n        }, {\n          label: 'Health Concerns',\n          link: './health',\n          index: 1\n        },  {\n          label: 'Health Maintenance & Interventions',\n          link: './maint',\n          index: 2\n        }, {\n          label: 'Health Status Evaluation & Outcomes',\n          link: './status',\n          index: 2\n        }, {\n          label: 'Care Team',\n          link: './care',\n          index: 2\n        }\n    ];\n  }\n\n\n  myForm: FormGroup;\n\n  errorMessage: any;\n  postId: any;\n\n  basefhirserver = 'https://api.logicahealth.org/MCCeCarePlanTest/open/';\n  secondaryfhirserver = 'NONE';\n  title = 'providersmartapp';\n  events: string[] = [];\n  opened: boolean;\n  apiURL: string;\n  currentSubjectId = '';\n  currentCarePlanId = '';\n  patientSearch = new FormControl('', Validators.required);\n\n  filteredPatients: Observable<any[]>;\n  selectedPatientId = '';\n  showPatientSearch = false;\n  smartLaunch = false;\n  refreshedForced = false;\n  minSearchCharacters = 3;\n  devmode = false;\n  patientCarePlans: Observable<MccCarePlan[]>;\n\n  parseOverrides() {\n    Constants.featureToggling = featureToggling;\n    Constants.labMappings = labMappings;\n    Constants.vitalMappings = vitalMappings;\n    Constants.categoryMappings = categoryMappings;\n  }\n\n\n  update(foobarsecondaryfhirserver : string) {\n\n    console.error('secondaryfhirserver ahahhhh ' + foobarsecondaryfhirserver);\n\n    this.dataservice.updateFHIRConnection2(foobarsecondaryfhirserver);\n\n    this.dataservice.getPatientGoals();\n\n\n\n  }\n  ngOnInit(): void {\n\n    this.myForm = new FormGroup(\n      {\n        secondaryfhirserver: new FormControl()\n      }\n    );\n\n    console.error('this.myForm.controls[secondaryfhirserver]' + this.myForm.controls['secondaryfhirserver'].value);\n    this.myForm.controls['secondaryfhirserver'].setValue(this.secondaryfhirserver);\n\n    this.parseOverrides();\n    this.dataservice.mainfhirserver = this.basefhirserver;\n    this.dataservice.secondaryfhirserver = this.secondaryfhirserver;\n    // this.apiURL = environment.mccapiUrl;\n    this.initFilteredPatients();\n    this.dataservice.setCurrentSubject(this.currentSubjectId);\n    this.dataservice.setCurrentCarePlan(this.currentCarePlanId);\n    this.route.queryParams.subscribe(params => {\n      // @ts-ign\n      console.log(params); // { order: \"popular\" }\n\n      const dev = params.devmode;\n      this.devmode = (dev === 'true');\n      console.log('Development Mode: ' + this.devmode);\n      if (params.subject != null) {\n        this.currentSubjectId = params.subject;\n        this.dataservice.setCurrentSubject(this.currentSubjectId);\n      }\n    }\n    );\n\n    this.router.events.subscribe((res) => {\n      this.activeLinkIndex = this.navLinks.indexOf(this.navLinks.find(tab => tab.link === '.' + this.router.url));\n    });\n\n    const skey = this.window.sessionStorage.SMART_KEY;\n    const key = skey ? skey.replace(/['\"]+/g, '') : \"\";\n    console.log('Ang: Smart Key is ' + key);\n    if (key != null) {\n      checkAuthorize().then(val => {\n        console.log({val})\n      }).catch(err => {\n        console.log({err})\n      })\n      this.updateDataContext(key, 14);\n    }\n  }\n\n  waitFor(time: number) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve('I promise to return after ' + time + 'milliseconds!');\n      }, time);\n    });\n  }\n\n  async updateDataContext(key: string, count: number): Promise<void> {\n    console.log('Updating Context aaaaaaaaaaa' + key);\n    console.log('Updating Context aaaaaaaaaaa');\n    const info = JSON.parse(this.window.sessionStorage.getItem(key));\n    if (info != null) {\n\n      console.log('server: ' + info.serverUrl);\n      const tokenResp = info.tokenResponse;\n      if (tokenResp.access_token != null) {\n        console.log('access_token: ' + tokenResp.access_token);\n        console.log('patient: ' + tokenResp.patient);\n        this.dataservice.updateFHIRConnection(info.serverUrl, tokenResp.access_token);\n        this.patientSelected(tokenResp.patient);\n        this.smartLaunch = true;\n        this.changeDetector.detectChanges();\n      } else {\n        // Smart on FHIR still not ready (grrr....)\n        if (count > 0) {\n          const t = await this.waitFor(1000);\n          console.log(t + '(' + count + ')');\n          this.updateDataContext(key, count - 1);\n        }\n      }\n    } else {\n      console.log('No info for key ' + key + ' found');\n    }\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  patientSelected(data) {\n    this.currentSubjectId = data;\n    this.patientCarePlans = new Observable<MccCarePlan[]>();     // Initialize patient care plans to empty object.\n    this.dataservice.setCurrentSubject(this.currentSubjectId);   // Care Plan selection for patient done in dataservice.setCurrentSubject\n\n    this.patientSearch.setValue('');\n    this.showPatientSearch = false;\n    this.initFilteredPatients();\n    // this.goalscmp.refreshTargets();\n  }\n\n  togglePatientSearch() {\n    this.showPatientSearch = !this.showPatientSearch;\n    if (this.showPatientSearch) {\n      this.patientSearch.setValue('');\n      this.patSearch.nativeElement.focus();\n    }\n  }\n\n  initFilteredPatients() {\n    // this.filteredPatients = new Observable<any[]>();\n    // this.filteredPatients = this.patientSearch.valueChanges\n    //   .pipe(\n    //     startWith(''),\n    //     // debounceTime(300),\n    //     distinctUntilChanged(),\n    //     switchMap(value => this._dataFilter(value || ''))\n    //   );\n  }\n}\nfunction bootstrap(arg0: any, arg1: any[]) {\n  throw new Error('Function not implemented.');\n}\n\nfunction Window(Window: any, arg1: { useValue: any; }): any {\n  throw new Error('Function not implemented.');\n}\n\n","<script>\n  angular.module('urlExample', [])\n    .controller('ExampleController', ['$scope', function($scope) {\n      $scope.url = {\n        text: 'http://google.com'\n      };\n    }]);\n</script>\n\n<mat-toolbar color=\"primary\" style=\"height:36px;min-height:36px\">\n  <mat-toolbar-row>\n    <span>Careplan&nbsp;&nbsp;<small>v</small>{{version}}</span>\n    <!-- This fills the remaining space of the current row -->\n    <span class=\"center-name\">{{dataservice.demographic.name}}, DOB: {{dataservice.demographic.dateOfBirth}}</span>\n    <span class=\"example-fill-remaining-space\"></span>\n    <!-- todo: put patientSearch style into app.component.css file -->\n    <!-- todo: patSearch template variable useage to set focus when field is visible is not working -->\n    <input type=\"text\" #patSearch *ngIf=\"showPatientSearch\"\n      style=\"float: right; width:400px; height:60%; font-size: .8em; background: white; color: black; padding-left: .5em;\"\n      matInput placeholder=\"Enter at least {{minSearchCharacters}} characters to search patient by name\"\n      [formControl]=\"patientSearch\" [matAutocomplete]=\"auto\">\n    <mat-icon matTooltip=\"Select a new patient\" aria-label=\"Button to select a new patient\"\n      (click)=\"togglePatientSearch()\" *ngIf=\"devmode\">person\n    </mat-icon>\n    <mat-icon matTooltip=\"Select a careplan\" aria-label=\"Button to select and new careplan\"\n      [matMenuTriggerFor]=\"menuCareplan\">folder\n    </mat-icon>\n    <mat-menu #menuCareplan=\"matMenu\">\n      <button mat-menu-item *ngFor=\"let plan of this.dataservice.careplans\"\n        (click)=\"this.dataservice.setCurrentCarePlan(plan.fhirid)\">\n        {{plan.title}}\n      </button>\n    </mat-menu>\n    <mat-icon matTooltip=\"Show current user information\" aria-label=\"Button to show the users information\">\n      account_circle\n    </mat-icon>\n    <mat-icon matTooltip=\"Show control panel\" aria-label=\"Buttn to show or hide the control panel\" class=\"settings-icon\"\n      (click)=\"sidenav.toggle()\">settings\n    </mat-icon>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-sidenav-container>\n  <mat-sidenav position=\"end\" #sidenav mode=\"side\" [(opened)]=\"opened\" (opened)=\"events.push('open!')\"\n    (closed)=\"events.push('close!')\">\n    <table>\n      <tr>\n        <td>\n          <p>FHIR Server URL:</p>\n        </td>\n        <td>\n          <p>{{dataservice.mainfhirserver}}</p>\n        </td>\n      </tr>\n\n\n\n      <tr>\n        <td>\n          <p>API Server URL</p>\n        </td>\n        <td>\n          <p>{{apiURL}}</p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Development Mode</p>\n        </td>\n        <td>\n          <p>{{devmode}}</p>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Smart Launch</p>\n        </td>\n        <td>\n          <p>{{smartLaunch}}</p>\n        </td>\n      </tr>\n<tr>\n<td>\n\n  <mat-form-field (ngSubmit)='update($event)' color='primary' id='search-input' class='full-width' appearance='outline'>\n    <mat-label color='red'>Secondary FHIR Server</mat-label>\n    <input #searchBar matInput  [(ngModel)]='secondaryfhirserver' name='secondaryfhirserver' [value]='secondaryfhirserver' (keyup.enter)='update($event)'>\n </mat-form-field>\n\n <button mat-raised-button color=\"primary\" (click)='update(secondaryfhirserver)' id='submit-search' type='submit' for='searchBar'>Submit</button>\n\n\n</td>\n\n\n</tr>\n\n\n\n    </table>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-demographics-panel></app-demographics-panel>\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"patientSelected($event.option.value)\">\n      <mat-option *ngFor=\"let patient of filteredPatients | async\" [value]=\"patient.fhirid\">\n        {{ patient.name }}\n      </mat-option>\n    </mat-autocomplete>\n    <nav mat-tab-nav-bar>\n      <a mat-tab-link *ngFor=\"let link of navLinks\" [routerLink]=\"link.link\" queryParamsHandling=\"preserve\"\n        routerLinkActive #rla=\"routerLinkActive\" [active]=\"rla.isActive\">\n        {{link.label}}&nbsp;\n      </a>\n    </nav>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-therapy-results',\n  templateUrl: './clinical-therapy-results.component.html',\n  styleUrls: ['./clinical-therapy-results.component.css']\n})\nexport class ClinicalTherapyResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n  }\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n  }\n\n}\n","<div class=\"group-header\">Therapy</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n  <tr *ngFor=\"let res of dataservice.therapy\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-testgraph1',\n  templateUrl: './testgraph1.component.html',\n  styleUrls: ['./testgraph1.component.css']\n})\n\nexport class Testgraph1Component implements OnInit {\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      // xAxes: [{\n      //   type: 'time',\n      //   time: {\n      //     unit: 'month'\n      //   }\n      // }],\n      // yAxes: [{\n      //   ticks: {\n      //     suggestedMax: 10,\n      //     suggestedMin: 0\n      //   }\n      // }]\n      xAxes: [{\n        type: 'time',\n        distribution: 'linear',\n        time: {\n          unit: 'month'\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          suggestedMax: 10,\n          suggestedMin: 0\n        }\n      }]\n    }\n  };\n\n  public barChartType: ChartType = 'line';\n  public barChartLegend = true;\n  public barChartData: ChartDataSets[] = [\n    { data: [\n        {x: new Date('2020-02-20'), y: '1'},\n        {x: new Date('2020-03-22'), y: '2'},\n        {x: new Date('2020-03-23'), y: '6'},\n        {x: new Date('2020-05-24'), y: '8'}\n      ],\n      fill: false,\n      label: 'TEST 1'\n    },\n    { data: [\n        {x: new Date('2020-01-22'), y: '7'},\n        {x: new Date('2020-02-24'), y: '4'},\n        {x: new Date('2020-03-26'), y: '1'},\n        {x: new Date('2020-04-29'), y: '9'}\n      ],\n      fill: false,\n      label: 'TEST 2'\n    },\n  ];\n\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"display: block;\">\n  <canvas baseChart\n          [datasets]=\"barChartData\"\n          [options]=\"barChartOptions\"\n          [legend]=\"barChartLegend\"\n          [chartType]=\"barChartType\">\n  </canvas>\n</div>\n\n","import { Observation } from 'fhir/r4';\nimport { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-lab-test-result',\n  templateUrl: './lab-test-result.component.html',\n  styleUrls: ['./lab-test-result.component.css']\n})\nexport class LabTestResultComponent implements OnInit {\n  loadingText: string = \"Loading...\";\n  results: Observation[] = [];\n  patientId: string;\n  longTermCondition: string;\n\n  constructor(\n    public dataservice: DataService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(`in LabTestResultComponent ngOnInit(): this.dataservices.egfr : `, this.dataservice.egfr);\n    // Determine if there is no careplan selected)\n  }\n\n  getEGFRisLoaded(): boolean {\n    return window[Constants.EGFRisLoaded];\n  }\n\n  getUACRisLoaded(): boolean {\n    return window[Constants.UACRisLoaded];\n  }\n}\n","<div class=\"group-header\">Tests</div>\n<table width=\"100%\">\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n  <tr>\n    <td>{{this.dataservice.egfr.mostRecentEgfr.test}}</td>\n    <td [innerHTML]=\"this.dataservice.egfr.mostRecentEgfr.result\"></td>\n    <td>{{this.dataservice.egfr.mostRecentEgfr.date | date: 'MM/dd/yyyy'}}</td>\n  </tr>\n  <tr>\n    <td colspan=\"3\">\n      <app-e-gfr *ngIf=\"getEGFRisLoaded()\"></app-e-gfr>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"3\">\n      <app-uacr *ngIf=\"getUACRisLoaded()\"></app-uacr>\n    </td>\n  </tr>\n  <tr *ngIf=\"!dataservice.labResults\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n  <tr *ngFor=\"let res of dataservice.labResults\">\n    <td>{{res.name}}</td>\n    <td>{{res.value}}</td>\n    <td>{{res.date}}</td>\n  </tr>\n\n</table>\n","import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\nimport { FormBuilder, Validators, FormGroup, FormControl } from \"@angular/forms\";\nimport moment from 'moment';\nimport { GoalSummary } from '../generated-data-api/models/GoalSummary';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GoalTarget } from '../generated-data-api/models/GoalTarget';\nimport { MccCodeableConcept, MccCoding } from '../generated-data-api';\nimport { DataService } from '../services/data.service';\n\n\n@Component({\n  selector: 'course-dialog',\n  templateUrl: './course-dialog.component.html',\n  styleUrls: ['./course-dialog.component.css']\n})\nexport class CourseDialogComponent implements OnInit {\n\n  constructor(public dataservice: DataService,private http: HttpClient) { }\n\n\n\n  form: FormGroup;\n  description: string;\n  errorMessage: any;\n  postId: any;\n\n\n  ngOnInit() {\n    this.form = new FormGroup(\n      {\n        priority: new FormControl(),\n        expressedByType: new FormControl(),\n        description: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(60)]),\n        achievementStatus: new FormControl(),\n        achievementText: new FormControl(),\n        lifecycleStatus: new FormControl('', [Validators.required]),\n        startDateText: new FormControl(),\n        targetDateText: new FormControl(),\n        addresses: new FormControl(),\n        expressedBy: new FormControl(),\n        acceptance: new FormControl(),\n        targets: new FormControl()\n\n      });\n  }\n\n\n  save() {\n    console.trace('priority ' + this.form.controls['priority'].value);\n    console.trace('expressedByType ' + this.form.controls['expressedByType'].value);\n    console.trace('description ' + this.form.controls['description'].value);\n    console.trace('achievementStatus ' + this.form.controls['achievementStatus'].value);\n    console.trace('achievementText ' + this.form.controls['achievementText'].value);\n    if (!this.form.controls['startDateText'].dirty) {\n      console.trace('startDateText ' + this.form.controls['startDateText'].value);\n    }\n\n    if (!this.form.controls['targetDateText'].pristine) {\n    console.trace('targetDateText ' + this.form.controls['targetDateText'].value);\n    }\n    console.trace('addresses ' + this.form.controls['addresses'].value);\n    console.trace('expressedBy ' + this.form.controls['expressedBy'].value);\n    console.trace('acceptance ' + this.form.controls['acceptance'].value);\n    console.trace('targets ' + this.form.controls['targets'].value);\n    console.trace('lifecycleStatus ' + this.form.controls['lifecycleStatus'].value);\n\n\n    const url = '/creategoal?patientId=';\n\n\n\n\n    const gtmeasure : MccCodeableConcept = {\n      text:this.form.controls['targets'].value\n    }\n\n    const gt : GoalTarget = {\n      measure:gtmeasure,\n      dueAsText:this.form.controls['targetDateText'].value\n    }\n    var gts = [gt];\n\n\n    const acs : MccCoding = {\n      code:this.form.controls['achievementStatus'].value\n    };\n\n    var acss = [acs];\n    const achievementStatus : MccCodeableConcept = {\n      text:this.form.controls['achievementStatus'].value,\n      coding:acss\n    }\n\n    const ada: GoalSummary = {\n      priority: this.form.controls['priority'].value,\n      lifecycleStatus: this.form.controls['lifecycleStatus'].value,\n      description: this.form.controls['description'].value,\n      achievementStatus : achievementStatus,\n      startDateText:  this.form.controls['startDateText'].dirty ?  moment(this.form.controls['startDateText'].value).format(\"YYYY-MM-DD\") : null,\n      targetDateText: this.form.controls['targetDateText'].dirty ? moment(this.form.controls['targetDateText'].value).format(\"YYYY-MM-DD\"): null,\n      addresses: this.form.controls['addresses'].value,\n      expressedBy: this.form.controls['expressedBy'].value,\n      acceptance: this.form.controls['acceptance'].value,\n\n      targets :  gts,\n      server: this.dataservice.mainfhirserver\n    };\n\n\n    console.log(\"ada  = \" + JSON.stringify(ada));\n\n\n\n    this.http.post<any>(url + this.dataservice.currentPatientId, ada).subscribe({\n      next: data => {\n        this.postId = data.id;\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        console.error('There was an error!', error);\n      }\n    })\n\n\n\n  }\n\n\n\n  close() {\n    this.dataservice.getPatientGoals();\n  }\n\n  isDisabled() {\n\n    console.error('this.form.valid ', this.form.valid);\n    console.error('this.form.valid ', this.form.valid);\n    console.error('this.form.valid ', this.form.valid);\n    console.error('this.form.valid ', this.form.valid);\n    console.error('this.form.valid ', this.form.valid);\n    console.error('this.form.valid ', this.form.valid);\n\n    return this.form.valid;\n    // return true;\n  }\n}\n","<h2 mat-dialog-title>{{description}}</h2>\n<mat-dialog-content [formGroup]=\"form\">\n\n\n\n  <mat-form-field>\n    <input matInput required placeholder=\"Goal Description\" formControlName=\"description\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Goal Lifecycle Status</mat-label>\n    <select matNativeControl required formControlName=\"lifecycleStatus\">\n      <option value=\"proposed\">Proposed A goal is proposed for this patient.</option>\n      <option value=\"planned\">Planned A goal is planned for this patient.</option>\n      <option value=\"accepted\">Accepted A proposed goal was accepted or acknowledged.</option>\n      <option value=\"active\">Active The goal is being sought actively.</option>\n      <option value=\"on-hold\">On Hold The goal remains a long term objective but is no longer being actively pursued for a temporary period of time</option>\n      <option value=\"completed\">Completed The goal is no longer being sought.</option>\n      <option value=\"cancelled\">Cancelled The goal has been abandoned.</option>\n      <option value=\"entered-in-error\">Entered in Error The goal was entered in error and voided.</option>\n      <option value=\"rejected\">Rejected A proposed goal was rejected.</option>\n    </select>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Goal priority</mat-label>\n    <select matNativeControl  formControlName=\"priority\">\n      <option value=\"high-priority\">High Priority</option>\n      <option value=\"medium-priority\">Medium Priority</option>\n      <option value=\"Low-priority\">Low Priority</option>\n    </select>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Goal Achievement Status</mat-label>\n    <select matNativeControl formControlName=\"achievementStatus\">\n      <option value=\"in-progress\">In Progress</option>\n      <option value=\"improving\">Improving</option>\n      <option value=\"worsening\">Worsening</option>\n      <option value=\"no-change\">No Change</option>\n      <option value=\"achieved\">Achieved</option>\n      <option value=\"sustaining\">Sustaining</option>\n      <option value=\"not-achieved\">Not Achieved</option>\n      <option value=\"no-progress\">No Progress</option>\n      <option value=\"not-attainable\">Not Attainable</option>\n    </select>\n  </mat-form-field>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  <mat-form-field>\n\n\n    <mat-label>Goal startDateText</mat-label>\n    <input matInput [matDatepicker]=\"startDateTextpicker\" formControlName=\"startDateText\">\n    <mat-hint>MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle matSuffix [for]=\"startDateTextpicker\"></mat-datepicker-toggle>\n    <mat-datepicker #startDateTextpicker></mat-datepicker>\n\n  </mat-form-field>\n\n  <mat-form-field>\n\n\n    <mat-label>Goal targetDateText</mat-label>\n    <input matInput [matDatepicker]=\"targetDateTextpicker\" formControlName=\"targetDateText\">\n    <mat-hint>MM/DD/YYYY</mat-hint>\n    <mat-datepicker-toggle matSuffix [for]=\"targetDateTextpicker\"></mat-datepicker-toggle>\n    <mat-datepicker #targetDateTextpicker></mat-datepicker>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput placeholder=\"Goal addresses\" formControlName=\"addresses\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput placeholder=\"Goal expressedBy\" formControlName=\"expressedBy\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"Goal expressedByType\" formControlName=\"expressedByType\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"Goal acceptance\" formControlName=\"acceptance\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput placeholder=\"Goal targets\" formControlName=\"targets\">\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button class=\"mat-raised-button\" (click)=\"close()\" [mat-dialog-close]=\"true\">Close</button>\n  <button class=\"mat-raised-button mat-primary\" (click)=\"save()\" [mat-dialog-close]=\"true\" [disabled]=\"form.invalid\">Save Goal</button>\n</mat-dialog-actions>\n","export class Constants {\n    static WotIsLoaded: string = \"WOT-Is-Loaded-provider-app-1\";\n    static BPisLoaded: string = \"BP-is-Loaded-provider-app-1\";\n    static EGFRisLoaded: string = \"EGFR-is-Loaded-provider-app-1\";\n    static UACRisLoaded: string = \"UACR-is-Loaded-provider-app-1\";\n    static ActiveDiagnosisIsLoaded: string = \"ActiveDiagnosis-is-ready-provider-app-1\";\n    static SocialConcernsIsLoaded: string = \"SocialConcerns-is-ready-provider-app-1\";\n    static InActiveDiagnosisIsLoaded: string = \"InActiveDiagnosis-is-ready-provider-app-1\";\n    static EducationIsLoaded: string = \"Education-is-loaded-provider-app-1\";\n    static CounselingIsLoaded: string = \"Counseling-is-loaded-provider-app-1\";\n    static ReferralsIsLoaded: string = \"Referrals-is-loaded-provider-app-1\";\n    static MedicationsIsLoaded: string = \"Medications-is-loaded-provider-app-1\";\n    static ServiceRequestIsLoaded: string = \"ServiceRequest-is-loaded-provider-app-1\";\n    static GoalsIsLoaded: string = \"Goals-is-loaded-provider-app-1\";\n    static TargetsIsLoaded: string = \"Targets-is-loaded-provider-app-1\";\n    static ChoicesIsLoaded: string = \"Choices-is-loaded-provider-app-1\";\n    static featureToggling: any;\n    static labMappings: any;\n    static vitalMappings: any;\n    static categoryMappings: any;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { AppMaterialModuleModule } from './app-material-module/app-material-module.module';\n\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { DemographicsPanelComponent } from './demographics-panel/demographics-panel.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HealthAndSocialConcernsComponent } from './health-and-social-concerns/health-and-social-concerns.component';\nimport { GoalsComponent } from './goals/goals.component';\n// import { CourseDialogComponent} from './goals/course-dialog.component';\nimport { ActiveDiagnosisPanelComponent } from './active-diagnosis-panel/active-diagnosis-panel.component';\nimport { InactiveDiagnosisPanelComponent } from './inactive-diagnosis-panel/inactive-diagnosis-panel.component';\nimport { DiagnosisPanelComponent } from './diagnosis-panel/diagnosis-panel.component';\nimport { SocialConcernPanelComponent } from './social-concern-panel/social-concern-panel.component';\nimport { ClinicalGoalsComponent } from './clinical-goals/clinical-goals.component';\nimport { PatientChoicesComponent } from './patient-choices/patient-choices.component';\nimport { TargetValuesComponent } from './target-values/target-values.component';\nimport { PatientGoalsComponent } from './patient-goals/patient-goals.component';\nimport { MaintenanceAndInterventionsComponent } from './maintenance-and-interventions/maintenance-and-interventions.component';\nimport { MedicationPanelComponent } from './medication-panel/medication-panel.component';\nimport { EducationPanelComponent } from './education-panel/education-panel.component';\nimport { CounselingPanelComponent } from './counseling-panel/counseling-panel.component';\nimport { ReferralPanelComponent } from './referral-panel/referral-panel.component';\nimport { HealthStatusComponent } from './health-status/health-status.component';\nimport { CareTeamComponent } from './care-team/care-team.component';\nimport { ClinicalTestResultsComponent } from './clinical-test-results/clinical-test-results.component';\nimport { ClinicalExamResultsComponent } from './clinical-exam-results/clinical-exam-results.component';\nimport { ClinicalProcedureResultsComponent } from './clinical-procedure-results/clinical-procedure-results.component';\nimport { ClinicalImagingResultsComponent } from './clinical-imaging-results/clinical-imaging-results.component';\nimport { ClinicalActivitiesResultsComponent } from './clinical-activities-results/clinical-activities-results.component';\nimport { ClinicalQuestionairesResultsComponent } from './clinical-questionaires-results/clinical-questionaires-results.component';\nimport { ClinicalHistoryResultsComponent } from './clinical-history-results/clinical-history-results.component';\nimport { ClinicalTherapyResultsComponent } from './clinical-therapy-results/clinical-therapy-results.component';\nimport { LabTestResultComponent } from './lab-test-result/lab-test-result.component';\nimport { BloodPressureComponent } from './blood-pressure/blood-pressure.component';\nimport { EGFRComponent } from './e-gfr/e-gfr.component';\nimport { WeightOverTimeComponent } from './weight-over-time/weight-over-time.component';\nimport { UACRComponent } from './uacr/uacr.component';\nimport { BPGraphComponent } from './bpgraph/bpgraph.component';\nimport { DiagnosisDialogComponent } from './diagnosis-dialog/diagnosis-dialog.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ConsolidatedGoalsComponent } from './consolidated-goals/consolidated-goals.component';\nimport { Testgraph1Component } from './testgraph1/testgraph1.component';\nimport { ObservationsService } from './services/observations.service';\nimport { NullCheckPipe } from './pipes/null-check.pipe';\nimport { MatSortModule } from '@angular/material/sort';\nimport { RetryInterceptor } from './interceptors/404.retry.interceptor';\nimport { CourseDialogComponent } from './goals/course-dialog.component';\nimport { MedicationDialogComponent } from './medication-dialog/medication-dialog.component';\nimport { GoalDialogComponent } from './goals-dialog/goal-dialog.component';\nimport { ActiveOrdersPanelComponent } from './active-orders-panel/active-orders-panel.component';\n\nconst routes: Routes = []; // sets up routes constant where you define your routes\n\n@NgModule({\n  declarations: [\n    ActiveOrdersPanelComponent,\n    GoalDialogComponent,\n    MedicationDialogComponent,\n    CourseDialogComponent,\n    AppComponent,\n    DemographicsPanelComponent,\n    HealthAndSocialConcernsComponent,\n    GoalsComponent,\n    ActiveDiagnosisPanelComponent,\n    InactiveDiagnosisPanelComponent,\n    DiagnosisPanelComponent,\n    SocialConcernPanelComponent,\n    ClinicalGoalsComponent,\n    PatientChoicesComponent,\n    TargetValuesComponent,\n    PatientGoalsComponent,\n    MaintenanceAndInterventionsComponent,\n    MedicationPanelComponent,\n    EducationPanelComponent,\n    CounselingPanelComponent,\n    ReferralPanelComponent,\n    HealthStatusComponent,\n    CareTeamComponent,\n    ClinicalTestResultsComponent,\n    ClinicalImagingResultsComponent,\n    ClinicalExamResultsComponent,\n    ClinicalProcedureResultsComponent,\n    ClinicalActivitiesResultsComponent,\n    ClinicalQuestionairesResultsComponent,\n    ClinicalTherapyResultsComponent,\n    ClinicalHistoryResultsComponent,\n    LabTestResultComponent,\n    BloodPressureComponent,\n    EGFRComponent,\n    WeightOverTimeComponent,\n    UACRComponent,\n    BPGraphComponent,\n    DiagnosisDialogComponent,\n    ConsolidatedGoalsComponent,\n    Testgraph1Component,\n    NullCheckPipe\n  ],\n  imports: [\n    MatSortModule,\n    FlexLayoutModule,\n    ChartsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppMaterialModuleModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes, { enableTracing: false }),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports: [RouterModule,ReactiveFormsModule],\n  providers: [ObservationsService, { provide: HTTP_INTERCEPTORS, useClass: RetryInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { reformatYYYYMMDD } from '../util/utility-functions';\nimport { VitalSignsTableData } from '../datamodel/vitalSigns';\nimport { MatTableDataSource } from '@angular/material/table';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-blood-pressure',\n  templateUrl: './blood-pressure.component.html',\n  styleUrls: ['./blood-pressure.component.css']\n})\nexport class BloodPressureComponent implements OnInit, AfterViewInit {\n\n  vitalSignsDataSource: MatTableDataSource<VitalSignsTableData>;\n  vitalSignsRowMax = 7;\n\n  constructor(public dataservice: DataService) {\n  }\n\n  displayedColumns = ['date', 'systolic', 'diastolic'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.vitalSignsDataSource = this.dataservice.vitalSignsDataSource;\n  }\n\n  ngAfterViewInit(): void {\n    // todo: fix below, paginator doesn't work when assigned, shows all rows, doesn't limit to max, paging doesn't work\n    if (this.vitalSignsDataSource.data.length > this.vitalSignsRowMax) {\n      this.vitalSignsDataSource.paginator = this.paginator;\n    }\n    this.vitalSignsDataSource.sort = this.sort;\n    this.vitalSignsDataSource.sortingDataAccessor = (data: VitalSignsTableData, header: string) => {\n      switch (header) {\n        case ('systolic'): {\n          return data.systolic;\n        }\n        case ('diastolic'): {\n          return data.diastolic;\n        }\n        case ('date'): {\n          return moment(data[header]).unix();\n        }\n        default: {\n          return data[header];\n        }\n      }\n    };\n  }\n\n\n  refreshVitalSigns = () => {\n    this.vitalSignsDataSource = this.dataservice.vitalSignsDataSource;\n  }\n\n}\n","<b>Change in Blood Pressure over Time</b>\n<table width=\"100%\">\n  <tr>\n    <td width=\"50%\" height=\"250\">\n      <app-bpgraph></app-bpgraph>\n    </td>\n    <td width=\"50%\">\n      <table mat-table [dataSource]=\"vitalSignsDataSource\" matSort width=\"100%\">\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"date\" minlength=\"12\" >Date</th>\n          <td mat-cell *matCellDef=\"let vs\"> {{vs.date | date: 'MM/dd/yyyy'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"systolic\">\n          <th mat-header-cell *matHeaderCellDef  mat-sort-header=\"systolic\">Systolic</th>\n          <td mat-cell *matCellDef=\"let vs\"> {{vs.systolic}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"diastolic\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\"diastolic\">Diastolic</th>\n          <td mat-cell *matCellDef=\"let vs\"> {{vs.diastolic}} </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n            (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\"\n            (mouseout)=\"row.hovered = false\">\n        </tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[5, 15, 30]\" showFirstLastButtons\n                     [ngStyle]=\"{display: this.vitalSignsDataSource.data.length > this.vitalSignsRowMax ? 'block' : 'none'}\">\n      </mat-paginator>\n    </td>\n  </tr>\n</table>\n<!--\n<table width=\"100%\">\n  <tr>\n    <td  width=\"350\" height=\"250\"><app-bpgraph></app-bpgraph></td>\n    <td>\n      <table width=\"100%\">\n        <tr>\n          <td>Date</td>\n          <td>Systolic</td>\n          <td>Diastolic</td>\n        </tr>\n        <tr>\n          <td>05/21/2017</td>\n          <td>150</td>\n          <td>92</td>\n        </tr>\n        <tr>\n          <td>04/23/2017</td>\n          <td>147</td>\n          <td>89</td>\n        </tr>\n        <tr>\n          <td>03/11/2017</td>\n          <td>145</td>\n          <td>90</td>\n        </tr>\n        <tr>\n          <td>02/11/2017</td>\n          <td>147</td>\n          <td>91</td>\n        </tr>\n        <tr>\n          <td>01/10/2017</td>\n          <td>147</td>\n          <td>91</td>\n        </tr>\n        <tr>\n          <td>12/12/2016</td>\n          <td>155</td>\n          <td>92</td>\n        </tr>\n      </table>\n    </td>\n  </tr>\n</table>\n-->\n","import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-diagnosis-panel',\n  templateUrl: './diagnosis-panel.component.html',\n  styleUrls: ['./diagnosis-panel.component.css']\n})\nexport class DiagnosisPanelComponent implements OnInit {\n  featureToggling: any = Constants.featureToggling;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getActiveIsReady(): boolean {\n    return window[Constants.ActiveDiagnosisIsLoaded];\n  }\n\n  getInActiveIsReady(): boolean {\n    return window[Constants.InActiveDiagnosisIsLoaded];\n  }\n}\n","<app-active-diagnosis-panel *ngIf=\"featureToggling.healthAndSocialConcerns.activeDiagnoses && getActiveIsReady()\">\n</app-active-diagnosis-panel>\n\n<div *ngIf=\"featureToggling.healthAndSocialConcerns.activeDiagnoses && !getActiveIsReady()\" style=\"height: 200px;\">\n    <mat-panel-title class=\"group-header\">Active Diagnoses</mat-panel-title>\n    <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n</div>\n\n<app-inactive-diagnosis-panel *ngIf=\"featureToggling.healthAndSocialConcerns.inactiveDiagnoses && getInActiveIsReady()\">\n</app-inactive-diagnosis-panel>\n\n<div *ngIf=\"featureToggling.healthAndSocialConcerns.inactiveDiagnoses && !getInActiveIsReady()\" style=\"height: 200px;\">\n    <mat-panel-title class=\"group-header\">Inactive Diagnoses</mat-panel-title>\n    <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\">\n    </mat-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-demographics-panel',\n  templateUrl: './demographics-panel.component.html',\n  styleUrls: ['./demographics-panel.component.css']\n})\nexport class DemographicsPanelComponent implements OnInit {\n  constructor(public dataservice: DataService) { }\n  ngOnInit(): void {\n  }\n\n  getPeriodText(start: string, end: string): string {\n    const out = '';\n    if (end == null || end === '') {\n      if (start === null || start === '' || start === \"undefined\") {\n        return 'undefined';\n      }\n      return out.concat(start, ' onward');\n    }\n    if (start === null || start === '') {\n      out.concat('until ', end);\n    }\n    return out.concat(start, ' to ', end);\n  }\n  getAddresses(): string {\n    const references = this.dataservice.careplan.addresses.map(address => address.reference);\n    return references?.join(', ')\n  }\n  getCategories(): string {\n    return this.dataservice.careplan.category?.join(', ')\n  }\n  getNotes(): string {\n    return this.dataservice.careplan.note?.join(', ')\n  }\n}\n","<mat-expansion-panel>\n  <mat-expansion-panel-header style=\"height: auto !important;\">\n    <table width=\"100%\">\n      <tr>\n        <td colspan=\"2\">\n          <b>Name:</b> {{dataservice.demographic.name | nullCheck}}\n        </td>\n        <td>\n          <b>DOB:</b> {{dataservice.demographic.dateOfBirth | nullCheck}}\n        </td>\n        <td>\n          <b>Age:</b> {{dataservice.demographic.age | nullCheck}}\n        </td>\n        <td>\n          <b>Sex:</b> {{dataservice.demographic.gender | nullCheck}}\n        </td>\n        <td>\n          <b>Patient Id:</b> {{dataservice.demographic.id | nullCheck}}\n        </td>\n\n\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <b>Title:</b> {{dataservice.careplan.title | nullCheck}}\n        </td>\n        <td>\n          <b>Status:</b> {{dataservice.careplan.status | nullCheck}}\n        </td>\n        <td>\n          <b>Period:</b> {{getPeriodText(dataservice.careplan.period.start,dataservice.careplan.period.end) | nullCheck}}\n        </td>\n        <td>\n          <b>Focus:</b> {{getAddresses() | nullCheck}}\n        </td>\n        <td>\n          <b>Careplan Id:</b> {{dataservice.careplan.id}}\n        </td>\n\n      </tr>\n    </table>\n  </mat-expansion-panel-header>\n  <table width=\"100%\">\n    <tr>\n      <td><b>Date Last Revised:</b> {{dataservice.careplan.meta.lastUpdated}}</td>\n      <td><b>Race and Ethnicity:</b> {{dataservice.demographic.race | nullCheck}}, {{dataservice.demographic.ethnicity | nullCheck}}</td>\n    </tr>\n    <tr>\n      <td><b>Careplan Category</b> {{getCategories()}}</td>\n      <td><b>Intent:</b> {{dataservice.careplan.intent}}</td>\n    </tr>\n    <tr>\n      <td><b>Description:</b> {{dataservice.careplan.description}}</td>\n    </tr>\n    <tr>\n      <td><b>Notes:</b> {{getNotes()}}</td>\n    </tr>\n  </table>\n</mat-expansion-panel>\n","import { Observation, QuestionnaireResponse } from 'fhir/r4';\nimport {\n  getObservations as EccGetObservations,\n  getObservation as EccGetObservation,\n  getObservationsByValueSet as EccGetObservationsByValueSet,\n  getQuestionnaireItem as EccGetQuestionnaireItem,\n  getQuestionnaireItems as EccGetQuestionnaireItems,\n  getObservationsByCategory as EccGetObservationsByCategory,\n} from 'e-care-common-data-services';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"src/environments/environment\";\nimport { Constants } from \"../common/constants\";\nimport { getDisplayValueNew, formatEffectiveDateNew } from \"../util/utility-functions\";\n\ninterface FormattedResult {\n    name: string;\n    value: string;\n    date: any;\n}\n\ninterface PatientLabResultsMap {\n    name: string;\n    value: string;\n    type: string;\n}\n\n@Injectable()\nexport class ObservationsService {\n    public HTTP_OPTIONS = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\n    public OBSERVATIONS: Map<string, any> = new Map<string, any>();\n    public QUESTIONNAIRES: Map<string, any> = new Map<string, any>();\n\n    // _defaultUrl = environment.mccapiUrl;\n  log: any;\n    constructor(\n        protected http: HttpClient\n    ) {\n    }\n\n    _observationUrl = \"find/latest/observation\";\n    getObservation(patientId: string, code: string, keyToStore?: string): Promise<any> {\n        const key = patientId + \"-\" + code;\n\n        if (this.OBSERVATIONS.has(key)) {\n            let returnVal = this.OBSERVATIONS.get(key);\n            return Promise.resolve(returnVal);\n        }\n        else {\n            return EccGetObservation(code)\n                .then((res: Observation) => {\n                    this.OBSERVATIONS.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    console.log(\"Error querying: \" + \"getObservation\" + \"?code=\" + code);\n                });\n        }\n    };\n\n    _observationsUrl = \"observations\";\n    getObservations(patientId: string, code: string, keyToStore?: string): Promise<any> {\n        const key = patientId + \"-\" + code + \"-multiple\";\n\n        if (this.OBSERVATIONS.has(key)) {\n            let returnVal = this.OBSERVATIONS.get(key);\n            if (keyToStore) {\n                returnVal[0].key = keyToStore;\n            }\n            return Promise.resolve(this.OBSERVATIONS.get(key));\n        }\n        else {\n            return EccGetObservations(code, 'code')\n                .then((res: Observation[]) => {\n                    this.OBSERVATIONS.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    console.log(\"Error querying: \" + `getObservation?subject=${patientId}&code=${code}&sort=descending`);\n                });\n        }\n    };\n\n    _observationByValueSetUrl = \"observationsbyvalueset\"\n    getObservationsByValueSet = (patientId: string, valueSet: string, sort?: string, max?: string, keyToStore?: string): Promise<any> => {\n        const key = patientId + \"-\" + valueSet + (sort ? \"-\" + sort : \"\") + (max ? \"-\" + max : \"\") + (keyToStore ? \"-\" + keyToStore : \"\");\n        // const url = `${environment.mccapiUrl}/${this._observationByValueSetUrl}?subject=${patientId}&valueset=${valueSet}` + (sort ? `&sort=${sort}` : ``) + (max ? `&max=${max}` : ``);\n\n        if (this.OBSERVATIONS.has(key)) {\n            let returnVal = this.OBSERVATIONS.get(key);\n            if (returnVal.length > 0 && keyToStore) {\n                returnVal[0].key = keyToStore;\n            }\n            return Promise.resolve(returnVal);\n        }\n        else {\n            return EccGetObservationsByValueSet(valueSet, sort, max)\n                .then((res: Observation[]) => {\n                    this.OBSERVATIONS.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    // console.log(\"Error querying: \" + url);\n                });\n        }\n    }\n\n    _observationsByPanelUrl = \"observations\"\n    getObservationsByPanel(patientId: string, code: string, sort?: string, max?: string, keyToStore?: string): Promise<any> {\n        const key = patientId + \"-\" + code + (sort ? \"-\" + sort : \"\") + (max ? \"-\" + max : \"\") + (keyToStore ? \"-\" + keyToStore : \"\");\n\n        if (this.OBSERVATIONS.has(key)) {\n            let returnVal = this.OBSERVATIONS.get(key);\n            if (returnVal.length > 0 && keyToStore) {\n                returnVal[0].key = keyToStore;\n            }\n            return Promise.resolve(returnVal);\n        }\n        else {\n            return EccGetObservations(code, 'panel', sort, max)\n                .then((res: Observation[]) => {\n                    this.OBSERVATIONS.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    console.log(\"Error querying: \" + code);\n                });\n        }\n    }\n\n    _questionnaireLatestItemUrl = \"find/latest/questionnaireresponseitem\";\n    getQuestionnaireItem(patientId: string, code: string): Promise<any> {\n        const key = patientId + \"-\" + code;\n\n        if (this.QUESTIONNAIRES.has(key)) {\n            let returnVal = this.QUESTIONNAIRES.get(key);\n            return Promise.resolve(returnVal);\n        } else {\n            return EccGetQuestionnaireItem(code)\n                .then((res: QuestionnaireResponse) => {\n                    this.QUESTIONNAIRES.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    console.log(\"Error querying: \" + code);\n                });\n        }\n    }\n\n    _questionnaireAllItemsUrl = \"find/all/questionnaireresponseitems\";\n    getQuestionnaireItems(patientId: string, code: string): Promise<any> {\n        const key = patientId + \"-\" + code + \"-all\";\n\n        if (this.QUESTIONNAIRES.has(key)) {\n            return Promise.resolve(this.QUESTIONNAIRES.get(key));\n        } else {\n            return EccGetQuestionnaireItems(code)\n                .then((res: QuestionnaireResponse[]) => {\n                    this.QUESTIONNAIRES.set(key, res);\n                    return res;\n                }).catch((reason) => {\n                    console.log(\"Error querying: \" + code);\n                });\n        }\n    }\n\n    getLabResults(patientId: string, longTermCondition: string): any {\n        longTermCondition = \"ckd\";\n        let results: FormattedResult[] = [];\n        if (!Constants.labMappings[longTermCondition]) {\n            return Promise.resolve([]);\n        }\n        let callsToMake: PatientLabResultsMap[] = Constants.labMappings[longTermCondition];\n        let promiseArray = [];\n        if (!callsToMake) return Promise.resolve([]);\n        callsToMake.forEach((v, i) => {\n            switch (v.type) {\n                case \"code\":\n                    promiseArray.push(this.getObservation(patientId, v.value, v.name));\n                    break;\n                case \"valueset\":\n                  console.log(\"v.value\"+v.name);\n                  console.log(\"v.value\"+v.name);\n                  console.log(\"v.value\"+v.name);\n                  console.log(\"v.value\"+v.name);\n                  console.log(\"v.value\"+v.value);\n                    promiseArray.push(this.getObservationsByValueSet(patientId, v.value, \"descending\", \"1\", v.name));\n                    break;\n                case \"panel\":\n                    promiseArray.push(this.getObservationsByPanel(patientId, v.value, \"descending\", \"1\", v.name));\n                    break;\n                case \"question\":\n                    promiseArray.push(this.getQuestionnaireItem(patientId, v.value));\n                    break;\n            }\n        })\n        return Promise.all(promiseArray).then((resArr: any[]) => {\n            resArr.forEach((res: any, index: number) => {\n                let correspondingCall = callsToMake[index];\n                if (!res || res.length < 1 || res.status === \"notfound\" || res.fhirid === \"notfound\") {\n                    // results.push({ name: correspondingCall.name, value: \"xxxNo Data Availablexxx\", date: \"\" })\n                }\n                else {\n                    switch (correspondingCall.type) {\n                        case \"code\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res)), date: formatEffectiveDateNew((<Observation>res).effectiveDateTime) });\n                            break;\n                        case \"valueset\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res[0])), date: formatEffectiveDateNew((<Observation>res[0]).effectiveDateTime) });\n                            break;\n                        case \"panel\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res[0])), date: formatEffectiveDateNew((<Observation>res[0]).effectiveDateTime) });\n                            break;\n                        case \"question\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<QuestionnaireResponse>res).item[0].answer[0] as Observation), date: formatEffectiveDateNew((<QuestionnaireResponse>res).authored) })\n                            break;\n                    }\n                }\n            });\n            return results;\n        });\n    }\n\n    _observationByCategoryURL= \"observationsbycategory\"\n    getObservationsByCategory(subjectId: string, category: string): Promise<any> {\n\n      return EccGetObservationsByCategory(category).then(res => {\n        return res;\n      }).catch(error => {\n        console.error({error})\n        console.log(\"Error querying: \" + category);\n      });\n    }\n\n    getVitalSignResults(patientId: string, longTermCondition: string): any {\n        if (!longTermCondition || longTermCondition !== \"general\") longTermCondition = \"ckd\";\n        let results: FormattedResult[] = [];\n        if (!Constants.vitalMappings[longTermCondition]) {\n            return Promise.resolve([]);\n        }\n        let callsToMake: PatientLabResultsMap[] = Constants.vitalMappings[longTermCondition];\n        let promiseArray = [];\n        if (!callsToMake) return Promise.resolve([]);\n        callsToMake.forEach((v, i) => {\n            switch (v.type) {\n                case \"code\":\n                    promiseArray.push(this.getObservation(patientId, v.value, v.name));\n                    break;\n                case \"valueset\":\n                    promiseArray.push(this.getObservationsByValueSet(patientId, v.value, \"descending\", \"1\", v.name));\n                    break;\n                case \"panel\":\n                    promiseArray.push(this.getObservationsByPanel(patientId, v.value, \"descending\", \"1\", v.name));\n                    break;\n                case \"question\":\n                    promiseArray.push(this.getQuestionnaireItem(patientId, v.value));\n                    break;\n            }\n        })\n        return Promise.all(promiseArray).then((resArr: any[]) => {\n            resArr.forEach((res: any, index: number) => {\n                let correspondingCall = callsToMake[index];\n                if (!res || res.length < 1 || res.status === \"notfound\" || res.fhirid === \"notfound\") {\n                    // results.push({ name: correspondingCall.name, value: \"No Data Available\", date: \"\" })\n                }\n                else {\n                    switch (correspondingCall.type) {\n                        case \"code\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res)), date: formatEffectiveDateNew((<Observation>res).effectiveDateTime) });\n                            break;\n                        case \"valueset\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res[0])), date: formatEffectiveDateNew((<Observation>res[0]).effectiveDateTime) });\n                            break;\n                        case \"panel\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<Observation>res[0])), date: formatEffectiveDateNew((<Observation>res[0]).effectiveDateTime) });\n                            break;\n                        case \"question\":\n                            results.push({ name: correspondingCall.name, value: getDisplayValueNew((<QuestionnaireResponse>res).item[0].answer[0] as Observation), date: formatEffectiveDateNew((<QuestionnaireResponse>res).authored) })\n                            break;\n                    }\n                }\n            });\n            return results;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MessageService } from './message.service';\nimport { Observable, of, from } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport {\n  getContacts\n} from 'e-care-common-data-services';\nimport { MccPatientContact } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  /** GET Contact by id. Return `undefined` when id not found */\n  getContactNo404(id: string): Observable<MccPatientContact> {\n    return from(getContacts())\n      .pipe(\n        map(contacts => contacts[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<MccPatientContact>(`Plan id=${id}`))\n      );\n  }\n\n  /** GET contacts by subject id. Will 404 if id not found */\n  getContactsBySubjectAndCareplan(subjectId: string, careplanId: string): Observable<MccPatientContact[]> {\n    return from(getContacts(careplanId)).pipe(\n      tap((_) => { this.log(`fetched Contacts id=${subjectId}, careplan=${careplanId}`); console.log(\"fetched contacts data\", _); }),\n      catchError(this.handleError<MccPatientContact[]>(`getContacts id=${subjectId}, careplan=${careplanId}`))\n    );\n  }\n\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`contact-service: ${message}`);\n  }\n\n}\n","\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n// import { DialogDataExampleDialog } from '../addgoal/dialog.data.example';\n\nimport { Constants } from '../common/constants';\n\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { CourseDialogComponent } from './course-dialog.component';\nimport { DataService } from '../services/data.service';\n// import { DialogDataExampleDialog } from './dialog.data.example';\n\n\n@Component({\n  selector: 'app-goals',\n  templateUrl: './goals.component.html',\n  styleUrls: ['./goals.component.css']\n})\nexport class GoalsComponent implements OnInit {\n  featureToggling: any = Constants.featureToggling;\n\n  public breakpoint: number; // Breakpoint observer code\n\n  public date: FormControl = new FormControl(new Date()); // Date picker code\n  public serializedDate: FormControl = new FormControl(\n    new Date().toISOString(),\n  ); // Date picker code\n\n  public selected: string = 'option2'; // Country code\n\n  public addCusForm: FormGroup;\n\n\n  constructor(public dataservice: DataService,public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  getGoalsReady(): boolean {\n    return window[Constants.GoalsIsLoaded];\n  }\n\n  getTargetsReady(): boolean {\n    return window[Constants.TargetsIsLoaded];\n  }\n\n  getChoicesReady(): boolean {\n    return window[Constants.ChoicesIsLoaded];\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(CourseDialogComponent,{\n      height: '750px',\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.dataservice.getPatientGoals();\n\n    });\n  }\n\n  public onAddCus(): void {\n    this.markAsDirty(this.addCusForm);\n  }\n\n  // tslint:disable-next-line:no-any\n  public onChange(data: any): void {\n    if (data) {\n      // tslint:disable-next-line:no-backbone-get-set-outside-model\n      this.addCusForm.get('idNum').enable();\n    } else {\n      // tslint:disable-next-line:no-backbone-get-set-outside-model\n      this.addCusForm.get('idNum').disable();\n    }\n  }\n\n  // tslint:disable-next-line:no-any\n  public onResize(event: any): void {\n    this.breakpoint = event.target.innerWidth <= 600 ? 1 : 2;\n  }\n\n  private markAsDirty(group: FormGroup): void {\n    group.markAsDirty();\n    // tslint:disable-next-line:forin\n    for (const i in group.controls) {\n      group.controls[i].markAsDirty();\n    }\n  }\n\n}\n\n","<table width=\"100%\" valign=\"top\">\n\n  <tr *ngIf=\"featureToggling.goalsAndPreferences.goals && getGoalsReady()\">\n    <td width=\"100%\" valign=\"top\">\n      <app-consolidated-goals></app-consolidated-goals>\n    </td>\n  </tr>\n  <tr *ngIf=\"featureToggling.goalsAndPreferences.goals && !getGoalsReady()\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <div class=\"group-header\">Goals</div>\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n  <tr *ngIf=\"featureToggling.goalsAndPreferences.targets && getTargetsReady()\">\n    <td colspan=\"2\">\n      <app-target-values></app-target-values>\n    </td>\n  </tr>\n\n\n\n  <tr *ngIf=\"featureToggling.goalsAndPreferences.targets && !getTargetsReady()\">\n    <td colspan=\"3\" style=\"height: 200px;\">\n      <div class=\"group-header\">Target Laboratory/Clinical Values</div>\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </td>\n  </tr>\n\n\n</table>\n","import { CarePlan } from 'fhir/r4';\nimport {TargetValue} from './targetvalue';\nimport {\n  ConditionLists,\n  Contact,\n  GoalLists,\n  GoalSummary,\n  GoalTarget,\n  MedicationSummary,\n  SocialConcern\n} from '../generated-data-api';\n\nimport {MccPatient} from '../generated-data-api/models/MccPatient';\nimport { MccConditionList, MccCounselingSummary, MccEducationSummary, MccGoalList, MccPatientContact, MccReferralSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\n\n\nexport const mockContacts: Contact[] = [\n  {\n    type: 'person',\n    role: 'patient',\n    name: 'Name goes here',\n    phone: '(xxx) xxx-xxxx',\n    email: 'xxx@xxxx.org',\n    address: 'xxx street, city, state zipxxx'\n  },\n  {\n    type: 'person',\n    role: 'alternate_contact',\n    name: 'Name goes here',\n    phone: '(xxx) xxx-xxxx',\n    email: 'xxx@xxxx.org',\n    address: 'xxx street, city, state zipxxx'\n  },\n  {\n    type: 'person',\n    role: 'provider',\n    name: 'Dr Name goes here',\n    phone: '(xxx) xxx-xxxx',\n    email: 'xxx@xxxx.org',\n    address: 'xxx street, city, state zipxxx'\n  },\n  {\n    type: 'organization',\n    role: 'primary_care',\n    name: 'Name goes here',\n    phone: '(xxx) xxx-xxxx',\n    email: 'xxx@xxxx.org',\n    address: 'xxx street, city, state zipxxx'\n  },\n  {\n    type: 'organization',\n    role: 'insurance',\n    name: 'Name goes here',\n    phone: '(xxx) xxx-xxxx',\n    email: 'xxx@xxxx.org',\n    address: 'xxx street, city, state zipxxx'\n  }\n];\n\nexport const emptyContacts: MccPatientContact[] = [\n  {\n    type: 'person',\n    role: '',\n    name: 'Awating data load...',\n    phone: '',\n    email: '',\n    address: '',\n    hasImage: false,\n    relFhirId: ''\n  }\n];\nexport const emptyReferrals: MccReferralSummary[] = [];\n\n\n\n\nexport const mockMedicationSummary: MedicationSummary[] = [\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-aspirin',\n    status: 'active',\n    medication: 'Aspirin 75 MG Oral Tablet',\n    dosages: 'Once daily.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Congestive heart failure'\n  },\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-furosemide',\n    status: 'active',\n    medication: 'Furosemide 20 MG Oral Tablet',\n    dosages: 'Take Furosemide 20mg tablet once a day for swelling in arms and legs.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Congestive heart failure'\n  },\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-simvastatin',\n    status: 'active',\n    medication: 'Simvastatin 40 MG Oral Tablet',\n    dosages: 'Take Simvastatin 40mg tablet once a day for high cholesterol.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Dyslipidemia'\n  },\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-lisinopril',\n    status: 'active',\n    medication: 'Lisinopril 40 MG Oral Tablet',\n    dosages: 'Take Lisinopril 40mg tablet once a day for high blood pressure.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Hypertension'\n  },\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-vitamin-d',\n    status: 'active',\n    medication: 'Vitamin D 1000 IU Oral Tablet',\n    dosages: 'By mouth twice daily in the morning and evening.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Chronic kidney disease'\n  },\n  {\n    type: 'MedicationRequest',\n    fhirId: 'cc-med-betsy-insulin',\n    status: 'active',\n    medication: 'Insulin, human Mixed 70/30 100 UNT/ML Injectable Suspension',\n    dosages: 'Twice daily.',\n    requestedBy: 'Dr. John Carlson, MD',\n    reasons: 'Chronic kidney disease'\n  }\n];\n\nexport const emptyMediciationSummary: MedicationSummary[] = [];\n\nexport const emptyTargetData: TargetValue[] = [];\n\nexport const mockTargetData: TargetValue[] = [\n  {\n    measure: 'Systolic Blood Pressure (mm Hg)',\n    mostRecentResult: '155',\n    date: '02/13/2017',\n    target: '<140',\n    status: 'high'\n  },\n  {\n    measure: 'Diastolic Blood Pressure (mm Hg)',\n    mostRecentResult: '92',\n    date: '02/13/2017',\n    target: '<80',\n    status: 'high'\n  },\n  {\n    measure: 'Potassium (mEq/L)',\n    mostRecentResult: '4.8',\n    date: '02/05/2017',\n    target: '3.5-5.0',\n    status: 'good'\n  },\n  {\n    measure: 'Bicarbonate (mEq/L)',\n    mostRecentResult: '23',\n    date: '02/05/2017',\n    target: '>22',\n    status: 'good'\n  },\n  {\n    measure: 'Phosphorous (mEq/dL)',\n    mostRecentResult: '4.3',\n    date: '02/05/2017',\n    target: '2.5-4.5',\n    status: 'good'\n  },\n  {\n    measure: 'Calcium (mEq/dL)',\n    mostRecentResult: '10.1',\n    date: '02/05/2017',\n    target: '8.5-10.2',\n    status: 'good'\n  },\n  {\n    measure: 'Diabetes: A1C (%)',\n    mostRecentResult: '8',\n    date: '02/05/2017',\n    target: '<7',\n    status: 'high'\n  },\n  {\n    measure: 'LDL Cholesterol (mg/dL)',\n    mostRecentResult: '120',\n    date: '02/05/2017',\n    target: '<100',\n    status: 'high'\n  }\n];\n\nexport const emptyGoalsList: MccGoalList = {\n  activeClinicalGoals: [],\n  inactiveClinicalGoals: [],\n  activePatientGoals: [],\n  inactivePatientGoals: [],\n  activeTargets: []\n};\n\nexport const emptyCounseling: MccCounselingSummary[] = [];\nexport const emptyEducation: MccEducationSummary[] = [];\n/*\nexport const emptyVitalSignsData: VitalSignsData = {\n  date: '2020-01-01',\n  value: 0\n};\n*/\n\n/*\nexport const emptyVitalSignsTableData: VitalSignsTableData[] = [{\n  systolic: 0,\n  diastolic: 0,\n  date: '2020-01-01'\n}];\n*/\n\nexport const mockGoalList: GoalLists = {\n  activeClinicalGoals: [\n    {\n      priority: 'high-priority',\n      expressedByType: 'Practitioner',\n      description: 'Stabilize Hemoglobin A1c',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '11/30/2016',\n      targets: [\n        {\n          measure: {\n            coding: [\n              {\n                system: 'http://loinc.org',\n                code: '4548-4',\n                display: '4548-4'\n              }\n            ],\n            text: 'Hemoglobin A1c total in Blood'\n          },\n          value: {\n            valueType: 'Quantity',\n            integerValue: 0,\n            booleanValue: false,\n            quantityValue: {\n              unit: '%',\n              comparator: '<',\n              value: 7,\n              system: 'http://unitsofmeasure.org/',\n              code: '%'\n            }\n          }\n        }\n      ],\n      fhirid: 'cc-goal-betsy-a1c'\n    },\n    {\n      priority: 'high-priority',\n      expressedByType: 'Practitioner',\n      description: 'Phosphorus in blood',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '02/20/2018',\n      targets: [\n        {\n          measure: {\n            coding: [\n              {\n                system: 'http://loinc.org',\n                code: '2777-1',\n                display: '2777-1'\n              }\n            ],\n            text: 'Serum phosphorus'\n          },\n          value: {\n            valueType: 'Range',\n            integerValue: 0,\n            booleanValue: false,\n            rangeValue: {\n              high: {\n                unit: 'mg/dL',\n                value: 4.5,\n                system: 'http://unitsofmeasure.org',\n                code: 'mg/dL'\n              },\n              low: {\n                unit: 'mg/dL',\n                value: 2.5,\n                system: 'http://unitsofmeasure.org',\n                code: 'mg/dL'\n              }\n            }\n          }\n        }\n      ],\n      fhirid: 'cc-goal-betsy-lab-phos'\n    },\n    {\n      priority: 'medium-priority',\n      expressedByType: 'Practitioner',\n      description: 'Systolic blood pressure',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '06/30/2017',\n      targets: [\n        {\n          measure: {\n            coding: [\n              {\n                system: 'http://loinc.org',\n                code: '8480-6',\n                display: '8480-6'\n              }\n            ],\n            text: 'Systolic blood pressure'\n          },\n          value: {\n            valueType: 'Quantity',\n            integerValue: 0,\n            booleanValue: false,\n            quantityValue: {\n              unit: 'mmHg',\n              comparator: '<',\n              value: 140,\n              system: 'http://unitsofmeasure.org',\n              code: 'mm[Hg]'\n            }\n          }\n        }\n      ],\n      fhirid: 'cc-goal-betsy-bp-systolic'\n    },\n    {\n      priority: 'Undefined',\n      expressedByType: 'Practitioner',\n      description: 'Diastolic blood pressure',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '01/12/2019',\n      targets: [\n        {\n          measure: {\n            coding: [\n              {\n                system: 'http://loinc.org',\n                code: '8462-4',\n                display: '8462-4'\n              }\n            ],\n            text: 'Diastolic blood pressure'\n          },\n          value: {\n            valueType: 'Quantity',\n            integerValue: 0,\n            booleanValue: false,\n            quantityValue: {\n              unit: 'mmHg',\n              comparator: '<',\n              value: 80,\n              system: 'http://unitsofmeasure.org',\n              code: 'mm[Hg]'\n            }\n          }\n        }\n      ],\n      fhirid: 'cc-goal-betsy-bp-diastolic'\n    },\n    {\n      priority: 'Undefined',\n      expressedByType: 'Practitioner',\n      description: 'Exercise at least 30 minutes per day',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '12/07/2017',\n      targets: [\n        {\n          measure: {\n            coding: [\n              {\n                system: 'http://snomed.info/sct',\n                code: '226029000',\n                display: '226029000'\n              }\n            ],\n            text: 'Exercises'\n          }\n        }\n      ],\n      fhirid: 'cc-goal-betsy-exercise'\n    }\n  ],\n  inactiveClinicalGoals: [],\n  activePatientGoals: [\n    {\n      priority: 'high-priority',\n      expressedByType: 'Patient',\n      description: 'Maximize Quality of Life',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'in-progress',\n            display: 'in-progress'\n          }\n        ],\n        text: 'In Progress'\n      },\n      lifecycleStatus: 'active',\n      startDateText: '11/30/2016',\n      fhirid: 'cc-goal-betsy-maxql'\n    }\n  ],\n  inactivePatientGoals: [\n    {\n      priority: 'high-priority',\n      expressedByType: 'Patient',\n      description: 'Be able to dance again',\n      achievementStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/goal-achievement',\n            code: 'achieved',\n            display: 'achieved'\n          }\n        ],\n        text: 'Achieved'\n      },\n      lifecycleStatus: 'completed',\n      startDateText: '10/30/2015',\n      fhirid: 'cc-goal-betsy-dance'\n    }\n  ]\n};\n\nexport const dummySubject: MccPatient = {\n  name: 'No Patient Selected',\n  id: '',\n  fhirid: '',\n  dateOfBirth: '',\n  gender: '',\n  race: '',\n  ethnicity: ''\n};\nexport const dummyPatientId = '';\nexport const dummyCareplanId = '';\n\nexport const dummyConditions: MccConditionList = {\n  activeConditions: [],\n  inactiveConditions: [],\n  activeConcerns: [],\n  inactiveConcerns: []\n};\n\nexport const dummyCarePlan: CarePlan = {\n  title: 'Test careplan',\n  addresses: [],\n  id: '',\n  note: [],\n  category: [],\n  status: 'active',\n  intent: 'plan',\n  description: 'No Care Plan Selected',\n  resourceType: 'CarePlan',\n  subject: {},\n  meta: {\n    lastUpdated: '12/12/2022',\n    versionId: '',\n  },\n  period: {\n    start: '12/12/2022',\n    end: '12/12/2025',\n  }\n};\n\nexport const emptySocialConcerns: SocialConcern[] = [];\n\n/*\nexport const dummyGoals: GoalLists =  new class implements GoalLists {\n  activeClinicalGoals: Goal[];\n  activePatientGoals: Goal[];\n  inactiveClinicalGoals: Goal[];\n  inactivePatientGoals: Goal[];\n} ();\n*/\n\nexport const dummyGoals: GoalLists = new class implements GoalLists {\n  activeClinicalGoals: Array<GoalSummary>;\n  activePatientGoals: Array<GoalSummary>;\n  activeTargets: Array<GoalTarget>;\n  inactiveClinicalGoals: Array<GoalSummary>;\n  inactivePatientGoals: Array<GoalSummary>;\n}();\n","import {ChartDataSets, ChartOptions, ChartPoint} from 'chart.js';\nimport moment from 'moment';\nimport {Label} from 'ng2-charts';\nimport {getLineChartOptionsObject} from '../util/utility-functions';\n\ninterface UacrTableData {\n  date?: Date;\n  uacr?: number;\n  unit?: string;\n  test?: string;\n}\n\ninterface UacrData {\n  date?: Date;\n  value?: number;\n}\n\ninterface UacrDataForDisplay {\n  test?: string;\n  value?: number;\n  unit?: string;\n  date?: Date;\n  result?: string;\n}\n\ninterface UacrChartData {\n  data?: Array<UacrData>;\n  label?: string;  /* Systolic, Diastolic */\n  fill?: boolean;  /* false */\n}\n\ninterface Uacr {\n  mostRecentUacr?: UacrDataForDisplay;\n  tableData?: Array<UacrTableData>;\n  chartData?: Array<ChartDataSets>;\n  xAxisLabels?: Array<Label>;\n  suggestedMin?: any;\n  suggestedMax?: any;\n  lineChartOptions?: ChartOptions & { annotation: any };\n}\n\nconst emptyUacrData: ChartPoint = {};\nconst emptyUacrTableData: UacrTableData[] = [];\nconst emptyUacrChartData: ChartDataSets[] = [\n  {\n    data: [emptyUacrData],\n    fill: false,\n    label: 'Uacr'\n  }];\n\nconst emptyUacr: Uacr = {\n  mostRecentUacr: {},\n  tableData: emptyUacrTableData,\n  chartData: emptyUacrChartData,\n  xAxisLabels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  suggestedMin: moment('2020-01-01'),\n  suggestedMax: moment('2020-06-30'),\n  lineChartOptions: {...getLineChartOptionsObject(0, 2000, moment('2020-01-01'),  moment('2020-06-30')), annotation: []}\n};\n\nexport {\n  UacrTableData,\n  UacrData,\n  UacrChartData,\n  Uacr,\n  emptyUacr,\n  emptyUacrChartData,\n  emptyUacrTableData,\n  emptyUacrData\n};\n","import { Component, OnInit } from '@angular/core';\nimport { Constants } from '../common/constants';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-health-and-social-concerns',\n  templateUrl: './health-and-social-concerns.component.html',\n  styleUrls: ['./health-and-social-concerns.component.css']\n})\nexport class HealthAndSocialConcernsComponent implements OnInit {\n  featureToggling: any = Constants.featureToggling;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  getSocialConcernIsReady(): boolean {\n    return window[Constants.SocialConcernsIsLoaded];\n  }\n\n}\n","<div class=\"wrapper\">\n  <section>\n    <app-diagnosis-panel>\n    </app-diagnosis-panel>\n  </section>\n  <section *ngIf=\"getSocialConcernIsReady() && featureToggling.healthAndSocialConcerns.socialConcerns\">\n    <app-social-concern-panel>\n    </app-social-concern-panel>\n  </section>\n  <section *ngIf=\"!getSocialConcernIsReady() && featureToggling.healthAndSocialConcerns.socialConcerns\">\n    <div style=\"height: 200px;\">\n      <mat-panel-title class=\"group-header\">Health Concerns</mat-panel-title>\n      <mat-spinner style=\"margin:0 auto;\" mode=\"indeterminate\"></mat-spinner>\n    </div>\n  </section>\n</div>\n","import {ChartDataSets, ChartOptions, ChartPoint} from 'chart.js';\nimport moment from 'moment';\nimport {Label} from 'ng2-charts';\nimport {getLineChartOptionsObject} from '../util/utility-functions';\n\ninterface WotTableData {\n  date?: Date;\n  value?: number;\n  unit?: string;\n  test?: string;\n}\n\ninterface WotData {\n  date?: Date;\n  value?: number;\n}\n\ninterface WotDataForDisplay {\n  test?: string;\n  value?: number;\n  unit?: string;\n  date?: Date;\n  result?: string;\n}\n\ninterface WotChartData {\n  data?: Array<WotData>;\n  label?: string;  /* Systolic, Diastolic */\n  fill?: boolean;  /* false */\n}\n\ninterface Wot {\n  mostRecentWot?: WotDataForDisplay;\n  tableData?: Array<WotTableData>;\n  chartData?: Array<ChartDataSets>;\n  xAxisLabels?: Array<Label>;\n  suggestedMin?: moment.Moment;\n  suggestedMax?: moment.Moment;\n  lineChartOptions?: ChartOptions & { annotation: any };\n}\n\nconst emptyWotData: ChartPoint = {};\nconst emptyWotTableData: WotTableData[] = [];\nconst emptyWotChartData: ChartDataSets[] = [\n  {\n    data: [emptyWotData],\n    fill: false,\n    label: 'eGFR'\n  }];\n\nconst emptyWot: Wot = {\n  mostRecentWot: {},\n  tableData: emptyWotTableData,\n  chartData: emptyWotChartData,\n  xAxisLabels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  suggestedMin: moment('2020-01-01'),\n  suggestedMax: moment('2020-06-30'),\n  lineChartOptions: {...getLineChartOptionsObject(105, 220, moment('2020-01-01'),  moment('2020-06-30')), annotation: []}\n};\n\nexport {\n  WotTableData,\n  WotData,\n  WotChartData,\n  Wot,\n  emptyWot,\n  emptyWotChartData,\n  emptyWotTableData,\n  emptyWotData\n};\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MedicationDialogComponent } from '../medication-dialog/medication-dialog.component';\n\n\n@Component({\n  selector: 'app-medication-panel',\n  templateUrl: './medication-panel.component.html',\n  styleUrls: ['./medication-panel.component.css']\n})\n\nexport class MedicationPanelComponent implements OnInit, AfterViewInit {\n\n  constructor(public dataService: DataService,private dialog: MatDialog) { }\n  displayedColumns = ['medication', 'effectiveDate','reasons', 'dosages', 'requestedBy', 'issues', 'priority','hasnotes','notes'];\n  activeMedicationsDataSource: any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.activeMedicationsDataSource = this.dataService.activeMedicationsDataSource;\n  }\n\n  ngAfterViewInit(): void {\n    this.activeMedicationsDataSource.sort = this.sort;\n    this.activeMedicationsDataSource.paginator = this.paginator;\n  }\n\n\n  openDialog(row) {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.hasBackdrop = true;\n    dialogConfig.width = '700px';\n    dialogConfig.data = {\n      medication: row.medication,\n      dateprescribed: row.effectiveDate,\n      refillsPermitted: row.refillsPermitted,\n      dosages: row.dosages,\n      frequency: row.frequency,\n      method: row.method,\n      notes: row.notes,\n      reasons: row.reasons\n\n\n    };\n    this.dialog.open(MedicationDialogComponent, dialogConfig);\n  }\n}\n","<div class=\"group-header\" >Active Medications</div>\n<table mat-table [dataSource]=\"activeMedicationsDataSource\" width=\"100%\" matSort>\n\n  <ng-container matColumnDef=\"medication\">\n    <th mat-header-cell  *matHeaderCellDef mat-sort-header>Name</th>\n    <td style=\"cursor: pointer;\" (click)=\"openDialog(med)\" mat-cell *matCellDef=\"let med\"> {{med.medication}} ( {{med.type}} ) </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"effectiveDate\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Effective Date</th>\n    <td mat-cell *matCellDef=\"let med\">{{med.effectiveDate}} </td>\n  </ng-container>\n\n\n\n\n  <ng-container matColumnDef=\"reasons\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Reason</th>\n    <td mat-cell *matCellDef=\"let med\"> {{med.reasons}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"dosages\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Dose</th>\n    <td mat-cell *matCellDef=\"let med\"> {{med.dosages}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"requestedBy\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Prescribing Clinician</th>\n    <td mat-cell *matCellDef=\"let med\"> {{med.requestedBy}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"issues\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Issues</th>\n    <td mat-cell *matCellDef=\"let med\"> {{med.issues}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"priority\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Priority</th>\n    <td mat-cell *matCellDef=\"let med\"> {{med.priority}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"hasnotes\">\n    <th mat-header-cell   *matHeaderCellDef mat-sort-header>Note(?)</th>\n    <td mat-cell   *matCellDef=\"let med\">\n      <div *ngIf=\"med.notes\">\n       Y\n      </div>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"notes\">\n    <th mat-header-cell [hidden]=\"true\" *matHeaderCellDef mat-sort-header>Notes</th>\n    <td mat-cell [hidden]=\"true\" *matCellDef=\"let med\"> {{med.notes}} </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" [pageSize]=\"20\" showFirstLastButtons></mat-paginator>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ConditionHistory} from '../generated-data-api';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-diagnosis-dialog',\n  templateUrl: './diagnosis-dialog.component.html',\n  styleUrls: ['./diagnosis-dialog.component.css']\n\n})\nexport class DiagnosisDialogComponent implements OnInit {\n\n  displayedColumns = ['description', 'onset', 'recorded', 'abatement','status','note'];\n  dataSource;\n  name: string;\n  condition: string;\n  history: ConditionHistory[] = [];\n\n  constructor(private dialogRef: MatDialogRef<DiagnosisDialogComponent>,\n              @Inject(MAT_DIALOG_DATA)  data: { name: string, condition: string, history: ConditionHistory[] }) {\n    this.name = data.name;\n    this.condition = data.condition;\n    this.history = data.history;\n\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.history);\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<h3>Diagnostic History - {{name}} - {{condition}}</h3>\n<mat-dialog-content>\n  <mat-table [dataSource]=\"dataSource\" class=\"\">\n    <!-- description Column -->\n    <ng-container matColumnDef=\"description\">\n      <mat-header-cell *matHeaderCellDef>Condition Description</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\"> {{history.code.text | nullCheck}} </mat-cell>\n    </ng-container>\n    <!-- onset Column -->\n    <ng-container matColumnDef=\"onset\">\n      <mat-header-cell *matHeaderCellDef> Onset</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\"> {{history.onset | nullCheck}} </mat-cell>\n    </ng-container>\n    <!-- recorded Column -->\n    <ng-container matColumnDef=\"recorded\">\n      <mat-header-cell *matHeaderCellDef> Recorded</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\"> {{history.recorded | date: 'MM/dd/yyyy'}} </mat-cell>\n    </ng-container>\n    <!-- abatement Column -->\n    <ng-container matColumnDef=\"abatement\">\n      <mat-header-cell *matHeaderCellDef> Abatement</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\"> {{history.abatement | nullCheck}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef>Status</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\"> {{history.clinicalStatus | nullCheck}} </mat-cell>\n    </ng-container>\n    <!-- status Column -->\n    <ng-container matColumnDef=\"note\">\n      <mat-header-cell *matHeaderCellDef>Note</mat-header-cell>\n      <mat-cell *matCellDef=\"let history\">{{history.note | nullCheck}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\" (mouseover)=\"row.hovered = true\"\n      (mouseout)=\"row.hovered = false\"></mat-row>\n  </mat-table>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"mat-raised-button mat-primary\" (click)=\"close()\">Close</button>\n</mat-dialog-actions>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { MessageService } from './message.service';\nimport { getPatient, getPatientsByName, getSummaryConditions, getSummarySocialConcerns } from 'e-care-common-data-services';\nimport { MccCondition, MccConditionList, MccPatient, MccPatientSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport { SocialConcern } from '../generated-data-api';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class SubjectDataService {\n\n  // baseServer = environment.mccapiUrl;\n\n  private patientURL = '/patient';\n  private conditionSummaryURL = '/conditionsummary';\n  private concernURL = '/socialconcerns';\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) { }\n\n  /** GET Demographic by id. Return `undefined` when id not found */\n  getSubjectNo404<Data>(id: string): Observable<MccPatientSummary> {\n    return from(getPatientsByName(id))\n      .pipe(\n        map(demographics => demographics[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<MccPatientSummary>(`Subject id=${id}`))\n      );\n  }\n\n  /** GET Subject by id. Will 404 if id not found */\n  getSubject(id: string): Observable<MccPatientSummary> {\n    return from(getPatient(id)).pipe(\n      tap(_ => this.log(`fetched subject id=${id}`)),\n      catchError(this.handleError<MccPatientSummary>(`getSubject id=${id}`))\n    );\n  }\n\n  /** GET Subjects by searchString. Will 404 if id not found */\n  getSubjects(searchFor: string): Observable<MccPatientSummary> {\n    return from(getPatientsByName(searchFor)).pipe(\n      map(patient => patient[0]),\n      tap(_ => this.log(`fetched subject id=${_.id}`)),\n      catchError(this.handleError<MccPatientSummary>(`getSubjects searchFor=${searchFor}`))\n    );\n  }\n\n\n  getConditions(id: string): Observable<MccConditionList> {\n    // const url = `${environment.mccapiUrl}${this.conditionSummaryURL}?subject=${id}`;\n\n    return from(getSummaryConditions()).pipe(\n      tap((_) => { this.log; console.log(\"Fetched Conditions\", _); }),\n      catchError(this.handleError<MccConditionList>('getConditions'))\n    );\n\n  }\n  getSocialConcerns(id: string, careplan: string): Observable<SocialConcern[]> {\n    return from(getSummarySocialConcerns()).pipe(\n      tap(_ => {\n        this.log('fetched Concern')\n      }),\n      catchError(this.handleError<SocialConcern[]>('getSocialConcerns', []))\n    );\n\n  }\n  getPateintsSortedByName() {\n    /*\n    https://api.logicahealth.org/MCCeCarePlanTest/open/Patient?_sort=family,given\n     */\n\n  }\n\n  getTotalPatients() {\n\n    /*\n    https://api.logicahealth.org/MCCeCarePlanTest/open/Patient?_count=0\n    body.total\n     */\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`subject-data-service: ${message}`);\n  }\n\n\n}\n","import axios from 'axios';\nimport { environment } from '../../environments/environment';\n\nconst API_PATH = environment.logEndpointUri;\nconst BEARER_TOKEN = environment.logApiKey;\n\nexport type LogRequest = {\n  level?: 'error' | 'warn' | 'info' | 'debug';\n  event?: string;\n  page?: string;\n  message: string;\n}\n\nexport type LogResponse = {\n  readonly url: string;\n  readonly ok: boolean;\n  readonly status: number;\n  readonly statusText: string;\n  readonly body: any;\n}\n\nexport const doLog = async (request: LogRequest): Promise<LogResponse> => new Promise(async (resolve) => {\n  const url = `${API_PATH}/log/do-log`;\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${BEARER_TOKEN}`\n      }\n    }\n\n    const response = await axios.post(url, request, config);\n    resolve(response.data)\n  } catch (error) {\n    // Should continue with the app even if logging fails\n    console.error(error);\n    resolve({\n      url: '/log/do-log',\n      ok: false,\n      status: 0,\n      statusText: 'Error',\n      body: error\n    })\n  }\n})\n","import { Component, OnInit } from '@angular/core';\nimport { Observation } from 'fhir/r4';\nimport { Constants } from '../common/constants';\nimport { DataService } from '../services/data.service';\nimport { formatEffectiveDateNew, getDisplayValueNew } from '../util/utility-functions';\ndeclare var window: any;\n@Component({\n  selector: 'app-clinical-exam-results',\n  templateUrl: './clinical-exam-results.component.html',\n  styleUrls: ['./clinical-exam-results.component.css']\n})\nexport class ClinicalExamResultsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getWotIsLoaded(): boolean {\n    return window[Constants.WotIsLoaded];\n  }\n\n  getBPisLoaded(): boolean {\n    return window[Constants.BPisLoaded];\n  }\n\n  getDisplayValue(value: Observation): any {\n    return getDisplayValueNew(value);\n  }\n\n  getEffectiveValue(value: string): any {\n    return formatEffectiveDateNew(value);\n   }\n\n}\n","<div class=\"group-header\">Exam</div>\n<table class=\"resultTable\" width=\"100%\" valign=\"top\">\n\n\n\n  <tr class=\"resultTableHeader\" >\n    <td><b>Test</b></td>\n    <td><b>Result</b></td>\n    <td><b>Date</b></td>\n  </tr>\n\n\n  <tr *ngFor=\"let res of dataservice.exam\">\n    <td>{{res.code.coding[0].display}}</td>\n    <td>{{getDisplayValue(res)}}</td>\n    <td>{{getEffectiveValue(res.effectiveDateTime)}}</td>\n  </tr>\n</table>\n","import { Observation, GoalTarget } from 'fhir/r4';\nimport { Egfr } from '../datamodel/egfr';\nimport { Effective, GenericType, MccDate } from '../generated-data-api';\n\nexport function getInnerValue(value: GenericType): any {\n  let rval: any = 0;\n\n  if (isNaN(rval)) {\n    rval = 0;\n  }\n\n  if (value !== undefined) {\n    switch (value.valueType) {\n      case 'String': {\n        rval = value.stringValue;\n        break;\n      }\n      case 'Integer': {\n        rval = value.integerValue;\n        break;\n      }\n      case 'Boolean': {\n        rval = value.booleanValue;\n        break;\n      }\n      case 'Quantity': {\n        rval = value.quantityValue.value;\n        break;\n      }\n      case 'Range': {\n        rval = value.quantityValue.value;\n        break;\n      }\n    }\n  }\n  return rval;\n}\n\nexport function getDisplayValueExtract(value: any): any {\n  if (value.valueString) {\n    return value.valueString;\n  } else if (value.valueInteger) {\n    return value.valueInteger.toString();\n  } else if (value.valueBoolean) {\n    return String(value.valueBoolean)\n  } else if (value.valueCodeableConcept) {\n    return value.valueCodeableConcept.coding[0].display;\n  } else if (value.valueQuantity) {\n    return `${value.valueQuantity.value} ${value.valueQuantity.unit ?? ''}`\n  } else if (value.valueRange) {\n    return `${value.valueRange.low.value} - ${value.valueRange.high.value} ${value.valueRange.high.unit}`\n  }\n}\n\nexport function getDisplayValueNew(value: Observation): any {\n  let formatted = 'Unknown Type';\n\n  if (value !== undefined) {\n\n    if (value.component) {\n      const componentValue = value.component?.reduce((acc, curr) => {\n        if (getDisplayValueExtract(curr)) {\n          acc.push(getDisplayValueExtract(curr));\n        }\n\n        return acc;\n      }, [])?.join(',');\n\n      formatted = componentValue;\n    } else {\n      formatted = getDisplayValueExtract(value);\n    }\n\n    return formatted;\n  }\n}\n\nexport function getDisplayValue(value: GenericType): any {\n  let formatted = 'Unknown Type: ';\n  let rval = 0;\n\n  if (isNaN(rval)) {\n    rval = 0;\n  }\n\n  if (value !== undefined) {\n    formatted += ' ' + value.valueType;\n    switch (value.valueType) {\n      case 'String': {\n        formatted = value.stringValue;\n        break;\n      }\n      case 'Integer': {\n        formatted = value.integerValue.toString();\n        break;\n      }\n      case 'Boolean': {\n        formatted = String(value.booleanValue);\n        break;\n      }\n      case 'boolean': {\n        formatted = String(value.booleanValue);\n        break;\n      }\n      case 'CodeableConcept': {\n        formatted = value.codeableConceptValue.text;\n        break;\n      }\n      case 'Quantity': {\n        formatted = value.quantityValue.value + ' ' + (value.quantityValue.unit ? value.quantityValue.unit : \"\");\n        break;\n      }\n      case 'Range': {\n        formatted = value.rangeValue.low.value\n          + ' - ' + value.rangeValue.high.value\n          + ' ' + value.rangeValue.high.unit;\n        break;\n      }\n      case \"decimal\": {\n        formatted = value.decimalValue.toString();\n        break;\n      }\n      case \"string\":\n        formatted = value.stringValue;\n        break;\n    }\n    return formatted;\n  }\n}\n\nexport function formatEffectiveDateNew(ef: string): string {\n  if (!ef) {\n    return \"\";\n  }\n  if (ef) {\n    const date = new Date(ef);\n    return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n      .toISOString()\n      .split('T')[0];\n  }\n}\n\nexport function formatEffectiveDate(ef: Effective): string {\n  if (!ef) {\n    return \"\";\n  }\n  if (ef.dateTime && ef.dateTime.date) {\n    const date = new Date(ef.dateTime.date);\n    return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n      .toISOString()\n      .split('T')[0];\n  }\n}\n\nexport function formatMccDate(mccDate: MccDate): string {\n  if (!mccDate) {\n    return \"\";\n  }\n  if (mccDate.date) {\n    const date = new Date(mccDate.date);\n    return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n      .toISOString()\n      .split('T')[0];\n  }\n}\n\nexport function formatGoalTargetValue(target: GoalTarget, mostRecentResultValue: string): any[] {\n  let formatted = '';\n  let highlighted = false;\n  let rval = 0;\n  let qval = 0;\n  let highval = 0;\n  let lowval = 0;\n\n  rval = Number(mostRecentResultValue);\n  if (isNaN(rval)) {\n    rval = 0;\n  }\n\n  if (target !== undefined) {\n    if (target.detailString) {\n      formatted = target.detailString;\n    } else if (target.detailInteger) {\n      formatted = target.detailInteger.toString();\n    } else if (target.detailBoolean) {\n      formatted = String(target.detailBoolean)\n    } else if (target.detailCodeableConcept) {\n      formatted = target.detailCodeableConcept.text;\n    } else if (target.detailQuantity) {\n      formatted = target.detailQuantity.comparator\n      + target.detailQuantity.value.toString()\n      + ' ' + target.detailQuantity.unit;\n      qval = Number(target.detailQuantity.value);\n      if (!isNaN(qval)) {\n        if (target.detailQuantity.comparator === '<') {\n          if (rval >= qval) {\n            highlighted = true;\n          }\n        }\n        if (target.detailQuantity.comparator === '>') {\n          if (rval <= qval) {\n            highlighted = true;\n          }\n        }\n      }\n    } else if (target.detailRange) {\n      formatted = target.detailRange.low.value\n      + ' - ' + target.detailRange.high.value\n      + ' ' + target.detailRange.high.unit;\n\n      highval = Number(target.detailRange.high.value);\n      lowval = Number(target.detailRange.low.value);\n      if (!isNaN(lowval) && !isNaN(highval)) {\n        if (rval < lowval || rval > highval) {\n          highlighted = true;\n        }\n      }\n    } else {\n      formatted += '';\n    }\n  }\n\n  return [formatted, highlighted];\n\n}\n\nexport function reformatYYYYMMDD(dt): string {\n  return dt;\n  if (dt) {\n    const date = new Date(dt);\n    return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n      .toISOString()\n      .split('T')[0];\n  } else {\n    return '';\n  }\n}\n\nexport function getLineChartOptionsObject(min?: number, max?: number, suggestedMinDate?: any, suggestedMaxDate?: any): {} {\n  const opts =\n  {\n    elements: {\n      line: {\n        tension: 0\n      }\n    },\n    responsive: false,\n    maintainAspectRatio: true,\n    scales: {\n      yAxes: [(min && max) ? ({\n        ticks: {\n          suggestedMax: max,\n          suggestedMin: min\n        }\n      }) : ({})],\n      xAxes: [{\n        type: 'time',\n        distribution: 'linear',\n        ticks: {\n          // min: suggestedMinDate,\n          // max: suggestedMaxDate,\n          maxTicksLimit: 7\n        },\n        time: {\n          // unit: 'month',\n          // format: 'dateFormat',\n          displayFormats: {\n            millisecond: 'D MMM, h:mm a',\n            second: 'D MMM, h:mm a',\n            minute: 'D MMM, h:mm a',\n            hour: 'D MMM, h:mm a',\n            day: 'D MMM',\n            week: 'll',\n            month: 'MMM',\n            quarter: 'll',\n            year: 'll'\n          },\n          tooltipFormat: 'MM-DD-YYYY',\n        }\n      }]\n    }\n  };\n\n  /*\n            millisecond: 'MMM DD',\n            second: 'MMM DD',\n            minute: 'MMM DD',\n            hour: 'MMM DD',\n            day: 'MMM DD',\n            week: 'MMM DD',\n            month: 'MMM DD',\n            quarter: 'MMM DD',\n            year: 'MMM DD',\n   */\n\n  return opts;\n}\n\nexport function getEgrLineChartAnnotationsObject() {\n  const annotations = {\n    annotations: [\n      {\n        drawTime: 'beforeDatasetsDraw',\n        type: 'box',\n        id: 'egfr-critical',\n        xScaleID: 'x-axis-0',\n        yScaleID: 'y-axis-0',\n        borderWidth: 0,\n        yMin: 0,\n        yMax: 15,\n        backgroundColor: 'rgba(227, 127, 104,0.3)'\n      },\n      {\n        drawTime: 'beforeDatasetsDraw',\n        type: 'box',\n        id: 'egfr-ok',\n        xScaleID: 'x-axis-0',\n        yScaleID: 'y-axis-0',\n        borderWidth: 0,\n        yMin: 15,\n        yMax: 60,\n        backgroundColor: 'rgba(247, 245, 116,0.3)'\n      },\n      {\n        drawTime: 'beforeDatasetsDraw',\n        type: 'box',\n        id: 'egfr-warning',\n        xScaleID: 'x-axis-0',\n        yScaleID: 'y-axis-0',\n        borderWidth: 0,\n        yMin: 60,\n        backgroundColor: 'rgba(128, 204, 113,0.3)'\n      }\n    ]\n  };\n  return annotations;\n}\n\nexport function getUacrLineChartAnnotationsObject() {\n  const annotations = {\n    annotations: [{\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'uacr-warning',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 0,\n      yMax: 30,\n      backgroundColor: 'rgba(128, 204, 113,0.3)'\n    },\n    {\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'uacr-ok',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 30,\n      yMax: 300,\n      backgroundColor: 'rgba(247, 245, 116,0.3)'\n    },\n    {\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'uacr-critical',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 300,\n      backgroundColor: 'rgba(227, 127, 104,0.3)'\n    }\n    ]\n  };\n  return annotations;\n}\n\nexport function getWotLineChartAnnotationsObject() {\n  const annotations = {\n    annotations: [{\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'wot-warning',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 50,\n      yMax: 105,\n      backgroundColor: 'rgba(128, 204, 113,0.3)'\n    },\n    {\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'wot-ok',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 105,\n      yMax: 260,\n      backgroundColor: 'rgba(247, 245, 116,0.3)'\n    },\n    {\n      drawTime: 'beforeDatasetsDraw',\n      type: 'box',\n      id: 'wot-critical',\n      xScaleID: 'x-axis-0',\n      yScaleID: 'y-axis-0',\n      borderWidth: 0,\n      yMin: 260,\n      backgroundColor: 'rgba(227, 127, 104,0.3)'\n    }\n    ]\n  };\n  return annotations;\n}\n\nexport function formatEgfrResult(egfr: number, unit: string): string {\n  let ret = '';\n  if (egfr && unit) {\n    ret = egfr.toString() + ' '\n      + unit.substring(0, unit.length - 1)\n      + '<sup>' + unit.substring(unit.length - 1) + '</sup>';\n  }\n  else if (egfr && !unit) {\n    ret = egfr.toString() + ' ' + 'mL/min/1.73m<sup>2</sup>';\n  }\n  return ret;\n}\n\nexport function formatUacrResult(uacr: number, unit: string): string {\n  let ret = '';\n  if (uacr && unit) {\n    ret = uacr.toString() + ' ' + unit;\n  }\n  return ret;\n}\n\nexport function formatWotResult(value: number, unit: string): string {\n  let ret = '';\n  if (value && unit) {\n    ret = value.toString() + ' ' + unit;\n  }\n  return ret;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../services/data.service';\n\n@Component({\n  selector: 'app-patient-goals',\n  templateUrl: './patient-goals.component.html',\n  styleUrls: ['./patient-goals.component.css']\n})\nexport class PatientGoalsComponent implements OnInit {\n\n  constructor(public dataservice: DataService) { }\n\n  displayedColumns = ['rank', 'description', 'created', 'targetdate', 'status'];\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"group-header\">Patient Goals</div>\n<table mat-table [dataSource]=\"dataservice.goals.activePatientGoals\" width=\"100%\">\n\n  <ng-container matColumnDef=\"rank\">\n    <th mat-header-cell *matHeaderCellDef>Priority</th>\n    <td mat-cell *matCellDef=\"let goal\">\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('high')\">priority_high</mat-icon>\n      <mat-icon *ngIf=\"goal.priority.toLowerCase().includes('low')\">low_priority</mat-icon>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Goal</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.description}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"created\">\n    <th mat-header-cell *matHeaderCellDef>Created</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.startDateText}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"targetdate\">\n    <th mat-header-cell *matHeaderCellDef>Target Date</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.targetDateText}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef>Status</th>\n    <td mat-cell *matCellDef=\"let goal\"> {{goal.achievementStatus.text}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      [ngClass]=\"{hovered: row.hovered, highlighted: row.highlighted}\" (click)=\"row.highlighted = !row.highlighted\"\n      (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n</table>\n\n<button>Add Patient Goal</button>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MccEducationSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport moment from 'moment';\nimport { Constants } from '../common/constants';\nimport { EducationSummary, SocialConcern } from '../generated-data-api';\nimport { DataService } from '../services/data.service';\n\ndeclare var window: any;\n\n@Component({\n  selector: 'app-education-panel',\n  templateUrl: './education-panel.component.html',\n  styleUrls: ['./education-panel.component.css']\n})\nexport class EducationPanelComponent implements OnInit {\n  dataSource: MatTableDataSource<MccEducationSummary>;\n  displayedColumns = ['topic', 'displayDate', 'performer', 'reasons', 'outcome', 'status'];\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataService.education);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'topic': return item[property].text;\n        case 'displayDate': return moment(item[property]).unix();\n        case 'outcome': return item[property].text;\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n","<div class=\"group-header\">Education</div>\n\n<table mat-table [dataSource]=\"dataSource\" matSort width=\"100%\">\n  <ng-container matColumnDef=\"topic\">\n    <th mat-header-cell *matHeaderCellDef width=\"35%\" mat-sort-header>Topic</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.topic.text}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"displayDate\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.displayDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"performer\" width=\"15%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Performer</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.performer}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"reasons\" width=\"20%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Reason</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.reasons}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"outcome\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Outcome</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.outcome.text}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\" width=\"10%\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.status | titlecase}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'outofrange': row.status == 'high'}\"\n    (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patient-choices',\n  templateUrl: './patient-choices.component.html',\n  styleUrls: ['./patient-choices.component.css']\n})\nexport class PatientChoicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"group-header\">Patient Choices</div>\n<table>\n  <tr>\n    <td>Renal Replacement Therapy:</td>\n    <td>\n      <mat-form-field>\n        <mat-label>Select Preferred Modality</mat-label>\n        <mat-select>\n          <mat-option>None</mat-option>\n          <mat-option value=\"Hemodialysis\">Hemodialysis</mat-option>\n          <mat-option value=\"Peritoneal Dialysis\">Peritoneal Dialysis</mat-option>\n          <mat-option value=\"Transplant\">Transplant</mat-option>\n          <mat-option value=\"Supportive Care with No RRT\">Supportive Care with No RRT</mat-option>\n          <mat-option value=\"Undecided\">Undecided</mat-option>\n          <mat-option value=\"Other\">Other</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </td>\n  </tr>\n</table>\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { concatMap, delay, retryWhen } from 'rxjs/operators';\n\nexport const retryCount = 3;\nexport const retryWaitMilliSeconds = 1000;\n\n@Injectable()\nexport class RetryInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        return next.handle(request).pipe(\n            retryWhen(error =>\n                error.pipe(\n                    concatMap((error, count) => {\n                        if (count <= retryCount && error.status == 404) {\n                            console.error(\"404, retry \" + retryCount, request.url)\n                            return of(error);\n                        }\n                        return throwError(error);\n                    }),\n                    delay(retryWaitMilliSeconds)\n                )\n            )\n        )\n    }\n}","export type { LogRequest, LogResponse } from './log-service';\nexport { doLog } from './log-service'\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    console.log('MessageService: ' + message);\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HealthAndSocialConcernsComponent} from './health-and-social-concerns/health-and-social-concerns.component';\nimport { GoalsComponent } from './goals/goals.component';\nimport { MaintenanceAndInterventionsComponent } from './maintenance-and-interventions/maintenance-and-interventions.component';\nimport { HealthStatusComponent } from './health-status/health-status.component';\nimport { CareTeamComponent } from './care-team/care-team.component';\nimport {HealthGuard} from './health.guard';\nimport { Launch } from './launch/launch';\n\n\nconst routes: Routes = [\n  { path: 'health', component:  HealthAndSocialConcernsComponent},\n  { path: 'goals', component:  GoalsComponent},\n  { path: 'maint', component: MaintenanceAndInterventionsComponent},\n  { path: 'status', component: HealthStatusComponent},\n  { path: 'care', component: CareTeamComponent},\n  { path: 'launch', component: Launch},\n  { path: '', redirectTo: 'goals', pathMatch: 'full',  canActivate: [HealthGuard] }\n];\nexport const appRouting = RouterModule.forRoot(routes, {enableTracing: false});\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {enableTracing: false}),\n    CommonModule\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-care-team',\n  templateUrl: './care-team.component.html',\n  styleUrls: ['./care-team.component.css']\n})\nexport class CareTeamComponent implements OnInit {\n\n\n  constructor(public dataservice: DataService) {\n  }\n  gridColumns = 4;\n\n  iconNames = {\n    types:\n      [\n        { type: 'person', icon: 'person' },\n        { type: 'organization', icon: 'group' }\n      ],\n    roles:\n      [\n        { role: 'patient', icon: 'sick' },\n        { role: 'catering', icon: 'food_bank' },\n        { role: 'physician', icon: 'medical_services' },\n        { role: 'nurse', icon: 'medical_services' },\n        { role: 'caregiver', icon: 'medical_services' },\n        { role: 'ologist', icon: 'medical_services' },\n        { role: 'dietician', icon: 'fastfood' },\n        { role: 'social worker', icon: 'psychology' },\n        { role: 'pharmacist', icon: 'medical_services' },\n      ]\n  };\n\n  ngOnInit(): void {\n\n  }\n\n  getTypeIcon(type) {\n    if (!type)\n      return '';\n    const icon = this.iconNames.types.filter(t => type.toLowerCase().includes(t.type.toLowerCase()));\n    if (icon.length > 0) {\n      return icon[0].icon;\n    } else {\n      return '';\n    }\n  }\n\n  getRoleIcon(role) {\n    if (!role)\n      return '';\n    const icon = this.iconNames.roles.filter(r => role.toLowerCase().includes(r.role.toLowerCase()));\n    if (icon.length > 0) {\n      return icon[0].icon;\n    } else {\n      return '';\n    }\n  }\n\n}\n","<div class=\"content\" fxLayout=\"row wrap\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"16px grid\">\n  <div [fxFlex]=\"(100/gridColumns) + '%'\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" *ngFor=\"let contact of dataservice.contacts\">\n    <mat-card class=\"mat-elevation-z4\">\n      <mat-card-header>\n        <mat-icon mat-card-avatar>{{getTypeIcon(contact.type)}}</mat-icon>\n        <mat-icon mat-card-avatar>{{getRoleIcon(contact.role)}}</mat-icon>\n        <mat-card-title>{{contact.name}}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <table>\n          <tr>\n            <td style=\"font-weight:bold\">Role:</td><td>{{contact.role}}</td>\n          </tr>\n          <tr>\n            <td style=\"font-weight:bold\">Phone:</td><td>{{contact.phone}}</td>\n          </tr>\n          <tr>\n            <td style=\"font-weight:bold\">Email:</td><td>{{contact.email}}</td>\n          </tr>\n          <tr>\n            <td style=\"font-weight:bold\">Address:</td><td>{{contact.address}}</td>\n          </tr>\n        </table>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MccReferralSummary } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-referral-panel',\n  templateUrl: './referral-panel.component.html',\n  styleUrls: ['./referral-panel.component.css']\n})\nexport class ReferralPanelComponent implements OnInit {\n  dataSource: MatTableDataSource<MccReferralSummary>;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataService) { }\n  displayedColumns = ['purpose', 'date', 'referrer', 'receiver'];\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.dataService.referrals);\n    this.dataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'purpose': return item[property].text;\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n}\n","<div class=\"group-header\">Referrals</div>\n<table mat-table [dataSource]=\"dataService.referrals\" width=\"100%\" matSort>\n  <ng-container matColumnDef=\"purpose\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Purpose</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.purpose.text}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.displayDate | date}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"referrer\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Referring Clincian</th>\n    <td mat-cell *matCellDef=\"let item\"> {{item.referrer}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"receiver\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Receiving Clincian</th>\n    <td mat-cell *matCellDef=\"let i\"> {{i.receiver}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { ChartDataSets, ChartOptions, ChartPoint } from 'chart.js';\nimport moment from 'moment';\nimport { Label } from 'ng2-charts';\nimport { getLineChartOptionsObject } from '../util/utility-functions';\n\ninterface EgfrTableData {\n  date?: Date;\n  egfr?: any;\n  unit?: string;\n  test?: string;\n  isNumber?: boolean;\n}\n\ninterface EgfrData {\n  date?: Date;\n  value?: number;\n}\n\ninterface EgfrDataForDisplay {\n  test?: string;\n  value?: number;\n  unit?: string;\n  date?: Date;\n  result?: string;\n}\n\ninterface EgfrChartData {\n  data?: Array<EgfrData>;\n  label?: string;  /* Systolic, Diastolic */\n  fill?: boolean;  /* false */\n}\n\ninterface Egfr {\n  mostRecentEgfr?: EgfrDataForDisplay;\n  tableData?: Array<EgfrTableData>;\n  chartData?: Array<ChartDataSets>;\n  xAxisLabels?: Array<Label>;\n  suggestedMin?: any;\n  suggestedMax?: any;\n  lineChartOptions?: ChartOptions & { annotation: any };\n}\n\nconst emptyEgfrData: ChartPoint = {};\nconst emptyEgfrTableData: EgfrTableData[] = [];\nconst emptyEgfrChartData: ChartDataSets[] = [\n  {\n    data: [emptyEgfrData],\n    fill: false,\n    label: 'eGFR'\n  }];\n\nconst emptyEgfr: Egfr = {\n  mostRecentEgfr: {},\n  tableData: emptyEgfrTableData,\n  chartData: emptyEgfrChartData,\n  xAxisLabels: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  suggestedMin: moment(new Date('2020-01-01')),\n  suggestedMax: moment('2020-06-30'),\n  lineChartOptions: { ...getLineChartOptionsObject(10, 70, moment('2020-01-01'), moment('2020-06-30')), annotation: [] }\n};\n\nexport {\n  EgfrTableData,\n  EgfrData,\n  EgfrChartData,\n  Egfr,\n  emptyEgfr,\n  emptyEgfrChartData,\n  emptyEgfrTableData,\n  emptyEgfrData\n};\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport moment from 'moment';\nimport { DataService } from '../services/data.service';\nimport { GoalsDataService } from '../services/goals-data-service.service';\n\n@Component({\n  selector: 'app-target-values',\n  templateUrl: './target-values.component.html',\n  styleUrls: ['./target-values.component.css']\n})\nexport class TargetValuesComponent implements OnInit {\n  targetValuesDataSource: any;\n\n  constructor(public dataservice: DataService, public goalsdataservice: GoalsDataService) {\n\n  }\n\n  displayedColumns = ['measure', 'mostRecentResult', 'date', 'target'];\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit(): void {\n    this.targetValuesDataSource = this.dataservice.targetValuesDataSource;\n    this.targetValuesDataSource.sortingDataAccessor = (item, property): string | number => {\n      switch (property) {\n        case 'date': return moment(item[property]).unix();\n        default: return item[property];\n      }\n    };\n  }\n\n  ngAfterViewInit() {\n    this.targetValuesDataSource.sort = this.sort;\n  }\n  refreshTargets = () => {\n    this.targetValuesDataSource = this.dataservice.targetValuesDataSource;\n  }\n\n}\n","<div class=\"group-header\">Target Laboratory/Clinical Values</div>\n<table mat-table [dataSource]=\"targetValuesDataSource\" width=\"100%\" matSort>\n  <ng-container matColumnDef=\"measure\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Measure</th>\n    <td mat-cell *matCellDef=\"let target\"> {{target.measure}} ({{target.code}})</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"mostRecentResult\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Most Recent Result</th>\n    <td mat-cell *matCellDef=\"let target\"> {{target.mostRecentResult}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Test Date</th>\n    <td mat-cell *matCellDef=\"let target\"> {{target.date}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"target\">\n    <th mat-header-cell *matHeaderCellDef>Target (if available)</th>\n    <td mat-cell *matCellDef=\"let target\"> {{target.target}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n    [ngClass]=\"{'critical': row.status == 'high',  'outofrange': row.highlighted }\"\n    (click)=\"row.highlighted = !row.highlighted\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\">\n  </tr>\n</table>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Observation, GoalTarget } from 'fhir/r4';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, finalize, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\nimport { TargetValue } from '../datamodel/targetvalue';\nimport { formatGoalTargetValue, getDisplayValueNew } from '../util/utility-functions';\nimport { VitalSignsTableData } from '../datamodel/vitalSigns';\nimport { EgfrTableData } from '../datamodel/egfr';\nimport { UacrTableData } from '../datamodel/uacr';\nimport { WotTableData } from '../datamodel/weight-over-time';\nimport { ObservationCollection } from '../generated-data-api/models/ObservationCollection';\nimport {\n  getObservations as EccGetObservations,\n  getObservationsByValueSet as EccGetObservationsByValueSet,\n  getLatestObservation as EccGetLatestObservation,\n  getObservationsSegmented,\n  getSummaryGoals\n} from 'e-care-common-data-services';\nimport { MccCoding } from \"../generated-data-api/models/MccCoding\";\nimport { Constants } from '../common/constants';\nimport { MccGoalList } from 'e-care-common-data-services/build/main/types/mcc-types';\nimport { doLog } from '../log';\n\nenum observationCodes {\n  Systolic = '8480-6',\n  Diastolic = '8462-4',\n  Egfr = '69405-9',\n  Uacr = '9318-7',\n  Wot = '29463-7',\n  Blood_pressure = '85354-9'\n}\n\nenum observationValuesets {\n  // Egfr = '2.16.840.1.113883.3.6929.3.1000',\n  Egfr = '2.16.840.1.113762.1.4.1222.179',\n  Uacr = '2.16.840.1.113883.3.6929.2.1002'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GoalsDataService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private messageService: MessageService) {\n  }\n\n  // Get Goals by Subject Id\n  getGoals(id: string): Observable<MccGoalList> {\n    return from(getSummaryGoals()).pipe(\n      tap(_ => {\n        this.log('fetched Goal Summary')\n        doLog({\n          level: 'debug',\n          event: 'getGoals',\n          page: 'goals-data-service',\n          message: `getGoals: success`\n        })\n      }),\n      catchError(this.handleError<MccGoalList>('getGoals'))\n    );\n  }\n\n  // Get Patient Goal Targets by Subject Id and coding\n  // Create and return an observable object which emits from the multiple http requests\n  // each http request returns a Recent Observation Data\n  // associated with a Goal in the GoalTarget[] array passed in\n  // The Goal Target and Observation data is merged into a TargetValue object which is emitted\n  getPatientGoalTargets(patientId: string, targets: GoalTarget[]): Observable<TargetValue> {\n    return new Observable(observer => {\n      targets.map(gt => {\n        var foo;\nif (gt && gt.measure && gt.measure.coding && gt.measure.coding.length > 0) {\nfoo = gt.measure.coding[0].code;\n} else {\n  foo = 'xxxx';\n}\n\n        this.getMostRecentObservationResult(patientId, foo, true)\n          .subscribe(obs => {\n            let mostRecentResultValue = '';\n            let observationDate = '';\n            let rowHighlighted = false;\n            let formattedTargetValue = '';\n            if (obs !== undefined) {\n              if (obs.status !== 'unknown') {\n                if (getDisplayValueNew(obs)) {\n                  //  TODO:  Fix to handle as any value type\n                  mostRecentResultValue = getDisplayValueNew(obs);\n                }\n\n\n                if (obs.effectiveDateTime !== undefined) {\n                  observationDate = obs.effectiveDateTime.toString();\n                }\n\n                [formattedTargetValue, rowHighlighted] = formatGoalTargetValue(gt, mostRecentResultValue);\n\n                console.log({ mostRecentResultValue })\n                console.log({ gt })\n\n\n                const tv: TargetValue = {\n                  measure: gt.measure.text,\n                  date: observationDate, // todo: Get observation date when API is updated\n                  mostRecentResult:  mostRecentResultValue.toString(),\n                  target: formattedTargetValue,\n                  highlighted: rowHighlighted,\n                  status: obs.status\n                };\n                observer.next(tv);\n              }\n            }\n          });\n      });\n    });\n  }\n\n  getPatientVitalSigns(patientId: string): Observable<VitalSignsTableData> {\n    return new Observable(observer => {\n      this.getObservationsByPanel(patientId, observationCodes.Blood_pressure)\n        .pipe(finalize(() => {\n          observer.complete();\n        }))\n        .subscribe(observations => {\n          let i: number = 0;\n          observations.map(obs => {\n            let systolic = 0;\n            let diastolic = 0;\n            obs.component.map(c => {\n              // This works now, may not with different data sets\n              switch (c.code.coding[0].code) {\n                case observationCodes.Diastolic:\n                  diastolic = c.valueQuantity.value;\n                  break;\n                case observationCodes.Systolic:\n                  systolic = c.valueQuantity.value;\n                  break;\n                default:\n              }\n            });\n            const vs: VitalSignsTableData = {\n              date: new Date((obs.effectiveDateTime)),\n              diastolic,\n              systolic\n            };\n            observer.next(vs);\n          });\n        });\n    });\n  }\n\n  getPatientEgfr(patientId: string): Observable<EgfrTableData> {\n    return new Observable(observer => {\n      this.getSegementedObservationsByValueSet(patientId, observationValuesets.Egfr, \"mL/min/1.73m2,mL/min\")\n        .pipe(finalize(() => {\n          observer.complete();\n        }))\n        .subscribe(obsCollection => {\n          obsCollection.observations.map(observations => {\n            const display = this.formatEGFRCode(observations.primaryCode);\n            observations.observations.forEach(obs => {\n              const egfr: EgfrTableData = {\n                date: new Date(obs.effectiveDateTime),\n                test: display\n              };\n              egfr.egfr = obs.valueString ?? obs.valueQuantity\n              egfr.unit = obs.valueQuantity.unit ?? \"\";\n              egfr.isNumber = !obs.valueString\n              observer.next(egfr);\n            });\n          })\n        });\n    });\n  }\n\n  formatEGFRCode(primaryCode: MccCoding): string {\n    //\"Glomerular filtration rate/1.73 sq M.predicted [Volume Rate/Area] in Serum, Plasma or Blood\"\n    if (primaryCode.display && primaryCode.display.indexOf(\"1.73 sq M.\") > -1) {\n      let formattedString = \"\";\n      formattedString = primaryCode.display.substr(primaryCode.display.indexOf(\"sq M.\") + 5);\n      formattedString = formattedString.substr(0, formattedString.indexOf(\"[\"));\n      formattedString = formattedString + \"[\" + primaryCode.code + \"]\";\n      formattedString = formattedString.charAt(0).toUpperCase() + formattedString.slice(1);\n      return \"EGFR \" + formattedString;\n    }\n    else return primaryCode.display;\n  }\n\n  getPatientUacr(patientId: string): Observable<UacrTableData> {\n    return new Observable(observer => {\n      this.getObservationsByValueset(patientId, observationValuesets.Uacr)\n        .pipe(finalize(() => {\n          observer.complete();\n        }))\n        .subscribe(observations => {\n          observations.map(obs => {\n            const uacr: UacrTableData = {\n              date: new Date(obs.effectiveDateTime),\n              uacr: obs.valueQuantity.value,\n              unit: obs.valueQuantity.unit,\n              test: obs.code.text\n            };\n            observer.next(uacr);\n          });\n        });\n    });\n  }\n\n  getPatientWot(patientId: string): Observable<WotTableData> {\n    return new Observable(observer => {\n      this.getObservations(patientId, observationCodes.Wot)\n        .pipe(finalize(() => {\n          observer.complete();\n        }))\n        .subscribe(observations => {\n          observations.map(obs => {\n            switch (Constants.featureToggling.preferredUnits.wot) {\n              case \"kg\":\n                if (obs.valueQuantity.unit === \"lb\") {\n                  obs.valueQuantity.value = +(obs.valueQuantity.value * 0.453592).toFixed(1);\n                  obs.valueQuantity.unit = \"kg\";\n                }\n                break;\n              case \"lb\":\n                if (obs.valueQuantity.unit === \"kg\") {\n                  obs.valueQuantity.value = +(obs.valueQuantity.value * 2.20462).toFixed(0);\n                  obs.valueQuantity.unit = \"lb\";\n                }\n                break;\n            };\n            const wot: WotTableData = {\n              date: new Date(obs.effectiveDateTime),\n              value: obs.valueQuantity.value,\n              unit: obs.valueQuantity.unit,\n              test: obs.code.text\n            };\n            observer.next(wot);\n          });\n        });\n    });\n  }\n\n  getMostRecentObservationResult(patientId: string, code: string, translate?: boolean): Observable<Observation> {\n\n    return from(EccGetLatestObservation(code, translate)).pipe(\n      tap(_ => this.log(`fetched Observation patientId=${patientId} code=${code}`)),\n      catchError(this.handleError<Observation>(`getMostRecentObservationResult patientId=${patientId} code=${code}`))\n    );\n  }\n\n  getObservations(patientId: string, code: string): Observable<Observation[]> {\n\n    return from(EccGetObservations(code)).pipe(\n      tap(_ => this.log(`fetched Observation patientId=${patientId} code=${code}`)),\n      catchError(this.handleError<Observation[]>(`getObservations patientId=${patientId} code=${code}`))\n    );\n  }\n\n  getObservationsByPanel(patientId: string, code: string): Observable<Observation[]> {\n    return from(EccGetObservations(code, 'panel')).pipe(\n      tap(_ => this.log(`fetched Observation patientId=${patientId} code=${code}`)),\n      catchError(this.handleError<Observation[]>(`getObservations patientId=${patientId} code=${code}`))\n    );\n  }\n\n  getObservationsByValueset(patientId: string, valueSet: string): Observable<Observation[]> {\n    return from(EccGetObservationsByValueSet(valueSet)).pipe(\n      tap(_ => this.log(`fetched Observation patientId=${patientId} valueSet=${valueSet}`)),\n      catchError(this.handleError<Observation[]>(`getObservationsByValueset patientId=${patientId} valueSet=${valueSet}`))\n    );\n  }\n\n  getSegementedObservationsByValueSet(patientId: string, valueSet: string, unitTypes?: string): Observable<ObservationCollection> {\n    return from(getObservationsSegmented(valueSet, undefined, undefined, undefined, unitTypes)).pipe(catchError(this.handleError(`getSegementedObservationsByValueSet patientId=${patientId} valueSet=${valueSet}`)));\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`goal-data-service: ${message}`);\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}